version 3
run General-0-20250526-07:22:22-29224
attr configname General
attr datetime 20250526-07:22:22
attr datetimef 20250526-072222
attr experiment General
attr inifile omnetpp.ini
attr iterationvars ""
attr iterationvarsd ""
attr iterationvarsf ""
attr measurement ""
attr network LoopNetwork
attr processid 29224
attr repetition 0
attr replication #0
attr resultdir results
attr runnumber 0
attr seedset 0
config image-path ../../../inet-4.5.x/inet-4.5.x/images
config network LoopNetwork
config *.R*.rip.triggeredUpdate true
config *.r*.rip.splitHorizon true
config *.r*.rip.poisonReverse true

par LoopNetwork.h[0].ethg$o[0].channel typename "\"LoopNetwork.C\""
par LoopNetwork.h[0].ethg$o[0].channel disabled false
attr mutable ""
par LoopNetwork.h[0].ethg$o[0].channel delay 1e-07s
attr mutable ""
attr unit s
par LoopNetwork.h[0].ethg$o[0].channel datarate 1e+08bps
attr mutable ""
attr unit bps
par LoopNetwork.h[0].ethg$o[0].channel ber 0
attr mutable ""
par LoopNetwork.h[0].ethg$o[0].channel per 0
attr mutable ""
par LoopNetwork.r[0].ethg$o[0].channel typename "\"LoopNetwork.C\""
par LoopNetwork.r[0].ethg$o[0].channel disabled false
attr mutable ""
par LoopNetwork.r[0].ethg$o[0].channel delay 1e-07s
attr mutable ""
attr unit s
par LoopNetwork.r[0].ethg$o[0].channel datarate 1e+08bps
attr mutable ""
attr unit bps
par LoopNetwork.r[0].ethg$o[0].channel ber 0
attr mutable ""
par LoopNetwork.r[0].ethg$o[0].channel per 0
attr mutable ""
par LoopNetwork.h[1].ethg$o[0].channel typename "\"LoopNetwork.C\""
par LoopNetwork.h[1].ethg$o[0].channel disabled false
attr mutable ""
par LoopNetwork.h[1].ethg$o[0].channel delay 1e-07s
attr mutable ""
attr unit s
par LoopNetwork.h[1].ethg$o[0].channel datarate 1e+08bps
attr mutable ""
attr unit bps
par LoopNetwork.h[1].ethg$o[0].channel ber 0
attr mutable ""
par LoopNetwork.h[1].ethg$o[0].channel per 0
attr mutable ""
par LoopNetwork.r[1].ethg$o[0].channel typename "\"LoopNetwork.C\""
par LoopNetwork.r[1].ethg$o[0].channel disabled false
attr mutable ""
par LoopNetwork.r[1].ethg$o[0].channel delay 1e-07s
attr mutable ""
attr unit s
par LoopNetwork.r[1].ethg$o[0].channel datarate 1e+08bps
attr mutable ""
attr unit bps
par LoopNetwork.r[1].ethg$o[0].channel ber 0
attr mutable ""
par LoopNetwork.r[1].ethg$o[0].channel per 0
attr mutable ""
par LoopNetwork.h[2].ethg$o[0].channel typename "\"LoopNetwork.C\""
par LoopNetwork.h[2].ethg$o[0].channel disabled false
attr mutable ""
par LoopNetwork.h[2].ethg$o[0].channel delay 1e-07s
attr mutable ""
attr unit s
par LoopNetwork.h[2].ethg$o[0].channel datarate 1e+08bps
attr mutable ""
attr unit bps
par LoopNetwork.h[2].ethg$o[0].channel ber 0
attr mutable ""
par LoopNetwork.h[2].ethg$o[0].channel per 0
attr mutable ""
par LoopNetwork.r[2].ethg$o[0].channel typename "\"LoopNetwork.C\""
par LoopNetwork.r[2].ethg$o[0].channel disabled false
attr mutable ""
par LoopNetwork.r[2].ethg$o[0].channel delay 1e-07s
attr mutable ""
attr unit s
par LoopNetwork.r[2].ethg$o[0].channel datarate 1e+08bps
attr mutable ""
attr unit bps
par LoopNetwork.r[2].ethg$o[0].channel ber 0
attr mutable ""
par LoopNetwork.r[2].ethg$o[0].channel per 0
attr mutable ""
par LoopNetwork.r[0].ethg$o[1].channel typename "\"LoopNetwork.C\""
par LoopNetwork.r[0].ethg$o[1].channel disabled false
attr mutable ""
par LoopNetwork.r[0].ethg$o[1].channel delay 1e-07s
attr mutable ""
attr unit s
par LoopNetwork.r[0].ethg$o[1].channel datarate 1e+08bps
attr mutable ""
attr unit bps
par LoopNetwork.r[0].ethg$o[1].channel ber 0
attr mutable ""
par LoopNetwork.r[0].ethg$o[1].channel per 0
attr mutable ""
par LoopNetwork.r[1].ethg$o[1].channel typename "\"LoopNetwork.C\""
par LoopNetwork.r[1].ethg$o[1].channel disabled false
attr mutable ""
par LoopNetwork.r[1].ethg$o[1].channel delay 1e-07s
attr mutable ""
attr unit s
par LoopNetwork.r[1].ethg$o[1].channel datarate 1e+08bps
attr mutable ""
attr unit bps
par LoopNetwork.r[1].ethg$o[1].channel ber 0
attr mutable ""
par LoopNetwork.r[1].ethg$o[1].channel per 0
attr mutable ""
par LoopNetwork.r[1].ethg$o[2].channel typename "\"LoopNetwork.C\""
par LoopNetwork.r[1].ethg$o[2].channel disabled false
attr mutable ""
par LoopNetwork.r[1].ethg$o[2].channel delay 1e-07s
attr mutable ""
attr unit s
par LoopNetwork.r[1].ethg$o[2].channel datarate 1e+08bps
attr mutable ""
attr unit bps
par LoopNetwork.r[1].ethg$o[2].channel ber 0
attr mutable ""
par LoopNetwork.r[1].ethg$o[2].channel per 0
attr mutable ""
par LoopNetwork.r[2].ethg$o[1].channel typename "\"LoopNetwork.C\""
par LoopNetwork.r[2].ethg$o[1].channel disabled false
attr mutable ""
par LoopNetwork.r[2].ethg$o[1].channel delay 1e-07s
attr mutable ""
attr unit s
par LoopNetwork.r[2].ethg$o[1].channel datarate 1e+08bps
attr mutable ""
attr unit bps
par LoopNetwork.r[2].ethg$o[1].channel ber 0
attr mutable ""
par LoopNetwork.r[2].ethg$o[1].channel per 0
attr mutable ""
par LoopNetwork.r[2].ethg$o[2].channel typename "\"LoopNetwork.C\""
par LoopNetwork.r[2].ethg$o[2].channel disabled false
attr mutable ""
par LoopNetwork.r[2].ethg$o[2].channel delay 1e-07s
attr mutable ""
attr unit s
par LoopNetwork.r[2].ethg$o[2].channel datarate 1e+08bps
attr mutable ""
attr unit bps
par LoopNetwork.r[2].ethg$o[2].channel ber 0
attr mutable ""
par LoopNetwork.r[2].ethg$o[2].channel per 0
attr mutable ""
par LoopNetwork.r[0].ethg$o[2].channel typename "\"LoopNetwork.C\""
par LoopNetwork.r[0].ethg$o[2].channel disabled false
attr mutable ""
par LoopNetwork.r[0].ethg$o[2].channel delay 1e-07s
attr mutable ""
attr unit s
par LoopNetwork.r[0].ethg$o[2].channel datarate 1e+08bps
attr mutable ""
attr unit bps
par LoopNetwork.r[0].ethg$o[2].channel ber 0
attr mutable ""
par LoopNetwork.r[0].ethg$o[2].channel per 0
attr mutable ""
par LoopNetwork.r[0].ethg$i[0].channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].eth[0].phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].ethg$i[1].channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].eth[1].phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].ethg$i[2].channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].eth[2].phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].interfaceTable typename "\"inet.networklayer.common.InterfaceTable\""
par LoopNetwork.r[0].interfaceTable displayAddresses false
par LoopNetwork.r[0].cb typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[0].cb displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[0].cb forwardServiceRegistration true
par LoopNetwork.r[0].cb forwardProtocolRegistration true
par LoopNetwork.r[0].bl typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[0].bl displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[0].bl forwardServiceRegistration true
par LoopNetwork.r[0].bl forwardProtocolRegistration true
par LoopNetwork.r[0].ethernet typename "\"inet.linklayer.ethernet.basic.EthernetEncapsulation\""
par LoopNetwork.r[0].ethernet registerProtocol true
par LoopNetwork.r[0].ethernet interfaceTableModule "\"LoopNetwork.r[0].interfaceTable\""
par LoopNetwork.r[0].ethernet fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[0].ethernet stopOperationExtraTime -1s
attr unit s
par LoopNetwork.r[0].ethernet stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.r[0].ethernet decapPk:count 2
attr interpolationmode none
attr recordingmode count
attr source decapPk
attr title "packets decapsulated, count"
scalar LoopNetwork.r[0].ethernet decapPk:sum(packetBytes) 104
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source decapPk
attr title "packets decapsulated, sum(packetBytes)"
scalar LoopNetwork.r[0].ethernet encapPk:count 3
attr interpolationmode none
attr recordingmode count
attr source encapPk
attr title "packets encapsulated, count"
scalar LoopNetwork.r[0].ethernet encapPk:sum(packetBytes) 156
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source encapPk
attr title "packets encapsulated, sum(packetBytes)"
scalar LoopNetwork.r[0].ethernet pauseSent:count 0
attr recordingmode count
attr title "pause sent, count"
scalar LoopNetwork.r[0].ethernet pauseSent:sum 0
attr recordingmode sum
attr title "pause sent, sum"
par LoopNetwork.r[0].li typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[0].li displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[0].li forwardServiceRegistration true
par LoopNetwork.r[0].li forwardProtocolRegistration true
par LoopNetwork.r[0].lo[0].upperLayerIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].lo[0].lo.upperLayerOut.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].lo[0].lo typename "\"inet.linklayer.loopback.Loopback\""
par LoopNetwork.r[0].lo[0].lo interfaceTableModule "\"LoopNetwork.r[0].interfaceTable\""
par LoopNetwork.r[0].lo[0].lo mtu 4470B
attr unit B
scalar LoopNetwork.r[0].lo[0].lo rcvdPkFromHl:count 0
attr interpolationmode none
attr recordingmode count
attr source packetReceivedFromUpper
attr title "packets received from higher layer, count"
scalar LoopNetwork.r[0].lo[0].lo rcvdPkFromHl:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceivedFromUpper
attr title "packets received from higher layer, sum(packetBytes)"
scalar LoopNetwork.r[0].lo[0].lo passedUpPk:count 0
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed to higher layer, count"
scalar LoopNetwork.r[0].lo[0].lo passedUpPk:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, sum(packetBytes)"
par LoopNetwork.r[0].lo[0] typename "\"inet.linklayer.loopback.LoopbackInterface\""
par LoopNetwork.r[0].lo[0] displayStringTextFormat "\"%a (%i)\\n%m\""
par LoopNetwork.r[0].lo[0] recordPcap false
par LoopNetwork.r[0].lo[0] numPcapRecorders 0
par LoopNetwork.r[0].lo[0] interfaceTableModule "\"LoopNetwork.r[0].interfaceTable\""
scalar LoopNetwork.r[0].lo[0] packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, count"
scalar LoopNetwork.r[0].lo[0] packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, sum(packetBytes)"
scalar LoopNetwork.r[0].lo[0] packetDropNoCarrier:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, count"
scalar LoopNetwork.r[0].lo[0] packetDropNoCarrier:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, sum(packetBytes)"
par LoopNetwork.r[0].eth[0].mac.phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].eth[0].phys$i.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].eth[0].upperLayerIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].eth[0].mac.upperLayerOut.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].eth[0].queue typename "\"inet.linklayer.ethernet.common.EthernetQueue\""
par LoopNetwork.r[0].eth[0].queue displayStringTextFormat "\"contains %p pk (%l) pushed %u\\npulled %o removed %r dropped %d\""
par LoopNetwork.r[0].eth[0].queue packetCapacity 1000
par LoopNetwork.r[0].eth[0].queue dataCapacity -1b
attr unit b
par LoopNetwork.r[0].eth[0].queue dropperClass "\"inet::queueing::PacketAtCollectionEndDropper\""
par LoopNetwork.r[0].eth[0].queue comparatorClass "\"inet::EthernetFrameTypeComparator\""
par LoopNetwork.r[0].eth[0].queue bufferModule "\"\""
scalar LoopNetwork.r[0].eth[0].queue queueLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, last"
attr unit pk
scalar LoopNetwork.r[0].eth[0].queue queueLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, max"
attr unit pk
scalar LoopNetwork.r[0].eth[0].queue queueLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, timeavg"
attr unit pk
scalar LoopNetwork.r[0].eth[0].queue queueBitLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, last"
attr unit b
scalar LoopNetwork.r[0].eth[0].queue queueBitLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, max"
attr unit b
scalar LoopNetwork.r[0].eth[0].queue queueBitLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, timeavg"
attr unit b
statistic LoopNetwork.r[0].eth[0].queue queueingTime:histogram
field count 1
field mean 0
field stddev nan
field min 0
field max 0
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(packetPulled)
attr title "queueing times"
attr unit s
bin	-inf	0
bin	-0.5	0
bin	-0.48	0
bin	-0.46	0
bin	-0.44	0
bin	-0.42	0
bin	-0.4	0
bin	-0.38	0
bin	-0.36	0
bin	-0.34	0
bin	-0.32	0
bin	-0.3	0
bin	-0.28	0
bin	-0.26	0
bin	-0.24	0
bin	-0.22	0
bin	-0.2	0
bin	-0.18	0
bin	-0.16	0
bin	-0.14	0
bin	-0.12	0
bin	-0.1	0
bin	-0.08	0
bin	-0.06	0
bin	-0.04	0
bin	-0.02	0
bin	0	1
bin	0.02	0
bin	0.04	0
bin	0.06	0
bin	0.08	0
bin	0.1	0
bin	0.12	0
bin	0.14	0
bin	0.16	0
bin	0.18	0
bin	0.2	0
bin	0.22	0
bin	0.24	0
bin	0.26	0
bin	0.28	0
bin	0.3	0
bin	0.32	0
bin	0.34	0
bin	0.36	0
bin	0.38	0
bin	0.4	0
bin	0.42	0
bin	0.44	0
bin	0.46	0
bin	0.48	0
bin	0.5	0
scalar LoopNetwork.r[0].eth[0].queue outgoingPackets:count 1
attr recordingmode count
attr source packetPulled
attr title "outgoing packets, count"
attr unit pk
scalar LoopNetwork.r[0].eth[0].queue outgoingPacketLengths:sum 560
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPulled)
attr title "outgoing packet lengths, sum"
attr unit b
statistic LoopNetwork.r[0].eth[0].queue outgoingPacketLengths:histogram
field count 1
field mean 560
field stddev nan
field min 560
field max 560
field sum 560
field sqrsum 313600
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPulled)
attr title "outgoing packet lengths"
attr unit b
bin	-inf	0
bin	559	0
bin	560	1
bin	561	0
statistic LoopNetwork.r[0].eth[0].queue flowQueueingTime:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(demuxFlow(packetPulled))
attr title "flow queueing times"
attr unit s
bin	-inf	0
bin	0	0
bin	1	0
scalar LoopNetwork.r[0].eth[0].queue incomingPackets:count 1
attr recordingmode count
attr source packetPushStarted
attr title "incoming packets, count"
attr unit pk
scalar LoopNetwork.r[0].eth[0].queue incomingPacketLengths:sum 560
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths, sum"
attr unit b
statistic LoopNetwork.r[0].eth[0].queue incomingPacketLengths:histogram
field count 1
field mean 560
field stddev nan
field min 560
field max 560
field sum 560
field sqrsum 313600
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths"
attr unit b
bin	-inf	0
bin	559	0
bin	560	1
bin	561	0
scalar LoopNetwork.r[0].eth[0].queue droppedPacketsQueueOverflow:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsQueueOverflow(packetDropped)
attr title "dropped packets: queue overflow, count"
attr unit pk
scalar LoopNetwork.r[0].eth[0].queue droppedPacketLengthsQueueOverflow:sum 0
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetDropReasonIsQueueOverflow(packetDropped))
attr title "dropped packet lengths: queue overflow, sum"
attr unit b
par LoopNetwork.r[0].eth[0].mac typename "\"inet.linklayer.ethernet.basic.EthernetMac\""
par LoopNetwork.r[0].eth[0].mac interfaceTableModule "\"LoopNetwork.r[0].interfaceTable\""
par LoopNetwork.r[0].eth[0].mac displayStringTextFormat "\"rate: %b\\nsent: %s, rcvd: %r\\nqueue: %q, drop: %d\""
par LoopNetwork.r[0].eth[0].mac sendRawBytes false
par LoopNetwork.r[0].eth[0].mac promiscuous false
par LoopNetwork.r[0].eth[0].mac duplexMode true
par LoopNetwork.r[0].eth[0].mac mtu 1500B
attr unit B
par LoopNetwork.r[0].eth[0].mac fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[0].eth[0].mac stopOperationExtraTime -1s
attr unit s
par LoopNetwork.r[0].eth[0].mac stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.r[0].eth[0].mac "simulated time" 5313.5759468249
scalar LoopNetwork.r[0].eth[0].mac full-duplex 1
scalar LoopNetwork.r[0].eth[0].mac "frames/sec sent" 0.00018819717832349
scalar LoopNetwork.r[0].eth[0].mac "frames/sec rcvd" 0
scalar LoopNetwork.r[0].eth[0].mac "bits/sec sent" 0.10539041986115
scalar LoopNetwork.r[0].eth[0].mac "bits/sec rcvd" 0
scalar LoopNetwork.r[0].eth[0].mac "rx channel idle (%)" 100
scalar LoopNetwork.r[0].eth[0].mac "rx channel utilization (%)" 0
scalar LoopNetwork.r[0].eth[0].mac txPk:count 1
attr interpolationmode none
attr recordingmode count
attr source packetSentToLower
attr title "packets transmitted, count"
scalar LoopNetwork.r[0].eth[0].mac txPk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToLower
attr title "packets transmitted, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[0].mac packetReceivedFromUpper:count 1
attr interpolationmode none
attr recordingmode count
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, count"
scalar LoopNetwork.r[0].eth[0].mac packetReceivedFromUpper:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[0].mac passedUpPk:count 0
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed to higher layer, count"
scalar LoopNetwork.r[0].eth[0].mac passedUpPk:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[0].mac packetDropIncorrectlyReceived:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, count"
scalar LoopNetwork.r[0].eth[0].mac packetDropIncorrectlyReceived:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[0].mac packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, count"
scalar LoopNetwork.r[0].eth[0].mac packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[0].mac packetDropNotAddressedToUs:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, count"
scalar LoopNetwork.r[0].eth[0].mac packetDropNotAddressedToUs:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[0].mac rxPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units received, count"
scalar LoopNetwork.r[0].eth[0].mac rxPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units received, sum"
scalar LoopNetwork.r[0].eth[0].mac txPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units sent, count"
scalar LoopNetwork.r[0].eth[0].mac txPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units sent, sum"
scalar LoopNetwork.r[0].eth[0].mac rxPkOk:count 0
attr interpolationmode none
attr recordingmode count
attr source rxPkOk
attr title "packets received OK, count"
scalar LoopNetwork.r[0].eth[0].mac rxPkOk:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source rxPkOk
attr title "packets received OK, sum(packetBytes)"
par LoopNetwork.r[0].eth[0] typename "\"inet.linklayer.ethernet.EthernetInterface\""
par LoopNetwork.r[0].eth[0] displayStringTextFormat "\"%a (%i)\\n%m\""
par LoopNetwork.r[0].eth[0] recordPcap false
par LoopNetwork.r[0].eth[0] numPcapRecorders 0
par LoopNetwork.r[0].eth[0] interfaceTableModule "\"LoopNetwork.r[0].interfaceTable\""
par LoopNetwork.r[0].eth[0] protocol "\"ethernetmac\""
par LoopNetwork.r[0].eth[0] address "\"0A-AA-00-00-00-01\""
attr mutable ""
par LoopNetwork.r[0].eth[0] duplexMode true
par LoopNetwork.r[0].eth[0] csmacdSupport false
par LoopNetwork.r[0].eth[0] bitrate 0bps
attr unit bps
par LoopNetwork.r[0].eth[0] fcsMode "\"declared\""
attr enum declared,computed
scalar LoopNetwork.r[0].eth[0] packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, count"
scalar LoopNetwork.r[0].eth[0] packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[0] packetDropNoCarrier:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, count"
scalar LoopNetwork.r[0].eth[0] packetDropNoCarrier:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, sum(packetBytes)"
par LoopNetwork.r[0].eth[1].mac.phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].eth[1].phys$i.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].eth[1].upperLayerIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].eth[1].mac.upperLayerOut.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].eth[1].queue typename "\"inet.linklayer.ethernet.common.EthernetQueue\""
par LoopNetwork.r[0].eth[1].queue displayStringTextFormat "\"contains %p pk (%l) pushed %u\\npulled %o removed %r dropped %d\""
par LoopNetwork.r[0].eth[1].queue packetCapacity 1000
par LoopNetwork.r[0].eth[1].queue dataCapacity -1b
attr unit b
par LoopNetwork.r[0].eth[1].queue dropperClass "\"inet::queueing::PacketAtCollectionEndDropper\""
par LoopNetwork.r[0].eth[1].queue comparatorClass "\"inet::EthernetFrameTypeComparator\""
par LoopNetwork.r[0].eth[1].queue bufferModule "\"\""
scalar LoopNetwork.r[0].eth[1].queue queueLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, last"
attr unit pk
scalar LoopNetwork.r[0].eth[1].queue queueLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, max"
attr unit pk
scalar LoopNetwork.r[0].eth[1].queue queueLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, timeavg"
attr unit pk
scalar LoopNetwork.r[0].eth[1].queue queueBitLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, last"
attr unit b
scalar LoopNetwork.r[0].eth[1].queue queueBitLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, max"
attr unit b
scalar LoopNetwork.r[0].eth[1].queue queueBitLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, timeavg"
attr unit b
statistic LoopNetwork.r[0].eth[1].queue queueingTime:histogram
field count 1
field mean 0
field stddev nan
field min 0
field max 0
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(packetPulled)
attr title "queueing times"
attr unit s
bin	-inf	0
bin	-0.5	0
bin	-0.48	0
bin	-0.46	0
bin	-0.44	0
bin	-0.42	0
bin	-0.4	0
bin	-0.38	0
bin	-0.36	0
bin	-0.34	0
bin	-0.32	0
bin	-0.3	0
bin	-0.28	0
bin	-0.26	0
bin	-0.24	0
bin	-0.22	0
bin	-0.2	0
bin	-0.18	0
bin	-0.16	0
bin	-0.14	0
bin	-0.12	0
bin	-0.1	0
bin	-0.08	0
bin	-0.06	0
bin	-0.04	0
bin	-0.02	0
bin	0	1
bin	0.02	0
bin	0.04	0
bin	0.06	0
bin	0.08	0
bin	0.1	0
bin	0.12	0
bin	0.14	0
bin	0.16	0
bin	0.18	0
bin	0.2	0
bin	0.22	0
bin	0.24	0
bin	0.26	0
bin	0.28	0
bin	0.3	0
bin	0.32	0
bin	0.34	0
bin	0.36	0
bin	0.38	0
bin	0.4	0
bin	0.42	0
bin	0.44	0
bin	0.46	0
bin	0.48	0
bin	0.5	0
scalar LoopNetwork.r[0].eth[1].queue outgoingPackets:count 1
attr recordingmode count
attr source packetPulled
attr title "outgoing packets, count"
attr unit pk
scalar LoopNetwork.r[0].eth[1].queue outgoingPacketLengths:sum 560
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPulled)
attr title "outgoing packet lengths, sum"
attr unit b
statistic LoopNetwork.r[0].eth[1].queue outgoingPacketLengths:histogram
field count 1
field mean 560
field stddev nan
field min 560
field max 560
field sum 560
field sqrsum 313600
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPulled)
attr title "outgoing packet lengths"
attr unit b
bin	-inf	0
bin	559	0
bin	560	1
bin	561	0
statistic LoopNetwork.r[0].eth[1].queue flowQueueingTime:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(demuxFlow(packetPulled))
attr title "flow queueing times"
attr unit s
bin	-inf	0
bin	0	0
bin	1	0
scalar LoopNetwork.r[0].eth[1].queue incomingPackets:count 1
attr recordingmode count
attr source packetPushStarted
attr title "incoming packets, count"
attr unit pk
scalar LoopNetwork.r[0].eth[1].queue incomingPacketLengths:sum 560
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths, sum"
attr unit b
statistic LoopNetwork.r[0].eth[1].queue incomingPacketLengths:histogram
field count 1
field mean 560
field stddev nan
field min 560
field max 560
field sum 560
field sqrsum 313600
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths"
attr unit b
bin	-inf	0
bin	559	0
bin	560	1
bin	561	0
scalar LoopNetwork.r[0].eth[1].queue droppedPacketsQueueOverflow:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsQueueOverflow(packetDropped)
attr title "dropped packets: queue overflow, count"
attr unit pk
scalar LoopNetwork.r[0].eth[1].queue droppedPacketLengthsQueueOverflow:sum 0
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetDropReasonIsQueueOverflow(packetDropped))
attr title "dropped packet lengths: queue overflow, sum"
attr unit b
par LoopNetwork.r[0].eth[1].mac typename "\"inet.linklayer.ethernet.basic.EthernetMac\""
par LoopNetwork.r[0].eth[1].mac interfaceTableModule "\"LoopNetwork.r[0].interfaceTable\""
par LoopNetwork.r[0].eth[1].mac displayStringTextFormat "\"rate: %b\\nsent: %s, rcvd: %r\\nqueue: %q, drop: %d\""
par LoopNetwork.r[0].eth[1].mac sendRawBytes false
par LoopNetwork.r[0].eth[1].mac promiscuous false
par LoopNetwork.r[0].eth[1].mac duplexMode true
par LoopNetwork.r[0].eth[1].mac mtu 1500B
attr unit B
par LoopNetwork.r[0].eth[1].mac fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[0].eth[1].mac stopOperationExtraTime -1s
attr unit s
par LoopNetwork.r[0].eth[1].mac stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.r[0].eth[1].mac "simulated time" 5313.5759468249
scalar LoopNetwork.r[0].eth[1].mac full-duplex 1
scalar LoopNetwork.r[0].eth[1].mac "frames/sec sent" 0.00018819717832349
scalar LoopNetwork.r[0].eth[1].mac "frames/sec rcvd" 0.00018819717832349
scalar LoopNetwork.r[0].eth[1].mac "bits/sec sent" 0.10539041986115
scalar LoopNetwork.r[0].eth[1].mac "bits/sec rcvd" 0.10539041986115
scalar LoopNetwork.r[0].eth[1].mac "rx channel idle (%)" 99.999999882565
scalar LoopNetwork.r[0].eth[1].mac "rx channel utilization (%)" 1.1743503927386e-07
scalar LoopNetwork.r[0].eth[1].mac txPk:count 1
attr interpolationmode none
attr recordingmode count
attr source packetSentToLower
attr title "packets transmitted, count"
scalar LoopNetwork.r[0].eth[1].mac txPk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToLower
attr title "packets transmitted, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[1].mac packetReceivedFromUpper:count 1
attr interpolationmode none
attr recordingmode count
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, count"
scalar LoopNetwork.r[0].eth[1].mac packetReceivedFromUpper:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[1].mac passedUpPk:count 1
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed to higher layer, count"
scalar LoopNetwork.r[0].eth[1].mac passedUpPk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[1].mac packetDropIncorrectlyReceived:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, count"
scalar LoopNetwork.r[0].eth[1].mac packetDropIncorrectlyReceived:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[1].mac packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, count"
scalar LoopNetwork.r[0].eth[1].mac packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[1].mac packetDropNotAddressedToUs:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, count"
scalar LoopNetwork.r[0].eth[1].mac packetDropNotAddressedToUs:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[1].mac rxPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units received, count"
scalar LoopNetwork.r[0].eth[1].mac rxPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units received, sum"
scalar LoopNetwork.r[0].eth[1].mac txPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units sent, count"
scalar LoopNetwork.r[0].eth[1].mac txPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units sent, sum"
scalar LoopNetwork.r[0].eth[1].mac rxPkOk:count 1
attr interpolationmode none
attr recordingmode count
attr source rxPkOk
attr title "packets received OK, count"
scalar LoopNetwork.r[0].eth[1].mac rxPkOk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source rxPkOk
attr title "packets received OK, sum(packetBytes)"
par LoopNetwork.r[0].eth[1] typename "\"inet.linklayer.ethernet.EthernetInterface\""
par LoopNetwork.r[0].eth[1] displayStringTextFormat "\"%a (%i)\\n%m\""
par LoopNetwork.r[0].eth[1] recordPcap false
par LoopNetwork.r[0].eth[1] numPcapRecorders 0
par LoopNetwork.r[0].eth[1] interfaceTableModule "\"LoopNetwork.r[0].interfaceTable\""
par LoopNetwork.r[0].eth[1] protocol "\"ethernetmac\""
par LoopNetwork.r[0].eth[1] address "\"0A-AA-00-00-00-02\""
attr mutable ""
par LoopNetwork.r[0].eth[1] duplexMode true
par LoopNetwork.r[0].eth[1] csmacdSupport false
par LoopNetwork.r[0].eth[1] bitrate 0bps
attr unit bps
par LoopNetwork.r[0].eth[1] fcsMode "\"declared\""
attr enum declared,computed
scalar LoopNetwork.r[0].eth[1] packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, count"
scalar LoopNetwork.r[0].eth[1] packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[1] packetDropNoCarrier:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, count"
scalar LoopNetwork.r[0].eth[1] packetDropNoCarrier:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, sum(packetBytes)"
par LoopNetwork.r[0].eth[2].mac.phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].eth[2].phys$i.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].eth[2].upperLayerIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].eth[2].mac.upperLayerOut.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].eth[2].queue typename "\"inet.linklayer.ethernet.common.EthernetQueue\""
par LoopNetwork.r[0].eth[2].queue displayStringTextFormat "\"contains %p pk (%l) pushed %u\\npulled %o removed %r dropped %d\""
par LoopNetwork.r[0].eth[2].queue packetCapacity 1000
par LoopNetwork.r[0].eth[2].queue dataCapacity -1b
attr unit b
par LoopNetwork.r[0].eth[2].queue dropperClass "\"inet::queueing::PacketAtCollectionEndDropper\""
par LoopNetwork.r[0].eth[2].queue comparatorClass "\"inet::EthernetFrameTypeComparator\""
par LoopNetwork.r[0].eth[2].queue bufferModule "\"\""
scalar LoopNetwork.r[0].eth[2].queue queueLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, last"
attr unit pk
scalar LoopNetwork.r[0].eth[2].queue queueLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, max"
attr unit pk
scalar LoopNetwork.r[0].eth[2].queue queueLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, timeavg"
attr unit pk
scalar LoopNetwork.r[0].eth[2].queue queueBitLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, last"
attr unit b
scalar LoopNetwork.r[0].eth[2].queue queueBitLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, max"
attr unit b
scalar LoopNetwork.r[0].eth[2].queue queueBitLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, timeavg"
attr unit b
statistic LoopNetwork.r[0].eth[2].queue queueingTime:histogram
field count 1
field mean 0
field stddev nan
field min 0
field max 0
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(packetPulled)
attr title "queueing times"
attr unit s
bin	-inf	0
bin	-0.5	0
bin	-0.48	0
bin	-0.46	0
bin	-0.44	0
bin	-0.42	0
bin	-0.4	0
bin	-0.38	0
bin	-0.36	0
bin	-0.34	0
bin	-0.32	0
bin	-0.3	0
bin	-0.28	0
bin	-0.26	0
bin	-0.24	0
bin	-0.22	0
bin	-0.2	0
bin	-0.18	0
bin	-0.16	0
bin	-0.14	0
bin	-0.12	0
bin	-0.1	0
bin	-0.08	0
bin	-0.06	0
bin	-0.04	0
bin	-0.02	0
bin	0	1
bin	0.02	0
bin	0.04	0
bin	0.06	0
bin	0.08	0
bin	0.1	0
bin	0.12	0
bin	0.14	0
bin	0.16	0
bin	0.18	0
bin	0.2	0
bin	0.22	0
bin	0.24	0
bin	0.26	0
bin	0.28	0
bin	0.3	0
bin	0.32	0
bin	0.34	0
bin	0.36	0
bin	0.38	0
bin	0.4	0
bin	0.42	0
bin	0.44	0
bin	0.46	0
bin	0.48	0
bin	0.5	0
scalar LoopNetwork.r[0].eth[2].queue outgoingPackets:count 1
attr recordingmode count
attr source packetPulled
attr title "outgoing packets, count"
attr unit pk
scalar LoopNetwork.r[0].eth[2].queue outgoingPacketLengths:sum 560
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPulled)
attr title "outgoing packet lengths, sum"
attr unit b
statistic LoopNetwork.r[0].eth[2].queue outgoingPacketLengths:histogram
field count 1
field mean 560
field stddev nan
field min 560
field max 560
field sum 560
field sqrsum 313600
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPulled)
attr title "outgoing packet lengths"
attr unit b
bin	-inf	0
bin	559	0
bin	560	1
bin	561	0
statistic LoopNetwork.r[0].eth[2].queue flowQueueingTime:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(demuxFlow(packetPulled))
attr title "flow queueing times"
attr unit s
bin	-inf	0
bin	0	0
bin	1	0
scalar LoopNetwork.r[0].eth[2].queue incomingPackets:count 1
attr recordingmode count
attr source packetPushStarted
attr title "incoming packets, count"
attr unit pk
scalar LoopNetwork.r[0].eth[2].queue incomingPacketLengths:sum 560
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths, sum"
attr unit b
statistic LoopNetwork.r[0].eth[2].queue incomingPacketLengths:histogram
field count 1
field mean 560
field stddev nan
field min 560
field max 560
field sum 560
field sqrsum 313600
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths"
attr unit b
bin	-inf	0
bin	559	0
bin	560	1
bin	561	0
scalar LoopNetwork.r[0].eth[2].queue droppedPacketsQueueOverflow:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsQueueOverflow(packetDropped)
attr title "dropped packets: queue overflow, count"
attr unit pk
scalar LoopNetwork.r[0].eth[2].queue droppedPacketLengthsQueueOverflow:sum 0
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetDropReasonIsQueueOverflow(packetDropped))
attr title "dropped packet lengths: queue overflow, sum"
attr unit b
par LoopNetwork.r[0].eth[2].mac typename "\"inet.linklayer.ethernet.basic.EthernetMac\""
par LoopNetwork.r[0].eth[2].mac interfaceTableModule "\"LoopNetwork.r[0].interfaceTable\""
par LoopNetwork.r[0].eth[2].mac displayStringTextFormat "\"rate: %b\\nsent: %s, rcvd: %r\\nqueue: %q, drop: %d\""
par LoopNetwork.r[0].eth[2].mac sendRawBytes false
par LoopNetwork.r[0].eth[2].mac promiscuous false
par LoopNetwork.r[0].eth[2].mac duplexMode true
par LoopNetwork.r[0].eth[2].mac mtu 1500B
attr unit B
par LoopNetwork.r[0].eth[2].mac fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[0].eth[2].mac stopOperationExtraTime -1s
attr unit s
par LoopNetwork.r[0].eth[2].mac stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.r[0].eth[2].mac "simulated time" 5313.5759468249
scalar LoopNetwork.r[0].eth[2].mac full-duplex 1
scalar LoopNetwork.r[0].eth[2].mac "frames/sec sent" 0.00018819717832349
scalar LoopNetwork.r[0].eth[2].mac "frames/sec rcvd" 0.00018819717832349
scalar LoopNetwork.r[0].eth[2].mac "bits/sec sent" 0.10539041986115
scalar LoopNetwork.r[0].eth[2].mac "bits/sec rcvd" 0.10539041986115
scalar LoopNetwork.r[0].eth[2].mac "rx channel idle (%)" 99.999999882565
scalar LoopNetwork.r[0].eth[2].mac "rx channel utilization (%)" 1.1743503927386e-07
scalar LoopNetwork.r[0].eth[2].mac txPk:count 1
attr interpolationmode none
attr recordingmode count
attr source packetSentToLower
attr title "packets transmitted, count"
scalar LoopNetwork.r[0].eth[2].mac txPk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToLower
attr title "packets transmitted, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[2].mac packetReceivedFromUpper:count 1
attr interpolationmode none
attr recordingmode count
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, count"
scalar LoopNetwork.r[0].eth[2].mac packetReceivedFromUpper:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[2].mac passedUpPk:count 1
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed to higher layer, count"
scalar LoopNetwork.r[0].eth[2].mac passedUpPk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[2].mac packetDropIncorrectlyReceived:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, count"
scalar LoopNetwork.r[0].eth[2].mac packetDropIncorrectlyReceived:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[2].mac packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, count"
scalar LoopNetwork.r[0].eth[2].mac packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[2].mac packetDropNotAddressedToUs:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, count"
scalar LoopNetwork.r[0].eth[2].mac packetDropNotAddressedToUs:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[2].mac rxPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units received, count"
scalar LoopNetwork.r[0].eth[2].mac rxPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units received, sum"
scalar LoopNetwork.r[0].eth[2].mac txPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units sent, count"
scalar LoopNetwork.r[0].eth[2].mac txPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units sent, sum"
scalar LoopNetwork.r[0].eth[2].mac rxPkOk:count 1
attr interpolationmode none
attr recordingmode count
attr source rxPkOk
attr title "packets received OK, count"
scalar LoopNetwork.r[0].eth[2].mac rxPkOk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source rxPkOk
attr title "packets received OK, sum(packetBytes)"
par LoopNetwork.r[0].eth[2] typename "\"inet.linklayer.ethernet.EthernetInterface\""
par LoopNetwork.r[0].eth[2] displayStringTextFormat "\"%a (%i)\\n%m\""
par LoopNetwork.r[0].eth[2] recordPcap false
par LoopNetwork.r[0].eth[2] numPcapRecorders 0
par LoopNetwork.r[0].eth[2] interfaceTableModule "\"LoopNetwork.r[0].interfaceTable\""
par LoopNetwork.r[0].eth[2] protocol "\"ethernetmac\""
par LoopNetwork.r[0].eth[2] address "\"0A-AA-00-00-00-03\""
attr mutable ""
par LoopNetwork.r[0].eth[2] duplexMode true
par LoopNetwork.r[0].eth[2] csmacdSupport false
par LoopNetwork.r[0].eth[2] bitrate 0bps
attr unit bps
par LoopNetwork.r[0].eth[2] fcsMode "\"declared\""
attr enum declared,computed
scalar LoopNetwork.r[0].eth[2] packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, count"
scalar LoopNetwork.r[0].eth[2] packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, sum(packetBytes)"
scalar LoopNetwork.r[0].eth[2] packetDropNoCarrier:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, count"
scalar LoopNetwork.r[0].eth[2] packetDropNoCarrier:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, sum(packetBytes)"
par LoopNetwork.r[0].ipv4.transportIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].ipv4.up.out[0].channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].ipv4.lp.out[2].channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].ipv4.ifIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[0].ipv4.configurator typename "\"inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator\""
par LoopNetwork.r[0].ipv4.configurator interfaceTableModule "\"LoopNetwork.r[0].interfaceTable\""
par LoopNetwork.r[0].ipv4.configurator routingTableModule "\"LoopNetwork.r[0].ipv4.routingTable\""
par LoopNetwork.r[0].ipv4.configurator networkConfiguratorModule "\"configurator\""
par LoopNetwork.r[0].ipv4.configurator configureRoutingTable true
par LoopNetwork.r[0].ipv4.routingTable typename "\"inet.networklayer.ipv4.Ipv4RoutingTable\""
par LoopNetwork.r[0].ipv4.routingTable interfaceTableModule "\"LoopNetwork.r[0].interfaceTable\""
par LoopNetwork.r[0].ipv4.routingTable routerId "\"auto\""
par LoopNetwork.r[0].ipv4.routingTable netmaskRoutes "\"*\""
par LoopNetwork.r[0].ipv4.routingTable forwarding true
par LoopNetwork.r[0].ipv4.routingTable multicastForwarding false
par LoopNetwork.r[0].ipv4.routingTable useAdminDist false
par LoopNetwork.r[0].ipv4.routingTable routingFile "\"\""
par LoopNetwork.r[0].ipv4.natTable typename "\"inet.networklayer.ipv4.Ipv4NatTable\""
par LoopNetwork.r[0].ipv4.natTable networkProtocolModule "\"^.ip\""
par LoopNetwork.r[0].ipv4.natTable config "<config/> at content:1"
par LoopNetwork.r[0].ipv4.up typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[0].ipv4.up displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[0].ipv4.up forwardServiceRegistration true
par LoopNetwork.r[0].ipv4.up forwardProtocolRegistration true
par LoopNetwork.r[0].ipv4.igmp typename "\"inet.networklayer.ipv4.Igmpv2\""
par LoopNetwork.r[0].ipv4.igmp interfaceTableModule "\"LoopNetwork.r[0].interfaceTable\""
par LoopNetwork.r[0].ipv4.igmp routingTableModule "\"LoopNetwork.r[0].ipv4.routingTable\""
par LoopNetwork.r[0].ipv4.igmp crcMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[0].ipv4.igmp enabled true
par LoopNetwork.r[0].ipv4.igmp robustnessVariable 2
par LoopNetwork.r[0].ipv4.igmp queryInterval 125s
attr unit s
par LoopNetwork.r[0].ipv4.igmp queryResponseInterval 10s
attr unit s
par LoopNetwork.r[0].ipv4.igmp groupMembershipInterval 260s
attr unit s
par LoopNetwork.r[0].ipv4.igmp otherQuerierPresentInterval 255s
attr unit s
par LoopNetwork.r[0].ipv4.igmp startupQueryInterval 31.25s
attr unit s
par LoopNetwork.r[0].ipv4.igmp startupQueryCount 2
par LoopNetwork.r[0].ipv4.igmp lastMemberQueryInterval 1s
attr unit s
par LoopNetwork.r[0].ipv4.igmp lastMemberQueryCount 2
par LoopNetwork.r[0].ipv4.igmp unsolicitedReportInterval 10s
attr unit s
par LoopNetwork.r[0].ipv4.icmp typename "\"inet.networklayer.ipv4.Icmp\""
par LoopNetwork.r[0].ipv4.icmp interfaceTableModule "\"LoopNetwork.r[0].interfaceTable\""
par LoopNetwork.r[0].ipv4.icmp routingTableModule "\"LoopNetwork.r[0].ipv4.routingTable\""
par LoopNetwork.r[0].ipv4.icmp crcMode "\"declared\""
attr enum declared,computed
attr mutable ""
par LoopNetwork.r[0].ipv4.icmp quoteLength 8B
attr mutable ""
attr unit B
par LoopNetwork.r[0].ipv4.mp typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[0].ipv4.mp displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[0].ipv4.mp forwardServiceRegistration true
par LoopNetwork.r[0].ipv4.mp forwardProtocolRegistration true
par LoopNetwork.r[0].ipv4.ip typename "\"inet.networklayer.ipv4.Ipv4\""
par LoopNetwork.r[0].ipv4.ip interfaceTableModule "\"LoopNetwork.r[0].interfaceTable\""
par LoopNetwork.r[0].ipv4.ip routingTableModule "\"LoopNetwork.r[0].ipv4.routingTable\""
par LoopNetwork.r[0].ipv4.ip arpModule "\"LoopNetwork.r[0].ipv4.arp\""
par LoopNetwork.r[0].ipv4.ip icmpModule "\"LoopNetwork.r[0].ipv4.icmp\""
par LoopNetwork.r[0].ipv4.ip crcMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[0].ipv4.ip timeToLive 32
par LoopNetwork.r[0].ipv4.ip multicastTimeToLive 32
par LoopNetwork.r[0].ipv4.ip fragmentTimeout 60s
attr unit s
par LoopNetwork.r[0].ipv4.ip limitedBroadcast false
par LoopNetwork.r[0].ipv4.ip directBroadcastInterfaces "\"\""
scalar LoopNetwork.r[0].ipv4.ip packetDropAddressResolutionFailed:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsAddressResolutionFailed(packetDropped)
attr title "packet drop: address resolution failed, count"
scalar LoopNetwork.r[0].ipv4.ip packetDropAddressResolutionFailed:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsAddressResolutionFailed(packetDropped)
attr title "packet drop: address resolution failed, sum(packetBytes)"
scalar LoopNetwork.r[0].ipv4.ip packetDropHopLimitReached:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsHopLimitReached(packetDropped)
attr title "packet drop: hop limit reached, count"
scalar LoopNetwork.r[0].ipv4.ip packetDropHopLimitReached:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsHopLimitReached(packetDropped)
attr title "packet drop: hop limit reached, sum(packetBytes)"
scalar LoopNetwork.r[0].ipv4.ip packetDropForwardingDisabled:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsForwardingDisabled(packetDropped)
attr title "packet drop: forwarding disabled, count"
scalar LoopNetwork.r[0].ipv4.ip packetDropForwardingDisabled:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsForwardingDisabled(packetDropped)
attr title "packet drop: forwarding disabled, sum(packetBytes)"
scalar LoopNetwork.r[0].ipv4.ip packetDropNoInterfaceFound:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoInterfaceFound(packetDropped)
attr title "packet drop: no interface found, count"
scalar LoopNetwork.r[0].ipv4.ip packetDropNoInterfaceFound:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoInterfaceFound(packetDropped)
attr title "packet drop: no interface found, sum(packetBytes)"
scalar LoopNetwork.r[0].ipv4.ip packetDropNoRouteFound:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoRouteFound(packetDropped)
attr title "packet drop: no route found, count"
scalar LoopNetwork.r[0].ipv4.ip packetDropNoRouteFound:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoRouteFound(packetDropped)
attr title "packet drop: no route found, sum(packetBytes)"
scalar LoopNetwork.r[0].ipv4.ip packetDropUndefined:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsUndefined(packetDropped)
attr title "packet drop: undefined, count"
scalar LoopNetwork.r[0].ipv4.ip packetDropUndefined:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsUndefined(packetDropped)
attr title "packet drop: undefined, sum(packetBytes)"
par LoopNetwork.r[0].ipv4.arp typename "\"inet.networklayer.arp.ipv4.Arp\""
par LoopNetwork.r[0].ipv4.arp interfaceTableModule "\"LoopNetwork.r[0].interfaceTable\""
par LoopNetwork.r[0].ipv4.arp routingTableModule "\"LoopNetwork.r[0].ipv4.routingTable\""
par LoopNetwork.r[0].ipv4.arp retryTimeout 1s
attr unit s
par LoopNetwork.r[0].ipv4.arp retryCount 3
par LoopNetwork.r[0].ipv4.arp cacheTimeout 120s
attr unit s
par LoopNetwork.r[0].ipv4.arp proxyArpInterfaces "\"*\""
scalar LoopNetwork.r[0].ipv4.arp arpReplySent:count 0
attr recordingmode count
attr source arpReplySent
attr title "ARP replies sent, count"
scalar LoopNetwork.r[0].ipv4.arp arpReplySent:sum(packetBytes) 0
attr recordingmode sum(packetBytes)
attr source arpReplySent
attr title "ARP replies sent, sum(packetBytes)"
scalar LoopNetwork.r[0].ipv4.arp arpRequestSent:count 0
attr recordingmode count
attr source arpRequestSent
attr title "ARP request sent, count"
scalar LoopNetwork.r[0].ipv4.arp arpRequestSent:sum(packetBytes) 0
attr recordingmode sum(packetBytes)
attr source arpRequestSent
attr title "ARP request sent, sum(packetBytes)"
scalar LoopNetwork.r[0].ipv4.arp arpResolutionFailed:count 0
attr recordingmode count
attr title "ARP failed resolutions, count"
scalar LoopNetwork.r[0].ipv4.arp arpResolutionCompleted:count 0
attr recordingmode count
attr title "ARP completed resolutions, count"
scalar LoopNetwork.r[0].ipv4.arp arpResolutionInitiated:count 0
attr recordingmode count
attr title "ARP initiated resolutions, count"
par LoopNetwork.r[0].ipv4.lp typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[0].ipv4.lp displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[0].ipv4.lp forwardServiceRegistration true
par LoopNetwork.r[0].ipv4.lp forwardProtocolRegistration true
par LoopNetwork.r[0].ipv4 typename "\"inet.networklayer.ipv4.Ipv4NetworkLayer\""
par LoopNetwork.r[0].ipv4 forwarding true
par LoopNetwork.r[0].ipv4 multicastForwarding false
par LoopNetwork.r[0].ipv4 interfaceTableModule "\"LoopNetwork.r[0].interfaceTable\""
par LoopNetwork.r[0].ipv4 displayStringTextFormat "\"%i\""
par LoopNetwork.r[0].nl typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[0].nl displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[0].nl forwardServiceRegistration true
par LoopNetwork.r[0].nl forwardProtocolRegistration true
par LoopNetwork.r[0].udp typename "\"inet.transportlayer.udp.Udp\""
par LoopNetwork.r[0].udp interfaceTableModule "\"LoopNetwork.r[0].interfaceTable\""
par LoopNetwork.r[0].udp icmpModule "\"^.ipv4.icmp\""
par LoopNetwork.r[0].udp icmpv6Module "\"^.ipv6.icmpv6\""
par LoopNetwork.r[0].udp crcMode "\"declared\""
attr enum disabled,declared,computed
par LoopNetwork.r[0].udp defaultMulticastLoop true
scalar LoopNetwork.r[0].udp packetReceived:count 2
attr interpolationmode none
attr recordingmode count
attr source packetReceived
attr title "packets received, count"
scalar LoopNetwork.r[0].udp packetReceived:sum(packetBytes) 64
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceived
attr title "packets received, sum(packetBytes)"
scalar LoopNetwork.r[0].udp packetSent:count 3
attr interpolationmode none
attr recordingmode count
attr source packetSent
attr title "packets sent, count"
scalar LoopNetwork.r[0].udp packetSent:sum(packetBytes) 96
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSent
attr title "packets sent, sum(packetBytes)"
scalar LoopNetwork.r[0].udp passedUpPk:count 2
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed up, count"
scalar LoopNetwork.r[0].udp droppedPkWrongPort:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoPortFound(packetDropped)
attr title "packets dropped (wrong port), count"
scalar LoopNetwork.r[0].udp droppedPkBadChecksum:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packets dropped (checksum error), count"
par LoopNetwork.r[0].tn typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[0].tn displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[0].tn forwardServiceRegistration true
par LoopNetwork.r[0].tn forwardProtocolRegistration true
par LoopNetwork.r[0].at typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[0].at displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[0].at forwardServiceRegistration true
par LoopNetwork.r[0].at forwardProtocolRegistration true
par LoopNetwork.r[0].rip typename "\"inet.routing.rip.Rip\""
par LoopNetwork.r[0].rip interfaceTableModule "\"LoopNetwork.r[0].interfaceTable\""
par LoopNetwork.r[0].rip routingTableModule "\"^.ipv4.routingTable\""
par LoopNetwork.r[0].rip ripConfig "<config>...</config> at content:1"
par LoopNetwork.r[0].rip mode "\"RIPv2\""
attr enum RIPv2,RIPng
par LoopNetwork.r[0].rip udpPort 520
par LoopNetwork.r[0].rip startupTime "uniform(0s, 5s)"
attr unit s
par LoopNetwork.r[0].rip shutdownTime 1s
attr unit s
par LoopNetwork.r[0].rip updateInterval 30s
attr unit s
par LoopNetwork.r[0].rip routeExpiryTime 180s
attr unit s
par LoopNetwork.r[0].rip routePurgeTime 120s
attr unit s
par LoopNetwork.r[0].rip holdDownTime 0s
attr unit s
par LoopNetwork.r[0].rip triggeredUpdate true
par LoopNetwork.r[0].rip triggeredUpdateDelay "uniform(1s, 5s)"
attr unit s
par LoopNetwork.r[0].rip stopOperationExtraTime -1s
attr unit s
par LoopNetwork.r[0].rip stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.r[0].rip numRoutes:last nan
attr interpolationmode none
attr recordingmode last
attr source numRoutes
attr title "number of routes, last"
scalar LoopNetwork.r[0].rip badResponse:count 0
attr interpolationmode none
attr recordingmode count
attr source badResponse
attr title "bad response received, count"
scalar LoopNetwork.r[0].rip rcvdResponse:count 0
attr interpolationmode none
attr recordingmode count
attr source rcvdResponse
attr title "response received, count"
scalar LoopNetwork.r[0].rip sentUpdate:count 0
attr interpolationmode none
attr recordingmode count
attr source sentUpdate
attr title "update sent, count"
scalar LoopNetwork.r[0].rip sentRequest:count 3
attr interpolationmode none
attr recordingmode count
attr source sentRequest
attr title "request sent, count"
par LoopNetwork.r[0] typename "\"CustomRipRouter\""
par LoopNetwork.r[0] hasStatus false
par LoopNetwork.r[0] osgModel "\"\""
par LoopNetwork.r[0] osgModelColor "\"\""
par LoopNetwork.r[0] canvasImage "\"\""
par LoopNetwork.r[0] canvasImageColor "\"\""
par LoopNetwork.r[0] recordPcap false
par LoopNetwork.r[0] numPcapRecorders 0
par LoopNetwork.r[0] numLoInterfaces 1
par LoopNetwork.r[0] numWlanInterfaces 0
par LoopNetwork.r[0] numEthInterfaces 0
par LoopNetwork.r[0] numPppInterfaces 0
par LoopNetwork.r[0] numTunInterfaces 0
par LoopNetwork.r[0] numVirtInterfaces 0
par LoopNetwork.r[0] fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[0] hasIpv4 true
par LoopNetwork.r[0] hasIpv6 false
par LoopNetwork.r[0] hasGn false
par LoopNetwork.r[0] forwarding true
par LoopNetwork.r[0] multicastForwarding false
par LoopNetwork.r[0] hasUdp true
par LoopNetwork.r[0] hasTcp false
par LoopNetwork.r[0] hasSctp false
par LoopNetwork.r[0] numApps 0
par LoopNetwork.r[0] hasEigrp false
par LoopNetwork.r[0] hasOspf false
par LoopNetwork.r[0] hasRip true
par LoopNetwork.r[0] hasBgp false
par LoopNetwork.r[0] hasPim false
par LoopNetwork.r[0] hasDhcp false
par LoopNetwork.r[1].ethg$i[0].channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].eth[0].phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].ethg$i[1].channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].eth[1].phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].ethg$i[2].channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].eth[2].phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].interfaceTable typename "\"inet.networklayer.common.InterfaceTable\""
par LoopNetwork.r[1].interfaceTable displayAddresses false
par LoopNetwork.r[1].cb typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[1].cb displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[1].cb forwardServiceRegistration true
par LoopNetwork.r[1].cb forwardProtocolRegistration true
par LoopNetwork.r[1].bl typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[1].bl displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[1].bl forwardServiceRegistration true
par LoopNetwork.r[1].bl forwardProtocolRegistration true
par LoopNetwork.r[1].ethernet typename "\"inet.linklayer.ethernet.basic.EthernetEncapsulation\""
par LoopNetwork.r[1].ethernet registerProtocol true
par LoopNetwork.r[1].ethernet interfaceTableModule "\"LoopNetwork.r[1].interfaceTable\""
par LoopNetwork.r[1].ethernet fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[1].ethernet stopOperationExtraTime -1s
attr unit s
par LoopNetwork.r[1].ethernet stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.r[1].ethernet decapPk:count 2
attr interpolationmode none
attr recordingmode count
attr source decapPk
attr title "packets decapsulated, count"
scalar LoopNetwork.r[1].ethernet decapPk:sum(packetBytes) 104
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source decapPk
attr title "packets decapsulated, sum(packetBytes)"
scalar LoopNetwork.r[1].ethernet encapPk:count 3
attr interpolationmode none
attr recordingmode count
attr source encapPk
attr title "packets encapsulated, count"
scalar LoopNetwork.r[1].ethernet encapPk:sum(packetBytes) 156
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source encapPk
attr title "packets encapsulated, sum(packetBytes)"
scalar LoopNetwork.r[1].ethernet pauseSent:count 0
attr recordingmode count
attr title "pause sent, count"
scalar LoopNetwork.r[1].ethernet pauseSent:sum 0
attr recordingmode sum
attr title "pause sent, sum"
par LoopNetwork.r[1].li typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[1].li displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[1].li forwardServiceRegistration true
par LoopNetwork.r[1].li forwardProtocolRegistration true
par LoopNetwork.r[1].lo[0].upperLayerIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].lo[0].lo.upperLayerOut.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].lo[0].lo typename "\"inet.linklayer.loopback.Loopback\""
par LoopNetwork.r[1].lo[0].lo interfaceTableModule "\"LoopNetwork.r[1].interfaceTable\""
par LoopNetwork.r[1].lo[0].lo mtu 4470B
attr unit B
scalar LoopNetwork.r[1].lo[0].lo rcvdPkFromHl:count 0
attr interpolationmode none
attr recordingmode count
attr source packetReceivedFromUpper
attr title "packets received from higher layer, count"
scalar LoopNetwork.r[1].lo[0].lo rcvdPkFromHl:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceivedFromUpper
attr title "packets received from higher layer, sum(packetBytes)"
scalar LoopNetwork.r[1].lo[0].lo passedUpPk:count 0
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed to higher layer, count"
scalar LoopNetwork.r[1].lo[0].lo passedUpPk:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, sum(packetBytes)"
par LoopNetwork.r[1].lo[0] typename "\"inet.linklayer.loopback.LoopbackInterface\""
par LoopNetwork.r[1].lo[0] displayStringTextFormat "\"%a (%i)\\n%m\""
par LoopNetwork.r[1].lo[0] recordPcap false
par LoopNetwork.r[1].lo[0] numPcapRecorders 0
par LoopNetwork.r[1].lo[0] interfaceTableModule "\"LoopNetwork.r[1].interfaceTable\""
scalar LoopNetwork.r[1].lo[0] packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, count"
scalar LoopNetwork.r[1].lo[0] packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, sum(packetBytes)"
scalar LoopNetwork.r[1].lo[0] packetDropNoCarrier:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, count"
scalar LoopNetwork.r[1].lo[0] packetDropNoCarrier:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, sum(packetBytes)"
par LoopNetwork.r[1].eth[0].mac.phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].eth[0].phys$i.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].eth[0].upperLayerIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].eth[0].mac.upperLayerOut.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].eth[0].queue typename "\"inet.linklayer.ethernet.common.EthernetQueue\""
par LoopNetwork.r[1].eth[0].queue displayStringTextFormat "\"contains %p pk (%l) pushed %u\\npulled %o removed %r dropped %d\""
par LoopNetwork.r[1].eth[0].queue packetCapacity 1000
par LoopNetwork.r[1].eth[0].queue dataCapacity -1b
attr unit b
par LoopNetwork.r[1].eth[0].queue dropperClass "\"inet::queueing::PacketAtCollectionEndDropper\""
par LoopNetwork.r[1].eth[0].queue comparatorClass "\"inet::EthernetFrameTypeComparator\""
par LoopNetwork.r[1].eth[0].queue bufferModule "\"\""
scalar LoopNetwork.r[1].eth[0].queue queueLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, last"
attr unit pk
scalar LoopNetwork.r[1].eth[0].queue queueLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, max"
attr unit pk
scalar LoopNetwork.r[1].eth[0].queue queueLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, timeavg"
attr unit pk
scalar LoopNetwork.r[1].eth[0].queue queueBitLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, last"
attr unit b
scalar LoopNetwork.r[1].eth[0].queue queueBitLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, max"
attr unit b
scalar LoopNetwork.r[1].eth[0].queue queueBitLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, timeavg"
attr unit b
statistic LoopNetwork.r[1].eth[0].queue queueingTime:histogram
field count 1
field mean 0
field stddev nan
field min 0
field max 0
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(packetPulled)
attr title "queueing times"
attr unit s
bin	-inf	0
bin	-0.5	0
bin	-0.48	0
bin	-0.46	0
bin	-0.44	0
bin	-0.42	0
bin	-0.4	0
bin	-0.38	0
bin	-0.36	0
bin	-0.34	0
bin	-0.32	0
bin	-0.3	0
bin	-0.28	0
bin	-0.26	0
bin	-0.24	0
bin	-0.22	0
bin	-0.2	0
bin	-0.18	0
bin	-0.16	0
bin	-0.14	0
bin	-0.12	0
bin	-0.1	0
bin	-0.08	0
bin	-0.06	0
bin	-0.04	0
bin	-0.02	0
bin	0	1
bin	0.02	0
bin	0.04	0
bin	0.06	0
bin	0.08	0
bin	0.1	0
bin	0.12	0
bin	0.14	0
bin	0.16	0
bin	0.18	0
bin	0.2	0
bin	0.22	0
bin	0.24	0
bin	0.26	0
bin	0.28	0
bin	0.3	0
bin	0.32	0
bin	0.34	0
bin	0.36	0
bin	0.38	0
bin	0.4	0
bin	0.42	0
bin	0.44	0
bin	0.46	0
bin	0.48	0
bin	0.5	0
scalar LoopNetwork.r[1].eth[0].queue outgoingPackets:count 1
attr recordingmode count
attr source packetPulled
attr title "outgoing packets, count"
attr unit pk
scalar LoopNetwork.r[1].eth[0].queue outgoingPacketLengths:sum 560
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPulled)
attr title "outgoing packet lengths, sum"
attr unit b
statistic LoopNetwork.r[1].eth[0].queue outgoingPacketLengths:histogram
field count 1
field mean 560
field stddev nan
field min 560
field max 560
field sum 560
field sqrsum 313600
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPulled)
attr title "outgoing packet lengths"
attr unit b
bin	-inf	0
bin	559	0
bin	560	1
bin	561	0
statistic LoopNetwork.r[1].eth[0].queue flowQueueingTime:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(demuxFlow(packetPulled))
attr title "flow queueing times"
attr unit s
bin	-inf	0
bin	0	0
bin	1	0
scalar LoopNetwork.r[1].eth[0].queue incomingPackets:count 1
attr recordingmode count
attr source packetPushStarted
attr title "incoming packets, count"
attr unit pk
scalar LoopNetwork.r[1].eth[0].queue incomingPacketLengths:sum 560
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths, sum"
attr unit b
statistic LoopNetwork.r[1].eth[0].queue incomingPacketLengths:histogram
field count 1
field mean 560
field stddev nan
field min 560
field max 560
field sum 560
field sqrsum 313600
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths"
attr unit b
bin	-inf	0
bin	559	0
bin	560	1
bin	561	0
scalar LoopNetwork.r[1].eth[0].queue droppedPacketsQueueOverflow:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsQueueOverflow(packetDropped)
attr title "dropped packets: queue overflow, count"
attr unit pk
scalar LoopNetwork.r[1].eth[0].queue droppedPacketLengthsQueueOverflow:sum 0
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetDropReasonIsQueueOverflow(packetDropped))
attr title "dropped packet lengths: queue overflow, sum"
attr unit b
par LoopNetwork.r[1].eth[0].mac typename "\"inet.linklayer.ethernet.basic.EthernetMac\""
par LoopNetwork.r[1].eth[0].mac interfaceTableModule "\"LoopNetwork.r[1].interfaceTable\""
par LoopNetwork.r[1].eth[0].mac displayStringTextFormat "\"rate: %b\\nsent: %s, rcvd: %r\\nqueue: %q, drop: %d\""
par LoopNetwork.r[1].eth[0].mac sendRawBytes false
par LoopNetwork.r[1].eth[0].mac promiscuous false
par LoopNetwork.r[1].eth[0].mac duplexMode true
par LoopNetwork.r[1].eth[0].mac mtu 1500B
attr unit B
par LoopNetwork.r[1].eth[0].mac fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[1].eth[0].mac stopOperationExtraTime -1s
attr unit s
par LoopNetwork.r[1].eth[0].mac stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.r[1].eth[0].mac "simulated time" 5313.5759468249
scalar LoopNetwork.r[1].eth[0].mac full-duplex 1
scalar LoopNetwork.r[1].eth[0].mac "frames/sec sent" 0.00018819717832349
scalar LoopNetwork.r[1].eth[0].mac "frames/sec rcvd" 0
scalar LoopNetwork.r[1].eth[0].mac "bits/sec sent" 0.10539041986115
scalar LoopNetwork.r[1].eth[0].mac "bits/sec rcvd" 0
scalar LoopNetwork.r[1].eth[0].mac "rx channel idle (%)" 100
scalar LoopNetwork.r[1].eth[0].mac "rx channel utilization (%)" 0
scalar LoopNetwork.r[1].eth[0].mac txPk:count 1
attr interpolationmode none
attr recordingmode count
attr source packetSentToLower
attr title "packets transmitted, count"
scalar LoopNetwork.r[1].eth[0].mac txPk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToLower
attr title "packets transmitted, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[0].mac packetReceivedFromUpper:count 1
attr interpolationmode none
attr recordingmode count
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, count"
scalar LoopNetwork.r[1].eth[0].mac packetReceivedFromUpper:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[0].mac passedUpPk:count 0
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed to higher layer, count"
scalar LoopNetwork.r[1].eth[0].mac passedUpPk:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[0].mac packetDropIncorrectlyReceived:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, count"
scalar LoopNetwork.r[1].eth[0].mac packetDropIncorrectlyReceived:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[0].mac packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, count"
scalar LoopNetwork.r[1].eth[0].mac packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[0].mac packetDropNotAddressedToUs:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, count"
scalar LoopNetwork.r[1].eth[0].mac packetDropNotAddressedToUs:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[0].mac rxPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units received, count"
scalar LoopNetwork.r[1].eth[0].mac rxPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units received, sum"
scalar LoopNetwork.r[1].eth[0].mac txPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units sent, count"
scalar LoopNetwork.r[1].eth[0].mac txPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units sent, sum"
scalar LoopNetwork.r[1].eth[0].mac rxPkOk:count 0
attr interpolationmode none
attr recordingmode count
attr source rxPkOk
attr title "packets received OK, count"
scalar LoopNetwork.r[1].eth[0].mac rxPkOk:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source rxPkOk
attr title "packets received OK, sum(packetBytes)"
par LoopNetwork.r[1].eth[0] typename "\"inet.linklayer.ethernet.EthernetInterface\""
par LoopNetwork.r[1].eth[0] displayStringTextFormat "\"%a (%i)\\n%m\""
par LoopNetwork.r[1].eth[0] recordPcap false
par LoopNetwork.r[1].eth[0] numPcapRecorders 0
par LoopNetwork.r[1].eth[0] interfaceTableModule "\"LoopNetwork.r[1].interfaceTable\""
par LoopNetwork.r[1].eth[0] protocol "\"ethernetmac\""
par LoopNetwork.r[1].eth[0] address "\"0A-AA-00-00-00-04\""
attr mutable ""
par LoopNetwork.r[1].eth[0] duplexMode true
par LoopNetwork.r[1].eth[0] csmacdSupport false
par LoopNetwork.r[1].eth[0] bitrate 0bps
attr unit bps
par LoopNetwork.r[1].eth[0] fcsMode "\"declared\""
attr enum declared,computed
scalar LoopNetwork.r[1].eth[0] packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, count"
scalar LoopNetwork.r[1].eth[0] packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[0] packetDropNoCarrier:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, count"
scalar LoopNetwork.r[1].eth[0] packetDropNoCarrier:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, sum(packetBytes)"
par LoopNetwork.r[1].eth[1].mac.phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].eth[1].phys$i.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].eth[1].upperLayerIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].eth[1].mac.upperLayerOut.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].eth[1].queue typename "\"inet.linklayer.ethernet.common.EthernetQueue\""
par LoopNetwork.r[1].eth[1].queue displayStringTextFormat "\"contains %p pk (%l) pushed %u\\npulled %o removed %r dropped %d\""
par LoopNetwork.r[1].eth[1].queue packetCapacity 1000
par LoopNetwork.r[1].eth[1].queue dataCapacity -1b
attr unit b
par LoopNetwork.r[1].eth[1].queue dropperClass "\"inet::queueing::PacketAtCollectionEndDropper\""
par LoopNetwork.r[1].eth[1].queue comparatorClass "\"inet::EthernetFrameTypeComparator\""
par LoopNetwork.r[1].eth[1].queue bufferModule "\"\""
scalar LoopNetwork.r[1].eth[1].queue queueLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, last"
attr unit pk
scalar LoopNetwork.r[1].eth[1].queue queueLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, max"
attr unit pk
scalar LoopNetwork.r[1].eth[1].queue queueLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, timeavg"
attr unit pk
scalar LoopNetwork.r[1].eth[1].queue queueBitLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, last"
attr unit b
scalar LoopNetwork.r[1].eth[1].queue queueBitLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, max"
attr unit b
scalar LoopNetwork.r[1].eth[1].queue queueBitLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, timeavg"
attr unit b
statistic LoopNetwork.r[1].eth[1].queue queueingTime:histogram
field count 1
field mean 0
field stddev nan
field min 0
field max 0
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(packetPulled)
attr title "queueing times"
attr unit s
bin	-inf	0
bin	-0.5	0
bin	-0.48	0
bin	-0.46	0
bin	-0.44	0
bin	-0.42	0
bin	-0.4	0
bin	-0.38	0
bin	-0.36	0
bin	-0.34	0
bin	-0.32	0
bin	-0.3	0
bin	-0.28	0
bin	-0.26	0
bin	-0.24	0
bin	-0.22	0
bin	-0.2	0
bin	-0.18	0
bin	-0.16	0
bin	-0.14	0
bin	-0.12	0
bin	-0.1	0
bin	-0.08	0
bin	-0.06	0
bin	-0.04	0
bin	-0.02	0
bin	0	1
bin	0.02	0
bin	0.04	0
bin	0.06	0
bin	0.08	0
bin	0.1	0
bin	0.12	0
bin	0.14	0
bin	0.16	0
bin	0.18	0
bin	0.2	0
bin	0.22	0
bin	0.24	0
bin	0.26	0
bin	0.28	0
bin	0.3	0
bin	0.32	0
bin	0.34	0
bin	0.36	0
bin	0.38	0
bin	0.4	0
bin	0.42	0
bin	0.44	0
bin	0.46	0
bin	0.48	0
bin	0.5	0
scalar LoopNetwork.r[1].eth[1].queue outgoingPackets:count 1
attr recordingmode count
attr source packetPulled
attr title "outgoing packets, count"
attr unit pk
scalar LoopNetwork.r[1].eth[1].queue outgoingPacketLengths:sum 560
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPulled)
attr title "outgoing packet lengths, sum"
attr unit b
statistic LoopNetwork.r[1].eth[1].queue outgoingPacketLengths:histogram
field count 1
field mean 560
field stddev nan
field min 560
field max 560
field sum 560
field sqrsum 313600
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPulled)
attr title "outgoing packet lengths"
attr unit b
bin	-inf	0
bin	559	0
bin	560	1
bin	561	0
statistic LoopNetwork.r[1].eth[1].queue flowQueueingTime:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(demuxFlow(packetPulled))
attr title "flow queueing times"
attr unit s
bin	-inf	0
bin	0	0
bin	1	0
scalar LoopNetwork.r[1].eth[1].queue incomingPackets:count 1
attr recordingmode count
attr source packetPushStarted
attr title "incoming packets, count"
attr unit pk
scalar LoopNetwork.r[1].eth[1].queue incomingPacketLengths:sum 560
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths, sum"
attr unit b
statistic LoopNetwork.r[1].eth[1].queue incomingPacketLengths:histogram
field count 1
field mean 560
field stddev nan
field min 560
field max 560
field sum 560
field sqrsum 313600
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths"
attr unit b
bin	-inf	0
bin	559	0
bin	560	1
bin	561	0
scalar LoopNetwork.r[1].eth[1].queue droppedPacketsQueueOverflow:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsQueueOverflow(packetDropped)
attr title "dropped packets: queue overflow, count"
attr unit pk
scalar LoopNetwork.r[1].eth[1].queue droppedPacketLengthsQueueOverflow:sum 0
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetDropReasonIsQueueOverflow(packetDropped))
attr title "dropped packet lengths: queue overflow, sum"
attr unit b
par LoopNetwork.r[1].eth[1].mac typename "\"inet.linklayer.ethernet.basic.EthernetMac\""
par LoopNetwork.r[1].eth[1].mac interfaceTableModule "\"LoopNetwork.r[1].interfaceTable\""
par LoopNetwork.r[1].eth[1].mac displayStringTextFormat "\"rate: %b\\nsent: %s, rcvd: %r\\nqueue: %q, drop: %d\""
par LoopNetwork.r[1].eth[1].mac sendRawBytes false
par LoopNetwork.r[1].eth[1].mac promiscuous false
par LoopNetwork.r[1].eth[1].mac duplexMode true
par LoopNetwork.r[1].eth[1].mac mtu 1500B
attr unit B
par LoopNetwork.r[1].eth[1].mac fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[1].eth[1].mac stopOperationExtraTime -1s
attr unit s
par LoopNetwork.r[1].eth[1].mac stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.r[1].eth[1].mac "simulated time" 5313.5759468249
scalar LoopNetwork.r[1].eth[1].mac full-duplex 1
scalar LoopNetwork.r[1].eth[1].mac "frames/sec sent" 0.00018819717832349
scalar LoopNetwork.r[1].eth[1].mac "frames/sec rcvd" 0.00018819717832349
scalar LoopNetwork.r[1].eth[1].mac "bits/sec sent" 0.10539041986115
scalar LoopNetwork.r[1].eth[1].mac "bits/sec rcvd" 0.10539041986115
scalar LoopNetwork.r[1].eth[1].mac "rx channel idle (%)" 99.999999882565
scalar LoopNetwork.r[1].eth[1].mac "rx channel utilization (%)" 1.1743503927386e-07
scalar LoopNetwork.r[1].eth[1].mac txPk:count 1
attr interpolationmode none
attr recordingmode count
attr source packetSentToLower
attr title "packets transmitted, count"
scalar LoopNetwork.r[1].eth[1].mac txPk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToLower
attr title "packets transmitted, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[1].mac packetReceivedFromUpper:count 1
attr interpolationmode none
attr recordingmode count
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, count"
scalar LoopNetwork.r[1].eth[1].mac packetReceivedFromUpper:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[1].mac passedUpPk:count 1
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed to higher layer, count"
scalar LoopNetwork.r[1].eth[1].mac passedUpPk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[1].mac packetDropIncorrectlyReceived:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, count"
scalar LoopNetwork.r[1].eth[1].mac packetDropIncorrectlyReceived:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[1].mac packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, count"
scalar LoopNetwork.r[1].eth[1].mac packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[1].mac packetDropNotAddressedToUs:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, count"
scalar LoopNetwork.r[1].eth[1].mac packetDropNotAddressedToUs:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[1].mac rxPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units received, count"
scalar LoopNetwork.r[1].eth[1].mac rxPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units received, sum"
scalar LoopNetwork.r[1].eth[1].mac txPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units sent, count"
scalar LoopNetwork.r[1].eth[1].mac txPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units sent, sum"
scalar LoopNetwork.r[1].eth[1].mac rxPkOk:count 1
attr interpolationmode none
attr recordingmode count
attr source rxPkOk
attr title "packets received OK, count"
scalar LoopNetwork.r[1].eth[1].mac rxPkOk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source rxPkOk
attr title "packets received OK, sum(packetBytes)"
par LoopNetwork.r[1].eth[1] typename "\"inet.linklayer.ethernet.EthernetInterface\""
par LoopNetwork.r[1].eth[1] displayStringTextFormat "\"%a (%i)\\n%m\""
par LoopNetwork.r[1].eth[1] recordPcap false
par LoopNetwork.r[1].eth[1] numPcapRecorders 0
par LoopNetwork.r[1].eth[1] interfaceTableModule "\"LoopNetwork.r[1].interfaceTable\""
par LoopNetwork.r[1].eth[1] protocol "\"ethernetmac\""
par LoopNetwork.r[1].eth[1] address "\"0A-AA-00-00-00-05\""
attr mutable ""
par LoopNetwork.r[1].eth[1] duplexMode true
par LoopNetwork.r[1].eth[1] csmacdSupport false
par LoopNetwork.r[1].eth[1] bitrate 0bps
attr unit bps
par LoopNetwork.r[1].eth[1] fcsMode "\"declared\""
attr enum declared,computed
scalar LoopNetwork.r[1].eth[1] packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, count"
scalar LoopNetwork.r[1].eth[1] packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[1] packetDropNoCarrier:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, count"
scalar LoopNetwork.r[1].eth[1] packetDropNoCarrier:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, sum(packetBytes)"
par LoopNetwork.r[1].eth[2].mac.phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].eth[2].phys$i.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].eth[2].upperLayerIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].eth[2].mac.upperLayerOut.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].eth[2].queue typename "\"inet.linklayer.ethernet.common.EthernetQueue\""
par LoopNetwork.r[1].eth[2].queue displayStringTextFormat "\"contains %p pk (%l) pushed %u\\npulled %o removed %r dropped %d\""
par LoopNetwork.r[1].eth[2].queue packetCapacity 1000
par LoopNetwork.r[1].eth[2].queue dataCapacity -1b
attr unit b
par LoopNetwork.r[1].eth[2].queue dropperClass "\"inet::queueing::PacketAtCollectionEndDropper\""
par LoopNetwork.r[1].eth[2].queue comparatorClass "\"inet::EthernetFrameTypeComparator\""
par LoopNetwork.r[1].eth[2].queue bufferModule "\"\""
scalar LoopNetwork.r[1].eth[2].queue queueLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, last"
attr unit pk
scalar LoopNetwork.r[1].eth[2].queue queueLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, max"
attr unit pk
scalar LoopNetwork.r[1].eth[2].queue queueLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, timeavg"
attr unit pk
scalar LoopNetwork.r[1].eth[2].queue queueBitLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, last"
attr unit b
scalar LoopNetwork.r[1].eth[2].queue queueBitLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, max"
attr unit b
scalar LoopNetwork.r[1].eth[2].queue queueBitLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, timeavg"
attr unit b
statistic LoopNetwork.r[1].eth[2].queue queueingTime:histogram
field count 1
field mean 0
field stddev nan
field min 0
field max 0
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(packetPulled)
attr title "queueing times"
attr unit s
bin	-inf	0
bin	-0.5	0
bin	-0.48	0
bin	-0.46	0
bin	-0.44	0
bin	-0.42	0
bin	-0.4	0
bin	-0.38	0
bin	-0.36	0
bin	-0.34	0
bin	-0.32	0
bin	-0.3	0
bin	-0.28	0
bin	-0.26	0
bin	-0.24	0
bin	-0.22	0
bin	-0.2	0
bin	-0.18	0
bin	-0.16	0
bin	-0.14	0
bin	-0.12	0
bin	-0.1	0
bin	-0.08	0
bin	-0.06	0
bin	-0.04	0
bin	-0.02	0
bin	0	1
bin	0.02	0
bin	0.04	0
bin	0.06	0
bin	0.08	0
bin	0.1	0
bin	0.12	0
bin	0.14	0
bin	0.16	0
bin	0.18	0
bin	0.2	0
bin	0.22	0
bin	0.24	0
bin	0.26	0
bin	0.28	0
bin	0.3	0
bin	0.32	0
bin	0.34	0
bin	0.36	0
bin	0.38	0
bin	0.4	0
bin	0.42	0
bin	0.44	0
bin	0.46	0
bin	0.48	0
bin	0.5	0
scalar LoopNetwork.r[1].eth[2].queue outgoingPackets:count 1
attr recordingmode count
attr source packetPulled
attr title "outgoing packets, count"
attr unit pk
scalar LoopNetwork.r[1].eth[2].queue outgoingPacketLengths:sum 560
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPulled)
attr title "outgoing packet lengths, sum"
attr unit b
statistic LoopNetwork.r[1].eth[2].queue outgoingPacketLengths:histogram
field count 1
field mean 560
field stddev nan
field min 560
field max 560
field sum 560
field sqrsum 313600
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPulled)
attr title "outgoing packet lengths"
attr unit b
bin	-inf	0
bin	559	0
bin	560	1
bin	561	0
statistic LoopNetwork.r[1].eth[2].queue flowQueueingTime:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(demuxFlow(packetPulled))
attr title "flow queueing times"
attr unit s
bin	-inf	0
bin	0	0
bin	1	0
scalar LoopNetwork.r[1].eth[2].queue incomingPackets:count 1
attr recordingmode count
attr source packetPushStarted
attr title "incoming packets, count"
attr unit pk
scalar LoopNetwork.r[1].eth[2].queue incomingPacketLengths:sum 560
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths, sum"
attr unit b
statistic LoopNetwork.r[1].eth[2].queue incomingPacketLengths:histogram
field count 1
field mean 560
field stddev nan
field min 560
field max 560
field sum 560
field sqrsum 313600
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths"
attr unit b
bin	-inf	0
bin	559	0
bin	560	1
bin	561	0
scalar LoopNetwork.r[1].eth[2].queue droppedPacketsQueueOverflow:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsQueueOverflow(packetDropped)
attr title "dropped packets: queue overflow, count"
attr unit pk
scalar LoopNetwork.r[1].eth[2].queue droppedPacketLengthsQueueOverflow:sum 0
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetDropReasonIsQueueOverflow(packetDropped))
attr title "dropped packet lengths: queue overflow, sum"
attr unit b
par LoopNetwork.r[1].eth[2].mac typename "\"inet.linklayer.ethernet.basic.EthernetMac\""
par LoopNetwork.r[1].eth[2].mac interfaceTableModule "\"LoopNetwork.r[1].interfaceTable\""
par LoopNetwork.r[1].eth[2].mac displayStringTextFormat "\"rate: %b\\nsent: %s, rcvd: %r\\nqueue: %q, drop: %d\""
par LoopNetwork.r[1].eth[2].mac sendRawBytes false
par LoopNetwork.r[1].eth[2].mac promiscuous false
par LoopNetwork.r[1].eth[2].mac duplexMode true
par LoopNetwork.r[1].eth[2].mac mtu 1500B
attr unit B
par LoopNetwork.r[1].eth[2].mac fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[1].eth[2].mac stopOperationExtraTime -1s
attr unit s
par LoopNetwork.r[1].eth[2].mac stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.r[1].eth[2].mac "simulated time" 5313.5759468249
scalar LoopNetwork.r[1].eth[2].mac full-duplex 1
scalar LoopNetwork.r[1].eth[2].mac "frames/sec sent" 0.00018819717832349
scalar LoopNetwork.r[1].eth[2].mac "frames/sec rcvd" 0.00018819717832349
scalar LoopNetwork.r[1].eth[2].mac "bits/sec sent" 0.10539041986115
scalar LoopNetwork.r[1].eth[2].mac "bits/sec rcvd" 0.10539041986115
scalar LoopNetwork.r[1].eth[2].mac "rx channel idle (%)" 99.999999882565
scalar LoopNetwork.r[1].eth[2].mac "rx channel utilization (%)" 1.1743503927386e-07
scalar LoopNetwork.r[1].eth[2].mac txPk:count 1
attr interpolationmode none
attr recordingmode count
attr source packetSentToLower
attr title "packets transmitted, count"
scalar LoopNetwork.r[1].eth[2].mac txPk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToLower
attr title "packets transmitted, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[2].mac packetReceivedFromUpper:count 1
attr interpolationmode none
attr recordingmode count
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, count"
scalar LoopNetwork.r[1].eth[2].mac packetReceivedFromUpper:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[2].mac passedUpPk:count 1
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed to higher layer, count"
scalar LoopNetwork.r[1].eth[2].mac passedUpPk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[2].mac packetDropIncorrectlyReceived:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, count"
scalar LoopNetwork.r[1].eth[2].mac packetDropIncorrectlyReceived:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[2].mac packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, count"
scalar LoopNetwork.r[1].eth[2].mac packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[2].mac packetDropNotAddressedToUs:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, count"
scalar LoopNetwork.r[1].eth[2].mac packetDropNotAddressedToUs:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[2].mac rxPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units received, count"
scalar LoopNetwork.r[1].eth[2].mac rxPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units received, sum"
scalar LoopNetwork.r[1].eth[2].mac txPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units sent, count"
scalar LoopNetwork.r[1].eth[2].mac txPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units sent, sum"
scalar LoopNetwork.r[1].eth[2].mac rxPkOk:count 1
attr interpolationmode none
attr recordingmode count
attr source rxPkOk
attr title "packets received OK, count"
scalar LoopNetwork.r[1].eth[2].mac rxPkOk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source rxPkOk
attr title "packets received OK, sum(packetBytes)"
par LoopNetwork.r[1].eth[2] typename "\"inet.linklayer.ethernet.EthernetInterface\""
par LoopNetwork.r[1].eth[2] displayStringTextFormat "\"%a (%i)\\n%m\""
par LoopNetwork.r[1].eth[2] recordPcap false
par LoopNetwork.r[1].eth[2] numPcapRecorders 0
par LoopNetwork.r[1].eth[2] interfaceTableModule "\"LoopNetwork.r[1].interfaceTable\""
par LoopNetwork.r[1].eth[2] protocol "\"ethernetmac\""
par LoopNetwork.r[1].eth[2] address "\"0A-AA-00-00-00-06\""
attr mutable ""
par LoopNetwork.r[1].eth[2] duplexMode true
par LoopNetwork.r[1].eth[2] csmacdSupport false
par LoopNetwork.r[1].eth[2] bitrate 0bps
attr unit bps
par LoopNetwork.r[1].eth[2] fcsMode "\"declared\""
attr enum declared,computed
scalar LoopNetwork.r[1].eth[2] packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, count"
scalar LoopNetwork.r[1].eth[2] packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, sum(packetBytes)"
scalar LoopNetwork.r[1].eth[2] packetDropNoCarrier:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, count"
scalar LoopNetwork.r[1].eth[2] packetDropNoCarrier:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, sum(packetBytes)"
par LoopNetwork.r[1].ipv4.transportIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].ipv4.up.out[0].channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].ipv4.lp.out[2].channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].ipv4.ifIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[1].ipv4.configurator typename "\"inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator\""
par LoopNetwork.r[1].ipv4.configurator interfaceTableModule "\"LoopNetwork.r[1].interfaceTable\""
par LoopNetwork.r[1].ipv4.configurator routingTableModule "\"LoopNetwork.r[1].ipv4.routingTable\""
par LoopNetwork.r[1].ipv4.configurator networkConfiguratorModule "\"configurator\""
par LoopNetwork.r[1].ipv4.configurator configureRoutingTable true
par LoopNetwork.r[1].ipv4.routingTable typename "\"inet.networklayer.ipv4.Ipv4RoutingTable\""
par LoopNetwork.r[1].ipv4.routingTable interfaceTableModule "\"LoopNetwork.r[1].interfaceTable\""
par LoopNetwork.r[1].ipv4.routingTable routerId "\"auto\""
par LoopNetwork.r[1].ipv4.routingTable netmaskRoutes "\"*\""
par LoopNetwork.r[1].ipv4.routingTable forwarding true
par LoopNetwork.r[1].ipv4.routingTable multicastForwarding false
par LoopNetwork.r[1].ipv4.routingTable useAdminDist false
par LoopNetwork.r[1].ipv4.routingTable routingFile "\"\""
par LoopNetwork.r[1].ipv4.natTable typename "\"inet.networklayer.ipv4.Ipv4NatTable\""
par LoopNetwork.r[1].ipv4.natTable networkProtocolModule "\"^.ip\""
par LoopNetwork.r[1].ipv4.natTable config "<config/> at content:1"
par LoopNetwork.r[1].ipv4.up typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[1].ipv4.up displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[1].ipv4.up forwardServiceRegistration true
par LoopNetwork.r[1].ipv4.up forwardProtocolRegistration true
par LoopNetwork.r[1].ipv4.igmp typename "\"inet.networklayer.ipv4.Igmpv2\""
par LoopNetwork.r[1].ipv4.igmp interfaceTableModule "\"LoopNetwork.r[1].interfaceTable\""
par LoopNetwork.r[1].ipv4.igmp routingTableModule "\"LoopNetwork.r[1].ipv4.routingTable\""
par LoopNetwork.r[1].ipv4.igmp crcMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[1].ipv4.igmp enabled true
par LoopNetwork.r[1].ipv4.igmp robustnessVariable 2
par LoopNetwork.r[1].ipv4.igmp queryInterval 125s
attr unit s
par LoopNetwork.r[1].ipv4.igmp queryResponseInterval 10s
attr unit s
par LoopNetwork.r[1].ipv4.igmp groupMembershipInterval 260s
attr unit s
par LoopNetwork.r[1].ipv4.igmp otherQuerierPresentInterval 255s
attr unit s
par LoopNetwork.r[1].ipv4.igmp startupQueryInterval 31.25s
attr unit s
par LoopNetwork.r[1].ipv4.igmp startupQueryCount 2
par LoopNetwork.r[1].ipv4.igmp lastMemberQueryInterval 1s
attr unit s
par LoopNetwork.r[1].ipv4.igmp lastMemberQueryCount 2
par LoopNetwork.r[1].ipv4.igmp unsolicitedReportInterval 10s
attr unit s
par LoopNetwork.r[1].ipv4.icmp typename "\"inet.networklayer.ipv4.Icmp\""
par LoopNetwork.r[1].ipv4.icmp interfaceTableModule "\"LoopNetwork.r[1].interfaceTable\""
par LoopNetwork.r[1].ipv4.icmp routingTableModule "\"LoopNetwork.r[1].ipv4.routingTable\""
par LoopNetwork.r[1].ipv4.icmp crcMode "\"declared\""
attr enum declared,computed
attr mutable ""
par LoopNetwork.r[1].ipv4.icmp quoteLength 8B
attr mutable ""
attr unit B
par LoopNetwork.r[1].ipv4.mp typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[1].ipv4.mp displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[1].ipv4.mp forwardServiceRegistration true
par LoopNetwork.r[1].ipv4.mp forwardProtocolRegistration true
par LoopNetwork.r[1].ipv4.ip typename "\"inet.networklayer.ipv4.Ipv4\""
par LoopNetwork.r[1].ipv4.ip interfaceTableModule "\"LoopNetwork.r[1].interfaceTable\""
par LoopNetwork.r[1].ipv4.ip routingTableModule "\"LoopNetwork.r[1].ipv4.routingTable\""
par LoopNetwork.r[1].ipv4.ip arpModule "\"LoopNetwork.r[1].ipv4.arp\""
par LoopNetwork.r[1].ipv4.ip icmpModule "\"LoopNetwork.r[1].ipv4.icmp\""
par LoopNetwork.r[1].ipv4.ip crcMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[1].ipv4.ip timeToLive 32
par LoopNetwork.r[1].ipv4.ip multicastTimeToLive 32
par LoopNetwork.r[1].ipv4.ip fragmentTimeout 60s
attr unit s
par LoopNetwork.r[1].ipv4.ip limitedBroadcast false
par LoopNetwork.r[1].ipv4.ip directBroadcastInterfaces "\"\""
scalar LoopNetwork.r[1].ipv4.ip packetDropAddressResolutionFailed:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsAddressResolutionFailed(packetDropped)
attr title "packet drop: address resolution failed, count"
scalar LoopNetwork.r[1].ipv4.ip packetDropAddressResolutionFailed:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsAddressResolutionFailed(packetDropped)
attr title "packet drop: address resolution failed, sum(packetBytes)"
scalar LoopNetwork.r[1].ipv4.ip packetDropHopLimitReached:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsHopLimitReached(packetDropped)
attr title "packet drop: hop limit reached, count"
scalar LoopNetwork.r[1].ipv4.ip packetDropHopLimitReached:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsHopLimitReached(packetDropped)
attr title "packet drop: hop limit reached, sum(packetBytes)"
scalar LoopNetwork.r[1].ipv4.ip packetDropForwardingDisabled:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsForwardingDisabled(packetDropped)
attr title "packet drop: forwarding disabled, count"
scalar LoopNetwork.r[1].ipv4.ip packetDropForwardingDisabled:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsForwardingDisabled(packetDropped)
attr title "packet drop: forwarding disabled, sum(packetBytes)"
scalar LoopNetwork.r[1].ipv4.ip packetDropNoInterfaceFound:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoInterfaceFound(packetDropped)
attr title "packet drop: no interface found, count"
scalar LoopNetwork.r[1].ipv4.ip packetDropNoInterfaceFound:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoInterfaceFound(packetDropped)
attr title "packet drop: no interface found, sum(packetBytes)"
scalar LoopNetwork.r[1].ipv4.ip packetDropNoRouteFound:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoRouteFound(packetDropped)
attr title "packet drop: no route found, count"
scalar LoopNetwork.r[1].ipv4.ip packetDropNoRouteFound:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoRouteFound(packetDropped)
attr title "packet drop: no route found, sum(packetBytes)"
scalar LoopNetwork.r[1].ipv4.ip packetDropUndefined:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsUndefined(packetDropped)
attr title "packet drop: undefined, count"
scalar LoopNetwork.r[1].ipv4.ip packetDropUndefined:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsUndefined(packetDropped)
attr title "packet drop: undefined, sum(packetBytes)"
par LoopNetwork.r[1].ipv4.arp typename "\"inet.networklayer.arp.ipv4.Arp\""
par LoopNetwork.r[1].ipv4.arp interfaceTableModule "\"LoopNetwork.r[1].interfaceTable\""
par LoopNetwork.r[1].ipv4.arp routingTableModule "\"LoopNetwork.r[1].ipv4.routingTable\""
par LoopNetwork.r[1].ipv4.arp retryTimeout 1s
attr unit s
par LoopNetwork.r[1].ipv4.arp retryCount 3
par LoopNetwork.r[1].ipv4.arp cacheTimeout 120s
attr unit s
par LoopNetwork.r[1].ipv4.arp proxyArpInterfaces "\"*\""
scalar LoopNetwork.r[1].ipv4.arp arpReplySent:count 0
attr recordingmode count
attr source arpReplySent
attr title "ARP replies sent, count"
scalar LoopNetwork.r[1].ipv4.arp arpReplySent:sum(packetBytes) 0
attr recordingmode sum(packetBytes)
attr source arpReplySent
attr title "ARP replies sent, sum(packetBytes)"
scalar LoopNetwork.r[1].ipv4.arp arpRequestSent:count 0
attr recordingmode count
attr source arpRequestSent
attr title "ARP request sent, count"
scalar LoopNetwork.r[1].ipv4.arp arpRequestSent:sum(packetBytes) 0
attr recordingmode sum(packetBytes)
attr source arpRequestSent
attr title "ARP request sent, sum(packetBytes)"
scalar LoopNetwork.r[1].ipv4.arp arpResolutionFailed:count 0
attr recordingmode count
attr title "ARP failed resolutions, count"
scalar LoopNetwork.r[1].ipv4.arp arpResolutionCompleted:count 0
attr recordingmode count
attr title "ARP completed resolutions, count"
scalar LoopNetwork.r[1].ipv4.arp arpResolutionInitiated:count 0
attr recordingmode count
attr title "ARP initiated resolutions, count"
par LoopNetwork.r[1].ipv4.lp typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[1].ipv4.lp displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[1].ipv4.lp forwardServiceRegistration true
par LoopNetwork.r[1].ipv4.lp forwardProtocolRegistration true
par LoopNetwork.r[1].ipv4 typename "\"inet.networklayer.ipv4.Ipv4NetworkLayer\""
par LoopNetwork.r[1].ipv4 forwarding true
par LoopNetwork.r[1].ipv4 multicastForwarding false
par LoopNetwork.r[1].ipv4 interfaceTableModule "\"LoopNetwork.r[1].interfaceTable\""
par LoopNetwork.r[1].ipv4 displayStringTextFormat "\"%i\""
par LoopNetwork.r[1].nl typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[1].nl displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[1].nl forwardServiceRegistration true
par LoopNetwork.r[1].nl forwardProtocolRegistration true
par LoopNetwork.r[1].udp typename "\"inet.transportlayer.udp.Udp\""
par LoopNetwork.r[1].udp interfaceTableModule "\"LoopNetwork.r[1].interfaceTable\""
par LoopNetwork.r[1].udp icmpModule "\"^.ipv4.icmp\""
par LoopNetwork.r[1].udp icmpv6Module "\"^.ipv6.icmpv6\""
par LoopNetwork.r[1].udp crcMode "\"declared\""
attr enum disabled,declared,computed
par LoopNetwork.r[1].udp defaultMulticastLoop true
scalar LoopNetwork.r[1].udp packetReceived:count 1
attr interpolationmode none
attr recordingmode count
attr source packetReceived
attr title "packets received, count"
scalar LoopNetwork.r[1].udp packetReceived:sum(packetBytes) 32
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceived
attr title "packets received, sum(packetBytes)"
scalar LoopNetwork.r[1].udp packetSent:count 3
attr interpolationmode none
attr recordingmode count
attr source packetSent
attr title "packets sent, count"
scalar LoopNetwork.r[1].udp packetSent:sum(packetBytes) 96
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSent
attr title "packets sent, sum(packetBytes)"
scalar LoopNetwork.r[1].udp passedUpPk:count 1
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed up, count"
scalar LoopNetwork.r[1].udp droppedPkWrongPort:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoPortFound(packetDropped)
attr title "packets dropped (wrong port), count"
scalar LoopNetwork.r[1].udp droppedPkBadChecksum:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packets dropped (checksum error), count"
par LoopNetwork.r[1].tn typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[1].tn displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[1].tn forwardServiceRegistration true
par LoopNetwork.r[1].tn forwardProtocolRegistration true
par LoopNetwork.r[1].at typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[1].at displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[1].at forwardServiceRegistration true
par LoopNetwork.r[1].at forwardProtocolRegistration true
par LoopNetwork.r[1].rip typename "\"inet.routing.rip.Rip\""
par LoopNetwork.r[1].rip interfaceTableModule "\"LoopNetwork.r[1].interfaceTable\""
par LoopNetwork.r[1].rip routingTableModule "\"^.ipv4.routingTable\""
par LoopNetwork.r[1].rip ripConfig "<config>...</config> at content:1"
par LoopNetwork.r[1].rip mode "\"RIPv2\""
attr enum RIPv2,RIPng
par LoopNetwork.r[1].rip udpPort 520
par LoopNetwork.r[1].rip startupTime "uniform(0s, 5s)"
attr unit s
par LoopNetwork.r[1].rip shutdownTime 1s
attr unit s
par LoopNetwork.r[1].rip updateInterval 30s
attr unit s
par LoopNetwork.r[1].rip routeExpiryTime 180s
attr unit s
par LoopNetwork.r[1].rip routePurgeTime 120s
attr unit s
par LoopNetwork.r[1].rip holdDownTime 0s
attr unit s
par LoopNetwork.r[1].rip triggeredUpdate true
par LoopNetwork.r[1].rip triggeredUpdateDelay "uniform(1s, 5s)"
attr unit s
par LoopNetwork.r[1].rip stopOperationExtraTime -1s
attr unit s
par LoopNetwork.r[1].rip stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.r[1].rip numRoutes:last nan
attr interpolationmode none
attr recordingmode last
attr source numRoutes
attr title "number of routes, last"
scalar LoopNetwork.r[1].rip badResponse:count 0
attr interpolationmode none
attr recordingmode count
attr source badResponse
attr title "bad response received, count"
scalar LoopNetwork.r[1].rip rcvdResponse:count 0
attr interpolationmode none
attr recordingmode count
attr source rcvdResponse
attr title "response received, count"
scalar LoopNetwork.r[1].rip sentUpdate:count 0
attr interpolationmode none
attr recordingmode count
attr source sentUpdate
attr title "update sent, count"
scalar LoopNetwork.r[1].rip sentRequest:count 3
attr interpolationmode none
attr recordingmode count
attr source sentRequest
attr title "request sent, count"
par LoopNetwork.r[1] typename "\"CustomRipRouter\""
par LoopNetwork.r[1] hasStatus false
par LoopNetwork.r[1] osgModel "\"\""
par LoopNetwork.r[1] osgModelColor "\"\""
par LoopNetwork.r[1] canvasImage "\"\""
par LoopNetwork.r[1] canvasImageColor "\"\""
par LoopNetwork.r[1] recordPcap false
par LoopNetwork.r[1] numPcapRecorders 0
par LoopNetwork.r[1] numLoInterfaces 1
par LoopNetwork.r[1] numWlanInterfaces 0
par LoopNetwork.r[1] numEthInterfaces 0
par LoopNetwork.r[1] numPppInterfaces 0
par LoopNetwork.r[1] numTunInterfaces 0
par LoopNetwork.r[1] numVirtInterfaces 0
par LoopNetwork.r[1] fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[1] hasIpv4 true
par LoopNetwork.r[1] hasIpv6 false
par LoopNetwork.r[1] hasGn false
par LoopNetwork.r[1] forwarding true
par LoopNetwork.r[1] multicastForwarding false
par LoopNetwork.r[1] hasUdp true
par LoopNetwork.r[1] hasTcp false
par LoopNetwork.r[1] hasSctp false
par LoopNetwork.r[1] numApps 0
par LoopNetwork.r[1] hasEigrp false
par LoopNetwork.r[1] hasOspf false
par LoopNetwork.r[1] hasRip true
par LoopNetwork.r[1] hasBgp false
par LoopNetwork.r[1] hasPim false
par LoopNetwork.r[1] hasDhcp false
par LoopNetwork.r[2].ethg$i[0].channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].eth[0].phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].ethg$i[1].channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].eth[1].phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].ethg$i[2].channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].eth[2].phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].interfaceTable typename "\"inet.networklayer.common.InterfaceTable\""
par LoopNetwork.r[2].interfaceTable displayAddresses false
par LoopNetwork.r[2].cb typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[2].cb displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[2].cb forwardServiceRegistration true
par LoopNetwork.r[2].cb forwardProtocolRegistration true
par LoopNetwork.r[2].bl typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[2].bl displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[2].bl forwardServiceRegistration true
par LoopNetwork.r[2].bl forwardProtocolRegistration true
par LoopNetwork.r[2].ethernet typename "\"inet.linklayer.ethernet.basic.EthernetEncapsulation\""
par LoopNetwork.r[2].ethernet registerProtocol true
par LoopNetwork.r[2].ethernet interfaceTableModule "\"LoopNetwork.r[2].interfaceTable\""
par LoopNetwork.r[2].ethernet fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[2].ethernet stopOperationExtraTime -1s
attr unit s
par LoopNetwork.r[2].ethernet stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.r[2].ethernet decapPk:count 2
attr interpolationmode none
attr recordingmode count
attr source decapPk
attr title "packets decapsulated, count"
scalar LoopNetwork.r[2].ethernet decapPk:sum(packetBytes) 104
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source decapPk
attr title "packets decapsulated, sum(packetBytes)"
scalar LoopNetwork.r[2].ethernet encapPk:count 3
attr interpolationmode none
attr recordingmode count
attr source encapPk
attr title "packets encapsulated, count"
scalar LoopNetwork.r[2].ethernet encapPk:sum(packetBytes) 156
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source encapPk
attr title "packets encapsulated, sum(packetBytes)"
scalar LoopNetwork.r[2].ethernet pauseSent:count 0
attr recordingmode count
attr title "pause sent, count"
scalar LoopNetwork.r[2].ethernet pauseSent:sum 0
attr recordingmode sum
attr title "pause sent, sum"
par LoopNetwork.r[2].li typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[2].li displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[2].li forwardServiceRegistration true
par LoopNetwork.r[2].li forwardProtocolRegistration true
par LoopNetwork.r[2].lo[0].upperLayerIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].lo[0].lo.upperLayerOut.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].lo[0].lo typename "\"inet.linklayer.loopback.Loopback\""
par LoopNetwork.r[2].lo[0].lo interfaceTableModule "\"LoopNetwork.r[2].interfaceTable\""
par LoopNetwork.r[2].lo[0].lo mtu 4470B
attr unit B
scalar LoopNetwork.r[2].lo[0].lo rcvdPkFromHl:count 0
attr interpolationmode none
attr recordingmode count
attr source packetReceivedFromUpper
attr title "packets received from higher layer, count"
scalar LoopNetwork.r[2].lo[0].lo rcvdPkFromHl:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceivedFromUpper
attr title "packets received from higher layer, sum(packetBytes)"
scalar LoopNetwork.r[2].lo[0].lo passedUpPk:count 0
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed to higher layer, count"
scalar LoopNetwork.r[2].lo[0].lo passedUpPk:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, sum(packetBytes)"
par LoopNetwork.r[2].lo[0] typename "\"inet.linklayer.loopback.LoopbackInterface\""
par LoopNetwork.r[2].lo[0] displayStringTextFormat "\"%a (%i)\\n%m\""
par LoopNetwork.r[2].lo[0] recordPcap false
par LoopNetwork.r[2].lo[0] numPcapRecorders 0
par LoopNetwork.r[2].lo[0] interfaceTableModule "\"LoopNetwork.r[2].interfaceTable\""
scalar LoopNetwork.r[2].lo[0] packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, count"
scalar LoopNetwork.r[2].lo[0] packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, sum(packetBytes)"
scalar LoopNetwork.r[2].lo[0] packetDropNoCarrier:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, count"
scalar LoopNetwork.r[2].lo[0] packetDropNoCarrier:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, sum(packetBytes)"
par LoopNetwork.r[2].eth[0].mac.phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].eth[0].phys$i.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].eth[0].upperLayerIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].eth[0].mac.upperLayerOut.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].eth[0].queue typename "\"inet.linklayer.ethernet.common.EthernetQueue\""
par LoopNetwork.r[2].eth[0].queue displayStringTextFormat "\"contains %p pk (%l) pushed %u\\npulled %o removed %r dropped %d\""
par LoopNetwork.r[2].eth[0].queue packetCapacity 1000
par LoopNetwork.r[2].eth[0].queue dataCapacity -1b
attr unit b
par LoopNetwork.r[2].eth[0].queue dropperClass "\"inet::queueing::PacketAtCollectionEndDropper\""
par LoopNetwork.r[2].eth[0].queue comparatorClass "\"inet::EthernetFrameTypeComparator\""
par LoopNetwork.r[2].eth[0].queue bufferModule "\"\""
scalar LoopNetwork.r[2].eth[0].queue queueLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, last"
attr unit pk
scalar LoopNetwork.r[2].eth[0].queue queueLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, max"
attr unit pk
scalar LoopNetwork.r[2].eth[0].queue queueLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, timeavg"
attr unit pk
scalar LoopNetwork.r[2].eth[0].queue queueBitLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, last"
attr unit b
scalar LoopNetwork.r[2].eth[0].queue queueBitLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, max"
attr unit b
scalar LoopNetwork.r[2].eth[0].queue queueBitLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, timeavg"
attr unit b
statistic LoopNetwork.r[2].eth[0].queue queueingTime:histogram
field count 1
field mean 0
field stddev nan
field min 0
field max 0
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(packetPulled)
attr title "queueing times"
attr unit s
bin	-inf	0
bin	-0.5	0
bin	-0.48	0
bin	-0.46	0
bin	-0.44	0
bin	-0.42	0
bin	-0.4	0
bin	-0.38	0
bin	-0.36	0
bin	-0.34	0
bin	-0.32	0
bin	-0.3	0
bin	-0.28	0
bin	-0.26	0
bin	-0.24	0
bin	-0.22	0
bin	-0.2	0
bin	-0.18	0
bin	-0.16	0
bin	-0.14	0
bin	-0.12	0
bin	-0.1	0
bin	-0.08	0
bin	-0.06	0
bin	-0.04	0
bin	-0.02	0
bin	0	1
bin	0.02	0
bin	0.04	0
bin	0.06	0
bin	0.08	0
bin	0.1	0
bin	0.12	0
bin	0.14	0
bin	0.16	0
bin	0.18	0
bin	0.2	0
bin	0.22	0
bin	0.24	0
bin	0.26	0
bin	0.28	0
bin	0.3	0
bin	0.32	0
bin	0.34	0
bin	0.36	0
bin	0.38	0
bin	0.4	0
bin	0.42	0
bin	0.44	0
bin	0.46	0
bin	0.48	0
bin	0.5	0
scalar LoopNetwork.r[2].eth[0].queue outgoingPackets:count 1
attr recordingmode count
attr source packetPulled
attr title "outgoing packets, count"
attr unit pk
scalar LoopNetwork.r[2].eth[0].queue outgoingPacketLengths:sum 560
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPulled)
attr title "outgoing packet lengths, sum"
attr unit b
statistic LoopNetwork.r[2].eth[0].queue outgoingPacketLengths:histogram
field count 1
field mean 560
field stddev nan
field min 560
field max 560
field sum 560
field sqrsum 313600
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPulled)
attr title "outgoing packet lengths"
attr unit b
bin	-inf	0
bin	559	0
bin	560	1
bin	561	0
statistic LoopNetwork.r[2].eth[0].queue flowQueueingTime:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(demuxFlow(packetPulled))
attr title "flow queueing times"
attr unit s
bin	-inf	0
bin	0	0
bin	1	0
scalar LoopNetwork.r[2].eth[0].queue incomingPackets:count 1
attr recordingmode count
attr source packetPushStarted
attr title "incoming packets, count"
attr unit pk
scalar LoopNetwork.r[2].eth[0].queue incomingPacketLengths:sum 560
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths, sum"
attr unit b
statistic LoopNetwork.r[2].eth[0].queue incomingPacketLengths:histogram
field count 1
field mean 560
field stddev nan
field min 560
field max 560
field sum 560
field sqrsum 313600
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths"
attr unit b
bin	-inf	0
bin	559	0
bin	560	1
bin	561	0
scalar LoopNetwork.r[2].eth[0].queue droppedPacketsQueueOverflow:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsQueueOverflow(packetDropped)
attr title "dropped packets: queue overflow, count"
attr unit pk
scalar LoopNetwork.r[2].eth[0].queue droppedPacketLengthsQueueOverflow:sum 0
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetDropReasonIsQueueOverflow(packetDropped))
attr title "dropped packet lengths: queue overflow, sum"
attr unit b
par LoopNetwork.r[2].eth[0].mac typename "\"inet.linklayer.ethernet.basic.EthernetMac\""
par LoopNetwork.r[2].eth[0].mac interfaceTableModule "\"LoopNetwork.r[2].interfaceTable\""
par LoopNetwork.r[2].eth[0].mac displayStringTextFormat "\"rate: %b\\nsent: %s, rcvd: %r\\nqueue: %q, drop: %d\""
par LoopNetwork.r[2].eth[0].mac sendRawBytes false
par LoopNetwork.r[2].eth[0].mac promiscuous false
par LoopNetwork.r[2].eth[0].mac duplexMode true
par LoopNetwork.r[2].eth[0].mac mtu 1500B
attr unit B
par LoopNetwork.r[2].eth[0].mac fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[2].eth[0].mac stopOperationExtraTime -1s
attr unit s
par LoopNetwork.r[2].eth[0].mac stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.r[2].eth[0].mac "simulated time" 5313.5759468249
scalar LoopNetwork.r[2].eth[0].mac full-duplex 1
scalar LoopNetwork.r[2].eth[0].mac "frames/sec sent" 0.00018819717832349
scalar LoopNetwork.r[2].eth[0].mac "frames/sec rcvd" 0
scalar LoopNetwork.r[2].eth[0].mac "bits/sec sent" 0.10539041986115
scalar LoopNetwork.r[2].eth[0].mac "bits/sec rcvd" 0
scalar LoopNetwork.r[2].eth[0].mac "rx channel idle (%)" 100
scalar LoopNetwork.r[2].eth[0].mac "rx channel utilization (%)" 0
scalar LoopNetwork.r[2].eth[0].mac txPk:count 1
attr interpolationmode none
attr recordingmode count
attr source packetSentToLower
attr title "packets transmitted, count"
scalar LoopNetwork.r[2].eth[0].mac txPk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToLower
attr title "packets transmitted, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[0].mac packetReceivedFromUpper:count 1
attr interpolationmode none
attr recordingmode count
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, count"
scalar LoopNetwork.r[2].eth[0].mac packetReceivedFromUpper:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[0].mac passedUpPk:count 0
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed to higher layer, count"
scalar LoopNetwork.r[2].eth[0].mac passedUpPk:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[0].mac packetDropIncorrectlyReceived:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, count"
scalar LoopNetwork.r[2].eth[0].mac packetDropIncorrectlyReceived:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[0].mac packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, count"
scalar LoopNetwork.r[2].eth[0].mac packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[0].mac packetDropNotAddressedToUs:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, count"
scalar LoopNetwork.r[2].eth[0].mac packetDropNotAddressedToUs:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[0].mac rxPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units received, count"
scalar LoopNetwork.r[2].eth[0].mac rxPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units received, sum"
scalar LoopNetwork.r[2].eth[0].mac txPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units sent, count"
scalar LoopNetwork.r[2].eth[0].mac txPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units sent, sum"
scalar LoopNetwork.r[2].eth[0].mac rxPkOk:count 0
attr interpolationmode none
attr recordingmode count
attr source rxPkOk
attr title "packets received OK, count"
scalar LoopNetwork.r[2].eth[0].mac rxPkOk:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source rxPkOk
attr title "packets received OK, sum(packetBytes)"
par LoopNetwork.r[2].eth[0] typename "\"inet.linklayer.ethernet.EthernetInterface\""
par LoopNetwork.r[2].eth[0] displayStringTextFormat "\"%a (%i)\\n%m\""
par LoopNetwork.r[2].eth[0] recordPcap false
par LoopNetwork.r[2].eth[0] numPcapRecorders 0
par LoopNetwork.r[2].eth[0] interfaceTableModule "\"LoopNetwork.r[2].interfaceTable\""
par LoopNetwork.r[2].eth[0] protocol "\"ethernetmac\""
par LoopNetwork.r[2].eth[0] address "\"0A-AA-00-00-00-07\""
attr mutable ""
par LoopNetwork.r[2].eth[0] duplexMode true
par LoopNetwork.r[2].eth[0] csmacdSupport false
par LoopNetwork.r[2].eth[0] bitrate 0bps
attr unit bps
par LoopNetwork.r[2].eth[0] fcsMode "\"declared\""
attr enum declared,computed
scalar LoopNetwork.r[2].eth[0] packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, count"
scalar LoopNetwork.r[2].eth[0] packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[0] packetDropNoCarrier:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, count"
scalar LoopNetwork.r[2].eth[0] packetDropNoCarrier:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, sum(packetBytes)"
par LoopNetwork.r[2].eth[1].mac.phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].eth[1].phys$i.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].eth[1].upperLayerIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].eth[1].mac.upperLayerOut.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].eth[1].queue typename "\"inet.linklayer.ethernet.common.EthernetQueue\""
par LoopNetwork.r[2].eth[1].queue displayStringTextFormat "\"contains %p pk (%l) pushed %u\\npulled %o removed %r dropped %d\""
par LoopNetwork.r[2].eth[1].queue packetCapacity 1000
par LoopNetwork.r[2].eth[1].queue dataCapacity -1b
attr unit b
par LoopNetwork.r[2].eth[1].queue dropperClass "\"inet::queueing::PacketAtCollectionEndDropper\""
par LoopNetwork.r[2].eth[1].queue comparatorClass "\"inet::EthernetFrameTypeComparator\""
par LoopNetwork.r[2].eth[1].queue bufferModule "\"\""
scalar LoopNetwork.r[2].eth[1].queue queueLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, last"
attr unit pk
scalar LoopNetwork.r[2].eth[1].queue queueLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, max"
attr unit pk
scalar LoopNetwork.r[2].eth[1].queue queueLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, timeavg"
attr unit pk
scalar LoopNetwork.r[2].eth[1].queue queueBitLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, last"
attr unit b
scalar LoopNetwork.r[2].eth[1].queue queueBitLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, max"
attr unit b
scalar LoopNetwork.r[2].eth[1].queue queueBitLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, timeavg"
attr unit b
statistic LoopNetwork.r[2].eth[1].queue queueingTime:histogram
field count 1
field mean 0
field stddev nan
field min 0
field max 0
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(packetPulled)
attr title "queueing times"
attr unit s
bin	-inf	0
bin	-0.5	0
bin	-0.48	0
bin	-0.46	0
bin	-0.44	0
bin	-0.42	0
bin	-0.4	0
bin	-0.38	0
bin	-0.36	0
bin	-0.34	0
bin	-0.32	0
bin	-0.3	0
bin	-0.28	0
bin	-0.26	0
bin	-0.24	0
bin	-0.22	0
bin	-0.2	0
bin	-0.18	0
bin	-0.16	0
bin	-0.14	0
bin	-0.12	0
bin	-0.1	0
bin	-0.08	0
bin	-0.06	0
bin	-0.04	0
bin	-0.02	0
bin	0	1
bin	0.02	0
bin	0.04	0
bin	0.06	0
bin	0.08	0
bin	0.1	0
bin	0.12	0
bin	0.14	0
bin	0.16	0
bin	0.18	0
bin	0.2	0
bin	0.22	0
bin	0.24	0
bin	0.26	0
bin	0.28	0
bin	0.3	0
bin	0.32	0
bin	0.34	0
bin	0.36	0
bin	0.38	0
bin	0.4	0
bin	0.42	0
bin	0.44	0
bin	0.46	0
bin	0.48	0
bin	0.5	0
scalar LoopNetwork.r[2].eth[1].queue outgoingPackets:count 1
attr recordingmode count
attr source packetPulled
attr title "outgoing packets, count"
attr unit pk
scalar LoopNetwork.r[2].eth[1].queue outgoingPacketLengths:sum 560
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPulled)
attr title "outgoing packet lengths, sum"
attr unit b
statistic LoopNetwork.r[2].eth[1].queue outgoingPacketLengths:histogram
field count 1
field mean 560
field stddev nan
field min 560
field max 560
field sum 560
field sqrsum 313600
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPulled)
attr title "outgoing packet lengths"
attr unit b
bin	-inf	0
bin	559	0
bin	560	1
bin	561	0
statistic LoopNetwork.r[2].eth[1].queue flowQueueingTime:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(demuxFlow(packetPulled))
attr title "flow queueing times"
attr unit s
bin	-inf	0
bin	0	0
bin	1	0
scalar LoopNetwork.r[2].eth[1].queue incomingPackets:count 1
attr recordingmode count
attr source packetPushStarted
attr title "incoming packets, count"
attr unit pk
scalar LoopNetwork.r[2].eth[1].queue incomingPacketLengths:sum 560
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths, sum"
attr unit b
statistic LoopNetwork.r[2].eth[1].queue incomingPacketLengths:histogram
field count 1
field mean 560
field stddev nan
field min 560
field max 560
field sum 560
field sqrsum 313600
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths"
attr unit b
bin	-inf	0
bin	559	0
bin	560	1
bin	561	0
scalar LoopNetwork.r[2].eth[1].queue droppedPacketsQueueOverflow:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsQueueOverflow(packetDropped)
attr title "dropped packets: queue overflow, count"
attr unit pk
scalar LoopNetwork.r[2].eth[1].queue droppedPacketLengthsQueueOverflow:sum 0
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetDropReasonIsQueueOverflow(packetDropped))
attr title "dropped packet lengths: queue overflow, sum"
attr unit b
par LoopNetwork.r[2].eth[1].mac typename "\"inet.linklayer.ethernet.basic.EthernetMac\""
par LoopNetwork.r[2].eth[1].mac interfaceTableModule "\"LoopNetwork.r[2].interfaceTable\""
par LoopNetwork.r[2].eth[1].mac displayStringTextFormat "\"rate: %b\\nsent: %s, rcvd: %r\\nqueue: %q, drop: %d\""
par LoopNetwork.r[2].eth[1].mac sendRawBytes false
par LoopNetwork.r[2].eth[1].mac promiscuous false
par LoopNetwork.r[2].eth[1].mac duplexMode true
par LoopNetwork.r[2].eth[1].mac mtu 1500B
attr unit B
par LoopNetwork.r[2].eth[1].mac fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[2].eth[1].mac stopOperationExtraTime -1s
attr unit s
par LoopNetwork.r[2].eth[1].mac stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.r[2].eth[1].mac "simulated time" 5313.5759468249
scalar LoopNetwork.r[2].eth[1].mac full-duplex 1
scalar LoopNetwork.r[2].eth[1].mac "frames/sec sent" 0.00018819717832349
scalar LoopNetwork.r[2].eth[1].mac "frames/sec rcvd" 0.00018819717832349
scalar LoopNetwork.r[2].eth[1].mac "bits/sec sent" 0.10539041986115
scalar LoopNetwork.r[2].eth[1].mac "bits/sec rcvd" 0.10539041986115
scalar LoopNetwork.r[2].eth[1].mac "rx channel idle (%)" 99.999999882565
scalar LoopNetwork.r[2].eth[1].mac "rx channel utilization (%)" 1.1743503927386e-07
scalar LoopNetwork.r[2].eth[1].mac txPk:count 1
attr interpolationmode none
attr recordingmode count
attr source packetSentToLower
attr title "packets transmitted, count"
scalar LoopNetwork.r[2].eth[1].mac txPk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToLower
attr title "packets transmitted, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[1].mac packetReceivedFromUpper:count 1
attr interpolationmode none
attr recordingmode count
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, count"
scalar LoopNetwork.r[2].eth[1].mac packetReceivedFromUpper:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[1].mac passedUpPk:count 1
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed to higher layer, count"
scalar LoopNetwork.r[2].eth[1].mac passedUpPk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[1].mac packetDropIncorrectlyReceived:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, count"
scalar LoopNetwork.r[2].eth[1].mac packetDropIncorrectlyReceived:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[1].mac packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, count"
scalar LoopNetwork.r[2].eth[1].mac packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[1].mac packetDropNotAddressedToUs:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, count"
scalar LoopNetwork.r[2].eth[1].mac packetDropNotAddressedToUs:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[1].mac rxPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units received, count"
scalar LoopNetwork.r[2].eth[1].mac rxPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units received, sum"
scalar LoopNetwork.r[2].eth[1].mac txPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units sent, count"
scalar LoopNetwork.r[2].eth[1].mac txPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units sent, sum"
scalar LoopNetwork.r[2].eth[1].mac rxPkOk:count 1
attr interpolationmode none
attr recordingmode count
attr source rxPkOk
attr title "packets received OK, count"
scalar LoopNetwork.r[2].eth[1].mac rxPkOk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source rxPkOk
attr title "packets received OK, sum(packetBytes)"
par LoopNetwork.r[2].eth[1] typename "\"inet.linklayer.ethernet.EthernetInterface\""
par LoopNetwork.r[2].eth[1] displayStringTextFormat "\"%a (%i)\\n%m\""
par LoopNetwork.r[2].eth[1] recordPcap false
par LoopNetwork.r[2].eth[1] numPcapRecorders 0
par LoopNetwork.r[2].eth[1] interfaceTableModule "\"LoopNetwork.r[2].interfaceTable\""
par LoopNetwork.r[2].eth[1] protocol "\"ethernetmac\""
par LoopNetwork.r[2].eth[1] address "\"0A-AA-00-00-00-08\""
attr mutable ""
par LoopNetwork.r[2].eth[1] duplexMode true
par LoopNetwork.r[2].eth[1] csmacdSupport false
par LoopNetwork.r[2].eth[1] bitrate 0bps
attr unit bps
par LoopNetwork.r[2].eth[1] fcsMode "\"declared\""
attr enum declared,computed
scalar LoopNetwork.r[2].eth[1] packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, count"
scalar LoopNetwork.r[2].eth[1] packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[1] packetDropNoCarrier:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, count"
scalar LoopNetwork.r[2].eth[1] packetDropNoCarrier:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, sum(packetBytes)"
par LoopNetwork.r[2].eth[2].mac.phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].eth[2].phys$i.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].eth[2].upperLayerIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].eth[2].mac.upperLayerOut.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].eth[2].queue typename "\"inet.linklayer.ethernet.common.EthernetQueue\""
par LoopNetwork.r[2].eth[2].queue displayStringTextFormat "\"contains %p pk (%l) pushed %u\\npulled %o removed %r dropped %d\""
par LoopNetwork.r[2].eth[2].queue packetCapacity 1000
par LoopNetwork.r[2].eth[2].queue dataCapacity -1b
attr unit b
par LoopNetwork.r[2].eth[2].queue dropperClass "\"inet::queueing::PacketAtCollectionEndDropper\""
par LoopNetwork.r[2].eth[2].queue comparatorClass "\"inet::EthernetFrameTypeComparator\""
par LoopNetwork.r[2].eth[2].queue bufferModule "\"\""
scalar LoopNetwork.r[2].eth[2].queue queueLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, last"
attr unit pk
scalar LoopNetwork.r[2].eth[2].queue queueLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, max"
attr unit pk
scalar LoopNetwork.r[2].eth[2].queue queueLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, timeavg"
attr unit pk
scalar LoopNetwork.r[2].eth[2].queue queueBitLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, last"
attr unit b
scalar LoopNetwork.r[2].eth[2].queue queueBitLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, max"
attr unit b
scalar LoopNetwork.r[2].eth[2].queue queueBitLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, timeavg"
attr unit b
statistic LoopNetwork.r[2].eth[2].queue queueingTime:histogram
field count 1
field mean 0
field stddev nan
field min 0
field max 0
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(packetPulled)
attr title "queueing times"
attr unit s
bin	-inf	0
bin	-0.5	0
bin	-0.48	0
bin	-0.46	0
bin	-0.44	0
bin	-0.42	0
bin	-0.4	0
bin	-0.38	0
bin	-0.36	0
bin	-0.34	0
bin	-0.32	0
bin	-0.3	0
bin	-0.28	0
bin	-0.26	0
bin	-0.24	0
bin	-0.22	0
bin	-0.2	0
bin	-0.18	0
bin	-0.16	0
bin	-0.14	0
bin	-0.12	0
bin	-0.1	0
bin	-0.08	0
bin	-0.06	0
bin	-0.04	0
bin	-0.02	0
bin	0	1
bin	0.02	0
bin	0.04	0
bin	0.06	0
bin	0.08	0
bin	0.1	0
bin	0.12	0
bin	0.14	0
bin	0.16	0
bin	0.18	0
bin	0.2	0
bin	0.22	0
bin	0.24	0
bin	0.26	0
bin	0.28	0
bin	0.3	0
bin	0.32	0
bin	0.34	0
bin	0.36	0
bin	0.38	0
bin	0.4	0
bin	0.42	0
bin	0.44	0
bin	0.46	0
bin	0.48	0
bin	0.5	0
scalar LoopNetwork.r[2].eth[2].queue outgoingPackets:count 1
attr recordingmode count
attr source packetPulled
attr title "outgoing packets, count"
attr unit pk
scalar LoopNetwork.r[2].eth[2].queue outgoingPacketLengths:sum 560
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPulled)
attr title "outgoing packet lengths, sum"
attr unit b
statistic LoopNetwork.r[2].eth[2].queue outgoingPacketLengths:histogram
field count 1
field mean 560
field stddev nan
field min 560
field max 560
field sum 560
field sqrsum 313600
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPulled)
attr title "outgoing packet lengths"
attr unit b
bin	-inf	0
bin	559	0
bin	560	1
bin	561	0
statistic LoopNetwork.r[2].eth[2].queue flowQueueingTime:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(demuxFlow(packetPulled))
attr title "flow queueing times"
attr unit s
bin	-inf	0
bin	0	0
bin	1	0
scalar LoopNetwork.r[2].eth[2].queue incomingPackets:count 1
attr recordingmode count
attr source packetPushStarted
attr title "incoming packets, count"
attr unit pk
scalar LoopNetwork.r[2].eth[2].queue incomingPacketLengths:sum 560
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths, sum"
attr unit b
statistic LoopNetwork.r[2].eth[2].queue incomingPacketLengths:histogram
field count 1
field mean 560
field stddev nan
field min 560
field max 560
field sum 560
field sqrsum 313600
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths"
attr unit b
bin	-inf	0
bin	559	0
bin	560	1
bin	561	0
scalar LoopNetwork.r[2].eth[2].queue droppedPacketsQueueOverflow:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsQueueOverflow(packetDropped)
attr title "dropped packets: queue overflow, count"
attr unit pk
scalar LoopNetwork.r[2].eth[2].queue droppedPacketLengthsQueueOverflow:sum 0
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetDropReasonIsQueueOverflow(packetDropped))
attr title "dropped packet lengths: queue overflow, sum"
attr unit b
par LoopNetwork.r[2].eth[2].mac typename "\"inet.linklayer.ethernet.basic.EthernetMac\""
par LoopNetwork.r[2].eth[2].mac interfaceTableModule "\"LoopNetwork.r[2].interfaceTable\""
par LoopNetwork.r[2].eth[2].mac displayStringTextFormat "\"rate: %b\\nsent: %s, rcvd: %r\\nqueue: %q, drop: %d\""
par LoopNetwork.r[2].eth[2].mac sendRawBytes false
par LoopNetwork.r[2].eth[2].mac promiscuous false
par LoopNetwork.r[2].eth[2].mac duplexMode true
par LoopNetwork.r[2].eth[2].mac mtu 1500B
attr unit B
par LoopNetwork.r[2].eth[2].mac fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[2].eth[2].mac stopOperationExtraTime -1s
attr unit s
par LoopNetwork.r[2].eth[2].mac stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.r[2].eth[2].mac "simulated time" 5313.5759468249
scalar LoopNetwork.r[2].eth[2].mac full-duplex 1
scalar LoopNetwork.r[2].eth[2].mac "frames/sec sent" 0.00018819717832349
scalar LoopNetwork.r[2].eth[2].mac "frames/sec rcvd" 0.00018819717832349
scalar LoopNetwork.r[2].eth[2].mac "bits/sec sent" 0.10539041986115
scalar LoopNetwork.r[2].eth[2].mac "bits/sec rcvd" 0.10539041986115
scalar LoopNetwork.r[2].eth[2].mac "rx channel idle (%)" 99.999999882565
scalar LoopNetwork.r[2].eth[2].mac "rx channel utilization (%)" 1.1743503927386e-07
scalar LoopNetwork.r[2].eth[2].mac txPk:count 1
attr interpolationmode none
attr recordingmode count
attr source packetSentToLower
attr title "packets transmitted, count"
scalar LoopNetwork.r[2].eth[2].mac txPk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToLower
attr title "packets transmitted, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[2].mac packetReceivedFromUpper:count 1
attr interpolationmode none
attr recordingmode count
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, count"
scalar LoopNetwork.r[2].eth[2].mac packetReceivedFromUpper:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[2].mac passedUpPk:count 1
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed to higher layer, count"
scalar LoopNetwork.r[2].eth[2].mac passedUpPk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[2].mac packetDropIncorrectlyReceived:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, count"
scalar LoopNetwork.r[2].eth[2].mac packetDropIncorrectlyReceived:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[2].mac packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, count"
scalar LoopNetwork.r[2].eth[2].mac packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[2].mac packetDropNotAddressedToUs:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, count"
scalar LoopNetwork.r[2].eth[2].mac packetDropNotAddressedToUs:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[2].mac rxPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units received, count"
scalar LoopNetwork.r[2].eth[2].mac rxPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units received, sum"
scalar LoopNetwork.r[2].eth[2].mac txPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units sent, count"
scalar LoopNetwork.r[2].eth[2].mac txPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units sent, sum"
scalar LoopNetwork.r[2].eth[2].mac rxPkOk:count 1
attr interpolationmode none
attr recordingmode count
attr source rxPkOk
attr title "packets received OK, count"
scalar LoopNetwork.r[2].eth[2].mac rxPkOk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source rxPkOk
attr title "packets received OK, sum(packetBytes)"
par LoopNetwork.r[2].eth[2] typename "\"inet.linklayer.ethernet.EthernetInterface\""
par LoopNetwork.r[2].eth[2] displayStringTextFormat "\"%a (%i)\\n%m\""
par LoopNetwork.r[2].eth[2] recordPcap false
par LoopNetwork.r[2].eth[2] numPcapRecorders 0
par LoopNetwork.r[2].eth[2] interfaceTableModule "\"LoopNetwork.r[2].interfaceTable\""
par LoopNetwork.r[2].eth[2] protocol "\"ethernetmac\""
par LoopNetwork.r[2].eth[2] address "\"0A-AA-00-00-00-09\""
attr mutable ""
par LoopNetwork.r[2].eth[2] duplexMode true
par LoopNetwork.r[2].eth[2] csmacdSupport false
par LoopNetwork.r[2].eth[2] bitrate 0bps
attr unit bps
par LoopNetwork.r[2].eth[2] fcsMode "\"declared\""
attr enum declared,computed
scalar LoopNetwork.r[2].eth[2] packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, count"
scalar LoopNetwork.r[2].eth[2] packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, sum(packetBytes)"
scalar LoopNetwork.r[2].eth[2] packetDropNoCarrier:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, count"
scalar LoopNetwork.r[2].eth[2] packetDropNoCarrier:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, sum(packetBytes)"
par LoopNetwork.r[2].ipv4.transportIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].ipv4.up.out[0].channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].ipv4.lp.out[2].channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].ipv4.ifIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.r[2].ipv4.configurator typename "\"inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator\""
par LoopNetwork.r[2].ipv4.configurator interfaceTableModule "\"LoopNetwork.r[2].interfaceTable\""
par LoopNetwork.r[2].ipv4.configurator routingTableModule "\"LoopNetwork.r[2].ipv4.routingTable\""
par LoopNetwork.r[2].ipv4.configurator networkConfiguratorModule "\"configurator\""
par LoopNetwork.r[2].ipv4.configurator configureRoutingTable true
par LoopNetwork.r[2].ipv4.routingTable typename "\"inet.networklayer.ipv4.Ipv4RoutingTable\""
par LoopNetwork.r[2].ipv4.routingTable interfaceTableModule "\"LoopNetwork.r[2].interfaceTable\""
par LoopNetwork.r[2].ipv4.routingTable routerId "\"auto\""
par LoopNetwork.r[2].ipv4.routingTable netmaskRoutes "\"*\""
par LoopNetwork.r[2].ipv4.routingTable forwarding true
par LoopNetwork.r[2].ipv4.routingTable multicastForwarding false
par LoopNetwork.r[2].ipv4.routingTable useAdminDist false
par LoopNetwork.r[2].ipv4.routingTable routingFile "\"\""
par LoopNetwork.r[2].ipv4.natTable typename "\"inet.networklayer.ipv4.Ipv4NatTable\""
par LoopNetwork.r[2].ipv4.natTable networkProtocolModule "\"^.ip\""
par LoopNetwork.r[2].ipv4.natTable config "<config/> at content:1"
par LoopNetwork.r[2].ipv4.up typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[2].ipv4.up displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[2].ipv4.up forwardServiceRegistration true
par LoopNetwork.r[2].ipv4.up forwardProtocolRegistration true
par LoopNetwork.r[2].ipv4.igmp typename "\"inet.networklayer.ipv4.Igmpv2\""
par LoopNetwork.r[2].ipv4.igmp interfaceTableModule "\"LoopNetwork.r[2].interfaceTable\""
par LoopNetwork.r[2].ipv4.igmp routingTableModule "\"LoopNetwork.r[2].ipv4.routingTable\""
par LoopNetwork.r[2].ipv4.igmp crcMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[2].ipv4.igmp enabled true
par LoopNetwork.r[2].ipv4.igmp robustnessVariable 2
par LoopNetwork.r[2].ipv4.igmp queryInterval 125s
attr unit s
par LoopNetwork.r[2].ipv4.igmp queryResponseInterval 10s
attr unit s
par LoopNetwork.r[2].ipv4.igmp groupMembershipInterval 260s
attr unit s
par LoopNetwork.r[2].ipv4.igmp otherQuerierPresentInterval 255s
attr unit s
par LoopNetwork.r[2].ipv4.igmp startupQueryInterval 31.25s
attr unit s
par LoopNetwork.r[2].ipv4.igmp startupQueryCount 2
par LoopNetwork.r[2].ipv4.igmp lastMemberQueryInterval 1s
attr unit s
par LoopNetwork.r[2].ipv4.igmp lastMemberQueryCount 2
par LoopNetwork.r[2].ipv4.igmp unsolicitedReportInterval 10s
attr unit s
par LoopNetwork.r[2].ipv4.icmp typename "\"inet.networklayer.ipv4.Icmp\""
par LoopNetwork.r[2].ipv4.icmp interfaceTableModule "\"LoopNetwork.r[2].interfaceTable\""
par LoopNetwork.r[2].ipv4.icmp routingTableModule "\"LoopNetwork.r[2].ipv4.routingTable\""
par LoopNetwork.r[2].ipv4.icmp crcMode "\"declared\""
attr enum declared,computed
attr mutable ""
par LoopNetwork.r[2].ipv4.icmp quoteLength 8B
attr mutable ""
attr unit B
par LoopNetwork.r[2].ipv4.mp typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[2].ipv4.mp displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[2].ipv4.mp forwardServiceRegistration true
par LoopNetwork.r[2].ipv4.mp forwardProtocolRegistration true
par LoopNetwork.r[2].ipv4.ip typename "\"inet.networklayer.ipv4.Ipv4\""
par LoopNetwork.r[2].ipv4.ip interfaceTableModule "\"LoopNetwork.r[2].interfaceTable\""
par LoopNetwork.r[2].ipv4.ip routingTableModule "\"LoopNetwork.r[2].ipv4.routingTable\""
par LoopNetwork.r[2].ipv4.ip arpModule "\"LoopNetwork.r[2].ipv4.arp\""
par LoopNetwork.r[2].ipv4.ip icmpModule "\"LoopNetwork.r[2].ipv4.icmp\""
par LoopNetwork.r[2].ipv4.ip crcMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[2].ipv4.ip timeToLive 32
par LoopNetwork.r[2].ipv4.ip multicastTimeToLive 32
par LoopNetwork.r[2].ipv4.ip fragmentTimeout 60s
attr unit s
par LoopNetwork.r[2].ipv4.ip limitedBroadcast false
par LoopNetwork.r[2].ipv4.ip directBroadcastInterfaces "\"\""
scalar LoopNetwork.r[2].ipv4.ip packetDropAddressResolutionFailed:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsAddressResolutionFailed(packetDropped)
attr title "packet drop: address resolution failed, count"
scalar LoopNetwork.r[2].ipv4.ip packetDropAddressResolutionFailed:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsAddressResolutionFailed(packetDropped)
attr title "packet drop: address resolution failed, sum(packetBytes)"
scalar LoopNetwork.r[2].ipv4.ip packetDropHopLimitReached:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsHopLimitReached(packetDropped)
attr title "packet drop: hop limit reached, count"
scalar LoopNetwork.r[2].ipv4.ip packetDropHopLimitReached:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsHopLimitReached(packetDropped)
attr title "packet drop: hop limit reached, sum(packetBytes)"
scalar LoopNetwork.r[2].ipv4.ip packetDropForwardingDisabled:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsForwardingDisabled(packetDropped)
attr title "packet drop: forwarding disabled, count"
scalar LoopNetwork.r[2].ipv4.ip packetDropForwardingDisabled:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsForwardingDisabled(packetDropped)
attr title "packet drop: forwarding disabled, sum(packetBytes)"
scalar LoopNetwork.r[2].ipv4.ip packetDropNoInterfaceFound:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoInterfaceFound(packetDropped)
attr title "packet drop: no interface found, count"
scalar LoopNetwork.r[2].ipv4.ip packetDropNoInterfaceFound:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoInterfaceFound(packetDropped)
attr title "packet drop: no interface found, sum(packetBytes)"
scalar LoopNetwork.r[2].ipv4.ip packetDropNoRouteFound:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoRouteFound(packetDropped)
attr title "packet drop: no route found, count"
scalar LoopNetwork.r[2].ipv4.ip packetDropNoRouteFound:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoRouteFound(packetDropped)
attr title "packet drop: no route found, sum(packetBytes)"
scalar LoopNetwork.r[2].ipv4.ip packetDropUndefined:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsUndefined(packetDropped)
attr title "packet drop: undefined, count"
scalar LoopNetwork.r[2].ipv4.ip packetDropUndefined:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsUndefined(packetDropped)
attr title "packet drop: undefined, sum(packetBytes)"
par LoopNetwork.r[2].ipv4.arp typename "\"inet.networklayer.arp.ipv4.Arp\""
par LoopNetwork.r[2].ipv4.arp interfaceTableModule "\"LoopNetwork.r[2].interfaceTable\""
par LoopNetwork.r[2].ipv4.arp routingTableModule "\"LoopNetwork.r[2].ipv4.routingTable\""
par LoopNetwork.r[2].ipv4.arp retryTimeout 1s
attr unit s
par LoopNetwork.r[2].ipv4.arp retryCount 3
par LoopNetwork.r[2].ipv4.arp cacheTimeout 120s
attr unit s
par LoopNetwork.r[2].ipv4.arp proxyArpInterfaces "\"*\""
scalar LoopNetwork.r[2].ipv4.arp arpReplySent:count 0
attr recordingmode count
attr source arpReplySent
attr title "ARP replies sent, count"
scalar LoopNetwork.r[2].ipv4.arp arpReplySent:sum(packetBytes) 0
attr recordingmode sum(packetBytes)
attr source arpReplySent
attr title "ARP replies sent, sum(packetBytes)"
scalar LoopNetwork.r[2].ipv4.arp arpRequestSent:count 0
attr recordingmode count
attr source arpRequestSent
attr title "ARP request sent, count"
scalar LoopNetwork.r[2].ipv4.arp arpRequestSent:sum(packetBytes) 0
attr recordingmode sum(packetBytes)
attr source arpRequestSent
attr title "ARP request sent, sum(packetBytes)"
scalar LoopNetwork.r[2].ipv4.arp arpResolutionFailed:count 0
attr recordingmode count
attr title "ARP failed resolutions, count"
scalar LoopNetwork.r[2].ipv4.arp arpResolutionCompleted:count 0
attr recordingmode count
attr title "ARP completed resolutions, count"
scalar LoopNetwork.r[2].ipv4.arp arpResolutionInitiated:count 0
attr recordingmode count
attr title "ARP initiated resolutions, count"
par LoopNetwork.r[2].ipv4.lp typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[2].ipv4.lp displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[2].ipv4.lp forwardServiceRegistration true
par LoopNetwork.r[2].ipv4.lp forwardProtocolRegistration true
par LoopNetwork.r[2].ipv4 typename "\"inet.networklayer.ipv4.Ipv4NetworkLayer\""
par LoopNetwork.r[2].ipv4 forwarding true
par LoopNetwork.r[2].ipv4 multicastForwarding false
par LoopNetwork.r[2].ipv4 interfaceTableModule "\"LoopNetwork.r[2].interfaceTable\""
par LoopNetwork.r[2].ipv4 displayStringTextFormat "\"%i\""
par LoopNetwork.r[2].nl typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[2].nl displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[2].nl forwardServiceRegistration true
par LoopNetwork.r[2].nl forwardProtocolRegistration true
par LoopNetwork.r[2].udp typename "\"inet.transportlayer.udp.Udp\""
par LoopNetwork.r[2].udp interfaceTableModule "\"LoopNetwork.r[2].interfaceTable\""
par LoopNetwork.r[2].udp icmpModule "\"^.ipv4.icmp\""
par LoopNetwork.r[2].udp icmpv6Module "\"^.ipv6.icmpv6\""
par LoopNetwork.r[2].udp crcMode "\"declared\""
attr enum disabled,declared,computed
par LoopNetwork.r[2].udp defaultMulticastLoop true
scalar LoopNetwork.r[2].udp packetReceived:count 0
attr interpolationmode none
attr recordingmode count
attr source packetReceived
attr title "packets received, count"
scalar LoopNetwork.r[2].udp packetReceived:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceived
attr title "packets received, sum(packetBytes)"
scalar LoopNetwork.r[2].udp packetSent:count 3
attr interpolationmode none
attr recordingmode count
attr source packetSent
attr title "packets sent, count"
scalar LoopNetwork.r[2].udp packetSent:sum(packetBytes) 96
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSent
attr title "packets sent, sum(packetBytes)"
scalar LoopNetwork.r[2].udp passedUpPk:count 0
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed up, count"
scalar LoopNetwork.r[2].udp droppedPkWrongPort:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoPortFound(packetDropped)
attr title "packets dropped (wrong port), count"
scalar LoopNetwork.r[2].udp droppedPkBadChecksum:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packets dropped (checksum error), count"
par LoopNetwork.r[2].tn typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[2].tn displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[2].tn forwardServiceRegistration true
par LoopNetwork.r[2].tn forwardProtocolRegistration true
par LoopNetwork.r[2].at typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.r[2].at displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.r[2].at forwardServiceRegistration true
par LoopNetwork.r[2].at forwardProtocolRegistration true
par LoopNetwork.r[2].rip typename "\"inet.routing.rip.Rip\""
par LoopNetwork.r[2].rip interfaceTableModule "\"LoopNetwork.r[2].interfaceTable\""
par LoopNetwork.r[2].rip routingTableModule "\"^.ipv4.routingTable\""
par LoopNetwork.r[2].rip ripConfig "<config>...</config> at content:1"
par LoopNetwork.r[2].rip mode "\"RIPv2\""
attr enum RIPv2,RIPng
par LoopNetwork.r[2].rip udpPort 520
par LoopNetwork.r[2].rip startupTime "uniform(0s, 5s)"
attr unit s
par LoopNetwork.r[2].rip shutdownTime 1s
attr unit s
par LoopNetwork.r[2].rip updateInterval 30s
attr unit s
par LoopNetwork.r[2].rip routeExpiryTime 180s
attr unit s
par LoopNetwork.r[2].rip routePurgeTime 120s
attr unit s
par LoopNetwork.r[2].rip holdDownTime 0s
attr unit s
par LoopNetwork.r[2].rip triggeredUpdate true
par LoopNetwork.r[2].rip triggeredUpdateDelay "uniform(1s, 5s)"
attr unit s
par LoopNetwork.r[2].rip stopOperationExtraTime -1s
attr unit s
par LoopNetwork.r[2].rip stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.r[2].rip numRoutes:last nan
attr interpolationmode none
attr recordingmode last
attr source numRoutes
attr title "number of routes, last"
scalar LoopNetwork.r[2].rip badResponse:count 0
attr interpolationmode none
attr recordingmode count
attr source badResponse
attr title "bad response received, count"
scalar LoopNetwork.r[2].rip rcvdResponse:count 0
attr interpolationmode none
attr recordingmode count
attr source rcvdResponse
attr title "response received, count"
scalar LoopNetwork.r[2].rip sentUpdate:count 0
attr interpolationmode none
attr recordingmode count
attr source sentUpdate
attr title "update sent, count"
scalar LoopNetwork.r[2].rip sentRequest:count 3
attr interpolationmode none
attr recordingmode count
attr source sentRequest
attr title "request sent, count"
par LoopNetwork.r[2] typename "\"CustomRipRouter\""
par LoopNetwork.r[2] hasStatus false
par LoopNetwork.r[2] osgModel "\"\""
par LoopNetwork.r[2] osgModelColor "\"\""
par LoopNetwork.r[2] canvasImage "\"\""
par LoopNetwork.r[2] canvasImageColor "\"\""
par LoopNetwork.r[2] recordPcap false
par LoopNetwork.r[2] numPcapRecorders 0
par LoopNetwork.r[2] numLoInterfaces 1
par LoopNetwork.r[2] numWlanInterfaces 0
par LoopNetwork.r[2] numEthInterfaces 0
par LoopNetwork.r[2] numPppInterfaces 0
par LoopNetwork.r[2] numTunInterfaces 0
par LoopNetwork.r[2] numVirtInterfaces 0
par LoopNetwork.r[2] fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.r[2] hasIpv4 true
par LoopNetwork.r[2] hasIpv6 false
par LoopNetwork.r[2] hasGn false
par LoopNetwork.r[2] forwarding true
par LoopNetwork.r[2] multicastForwarding false
par LoopNetwork.r[2] hasUdp true
par LoopNetwork.r[2] hasTcp false
par LoopNetwork.r[2] hasSctp false
par LoopNetwork.r[2] numApps 0
par LoopNetwork.r[2] hasEigrp false
par LoopNetwork.r[2] hasOspf false
par LoopNetwork.r[2] hasRip true
par LoopNetwork.r[2] hasBgp false
par LoopNetwork.r[2] hasPim false
par LoopNetwork.r[2] hasDhcp false
par LoopNetwork.h[0].ethg$i[0].channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[0].eth[0].phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[0].interfaceTable typename "\"inet.networklayer.common.InterfaceTable\""
par LoopNetwork.h[0].interfaceTable displayAddresses false
par LoopNetwork.h[0].cb typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[0].cb displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[0].cb forwardServiceRegistration true
par LoopNetwork.h[0].cb forwardProtocolRegistration true
par LoopNetwork.h[0].bl typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[0].bl displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[0].bl forwardServiceRegistration true
par LoopNetwork.h[0].bl forwardProtocolRegistration true
par LoopNetwork.h[0].ethernet typename "\"inet.linklayer.ethernet.basic.EthernetEncapsulation\""
par LoopNetwork.h[0].ethernet registerProtocol true
par LoopNetwork.h[0].ethernet interfaceTableModule "\"LoopNetwork.h[0].interfaceTable\""
par LoopNetwork.h[0].ethernet fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.h[0].ethernet stopOperationExtraTime -1s
attr unit s
par LoopNetwork.h[0].ethernet stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.h[0].ethernet decapPk:count 1
attr interpolationmode none
attr recordingmode count
attr source decapPk
attr title "packets decapsulated, count"
scalar LoopNetwork.h[0].ethernet decapPk:sum(packetBytes) 52
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source decapPk
attr title "packets decapsulated, sum(packetBytes)"
scalar LoopNetwork.h[0].ethernet encapPk:count 0
attr interpolationmode none
attr recordingmode count
attr source encapPk
attr title "packets encapsulated, count"
scalar LoopNetwork.h[0].ethernet encapPk:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source encapPk
attr title "packets encapsulated, sum(packetBytes)"
scalar LoopNetwork.h[0].ethernet pauseSent:count 0
attr recordingmode count
attr title "pause sent, count"
scalar LoopNetwork.h[0].ethernet pauseSent:sum 0
attr recordingmode sum
attr title "pause sent, sum"
par LoopNetwork.h[0].li typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[0].li displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[0].li forwardServiceRegistration true
par LoopNetwork.h[0].li forwardProtocolRegistration true
par LoopNetwork.h[0].lo[0].upperLayerIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[0].lo[0].lo.upperLayerOut.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[0].lo[0].lo typename "\"inet.linklayer.loopback.Loopback\""
par LoopNetwork.h[0].lo[0].lo interfaceTableModule "\"LoopNetwork.h[0].interfaceTable\""
par LoopNetwork.h[0].lo[0].lo mtu 4470B
attr unit B
scalar LoopNetwork.h[0].lo[0].lo rcvdPkFromHl:count 0
attr interpolationmode none
attr recordingmode count
attr source packetReceivedFromUpper
attr title "packets received from higher layer, count"
scalar LoopNetwork.h[0].lo[0].lo rcvdPkFromHl:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceivedFromUpper
attr title "packets received from higher layer, sum(packetBytes)"
scalar LoopNetwork.h[0].lo[0].lo passedUpPk:count 0
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed to higher layer, count"
scalar LoopNetwork.h[0].lo[0].lo passedUpPk:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, sum(packetBytes)"
par LoopNetwork.h[0].lo[0] typename "\"inet.linklayer.loopback.LoopbackInterface\""
par LoopNetwork.h[0].lo[0] displayStringTextFormat "\"%a (%i)\\n%m\""
par LoopNetwork.h[0].lo[0] recordPcap false
par LoopNetwork.h[0].lo[0] numPcapRecorders 0
par LoopNetwork.h[0].lo[0] interfaceTableModule "\"LoopNetwork.h[0].interfaceTable\""
scalar LoopNetwork.h[0].lo[0] packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, count"
scalar LoopNetwork.h[0].lo[0] packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, sum(packetBytes)"
scalar LoopNetwork.h[0].lo[0] packetDropNoCarrier:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, count"
scalar LoopNetwork.h[0].lo[0] packetDropNoCarrier:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, sum(packetBytes)"
par LoopNetwork.h[0].eth[0].mac.phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[0].eth[0].phys$i.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[0].eth[0].upperLayerIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[0].eth[0].mac.upperLayerOut.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[0].eth[0].queue typename "\"inet.linklayer.ethernet.common.EthernetQueue\""
par LoopNetwork.h[0].eth[0].queue displayStringTextFormat "\"contains %p pk (%l) pushed %u\\npulled %o removed %r dropped %d\""
par LoopNetwork.h[0].eth[0].queue packetCapacity 1000
par LoopNetwork.h[0].eth[0].queue dataCapacity -1b
attr unit b
par LoopNetwork.h[0].eth[0].queue dropperClass "\"inet::queueing::PacketAtCollectionEndDropper\""
par LoopNetwork.h[0].eth[0].queue comparatorClass "\"inet::EthernetFrameTypeComparator\""
par LoopNetwork.h[0].eth[0].queue bufferModule "\"\""
scalar LoopNetwork.h[0].eth[0].queue queueLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, last"
attr unit pk
scalar LoopNetwork.h[0].eth[0].queue queueLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, max"
attr unit pk
scalar LoopNetwork.h[0].eth[0].queue queueLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, timeavg"
attr unit pk
scalar LoopNetwork.h[0].eth[0].queue queueBitLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, last"
attr unit b
scalar LoopNetwork.h[0].eth[0].queue queueBitLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, max"
attr unit b
scalar LoopNetwork.h[0].eth[0].queue queueBitLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, timeavg"
attr unit b
statistic LoopNetwork.h[0].eth[0].queue queueingTime:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(packetPulled)
attr title "queueing times"
attr unit s
bin	-inf	0
bin	0	0
bin	1	0
scalar LoopNetwork.h[0].eth[0].queue outgoingPackets:count 0
attr recordingmode count
attr source packetPulled
attr title "outgoing packets, count"
attr unit pk
scalar LoopNetwork.h[0].eth[0].queue outgoingPacketLengths:sum 0
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPulled)
attr title "outgoing packet lengths, sum"
attr unit b
statistic LoopNetwork.h[0].eth[0].queue outgoingPacketLengths:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPulled)
attr title "outgoing packet lengths"
attr unit b
bin	-inf	0
bin	0	0
bin	1	0
statistic LoopNetwork.h[0].eth[0].queue flowQueueingTime:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(demuxFlow(packetPulled))
attr title "flow queueing times"
attr unit s
bin	-inf	0
bin	0	0
bin	1	0
scalar LoopNetwork.h[0].eth[0].queue incomingPackets:count 0
attr recordingmode count
attr source packetPushStarted
attr title "incoming packets, count"
attr unit pk
scalar LoopNetwork.h[0].eth[0].queue incomingPacketLengths:sum 0
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths, sum"
attr unit b
statistic LoopNetwork.h[0].eth[0].queue incomingPacketLengths:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths"
attr unit b
bin	-inf	0
bin	0	0
bin	1	0
scalar LoopNetwork.h[0].eth[0].queue droppedPacketsQueueOverflow:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsQueueOverflow(packetDropped)
attr title "dropped packets: queue overflow, count"
attr unit pk
scalar LoopNetwork.h[0].eth[0].queue droppedPacketLengthsQueueOverflow:sum 0
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetDropReasonIsQueueOverflow(packetDropped))
attr title "dropped packet lengths: queue overflow, sum"
attr unit b
par LoopNetwork.h[0].eth[0].mac typename "\"inet.linklayer.ethernet.basic.EthernetMac\""
par LoopNetwork.h[0].eth[0].mac interfaceTableModule "\"LoopNetwork.h[0].interfaceTable\""
par LoopNetwork.h[0].eth[0].mac displayStringTextFormat "\"rate: %b\\nsent: %s, rcvd: %r\\nqueue: %q, drop: %d\""
par LoopNetwork.h[0].eth[0].mac sendRawBytes false
par LoopNetwork.h[0].eth[0].mac promiscuous false
par LoopNetwork.h[0].eth[0].mac duplexMode true
par LoopNetwork.h[0].eth[0].mac mtu 1500B
attr unit B
par LoopNetwork.h[0].eth[0].mac fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.h[0].eth[0].mac stopOperationExtraTime -1s
attr unit s
par LoopNetwork.h[0].eth[0].mac stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.h[0].eth[0].mac "simulated time" 5313.5759468249
scalar LoopNetwork.h[0].eth[0].mac full-duplex 1
scalar LoopNetwork.h[0].eth[0].mac "frames/sec sent" 0
scalar LoopNetwork.h[0].eth[0].mac "frames/sec rcvd" 0.00018819717832349
scalar LoopNetwork.h[0].eth[0].mac "bits/sec sent" 0
scalar LoopNetwork.h[0].eth[0].mac "bits/sec rcvd" 0.10539041986115
scalar LoopNetwork.h[0].eth[0].mac "rx channel idle (%)" 99.999999882565
scalar LoopNetwork.h[0].eth[0].mac "rx channel utilization (%)" 1.1743503927386e-07
scalar LoopNetwork.h[0].eth[0].mac txPk:count 0
attr interpolationmode none
attr recordingmode count
attr source packetSentToLower
attr title "packets transmitted, count"
scalar LoopNetwork.h[0].eth[0].mac txPk:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToLower
attr title "packets transmitted, sum(packetBytes)"
scalar LoopNetwork.h[0].eth[0].mac packetReceivedFromUpper:count 0
attr interpolationmode none
attr recordingmode count
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, count"
scalar LoopNetwork.h[0].eth[0].mac packetReceivedFromUpper:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, sum(packetBytes)"
scalar LoopNetwork.h[0].eth[0].mac passedUpPk:count 1
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed to higher layer, count"
scalar LoopNetwork.h[0].eth[0].mac passedUpPk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, sum(packetBytes)"
scalar LoopNetwork.h[0].eth[0].mac packetDropIncorrectlyReceived:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, count"
scalar LoopNetwork.h[0].eth[0].mac packetDropIncorrectlyReceived:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, sum(packetBytes)"
scalar LoopNetwork.h[0].eth[0].mac packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, count"
scalar LoopNetwork.h[0].eth[0].mac packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, sum(packetBytes)"
scalar LoopNetwork.h[0].eth[0].mac packetDropNotAddressedToUs:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, count"
scalar LoopNetwork.h[0].eth[0].mac packetDropNotAddressedToUs:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, sum(packetBytes)"
scalar LoopNetwork.h[0].eth[0].mac rxPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units received, count"
scalar LoopNetwork.h[0].eth[0].mac rxPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units received, sum"
scalar LoopNetwork.h[0].eth[0].mac txPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units sent, count"
scalar LoopNetwork.h[0].eth[0].mac txPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units sent, sum"
scalar LoopNetwork.h[0].eth[0].mac rxPkOk:count 1
attr interpolationmode none
attr recordingmode count
attr source rxPkOk
attr title "packets received OK, count"
scalar LoopNetwork.h[0].eth[0].mac rxPkOk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source rxPkOk
attr title "packets received OK, sum(packetBytes)"
par LoopNetwork.h[0].eth[0] typename "\"inet.linklayer.ethernet.EthernetInterface\""
par LoopNetwork.h[0].eth[0] displayStringTextFormat "\"%a (%i)\\n%m\""
par LoopNetwork.h[0].eth[0] recordPcap false
par LoopNetwork.h[0].eth[0] numPcapRecorders 0
par LoopNetwork.h[0].eth[0] interfaceTableModule "\"LoopNetwork.h[0].interfaceTable\""
par LoopNetwork.h[0].eth[0] protocol "\"ethernetmac\""
par LoopNetwork.h[0].eth[0] address "\"0A-AA-00-00-00-0A\""
attr mutable ""
par LoopNetwork.h[0].eth[0] duplexMode true
par LoopNetwork.h[0].eth[0] csmacdSupport false
par LoopNetwork.h[0].eth[0] bitrate 0bps
attr unit bps
par LoopNetwork.h[0].eth[0] fcsMode "\"declared\""
attr enum declared,computed
scalar LoopNetwork.h[0].eth[0] packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, count"
scalar LoopNetwork.h[0].eth[0] packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, sum(packetBytes)"
scalar LoopNetwork.h[0].eth[0] packetDropNoCarrier:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, count"
scalar LoopNetwork.h[0].eth[0] packetDropNoCarrier:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, sum(packetBytes)"
par LoopNetwork.h[0].ipv4.transportIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[0].ipv4.up.out[0].channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[0].ipv4.lp.out[2].channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[0].ipv4.ifIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[0].ipv4.configurator typename "\"inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator\""
par LoopNetwork.h[0].ipv4.configurator interfaceTableModule "\"LoopNetwork.h[0].interfaceTable\""
par LoopNetwork.h[0].ipv4.configurator routingTableModule "\"LoopNetwork.h[0].ipv4.routingTable\""
par LoopNetwork.h[0].ipv4.configurator networkConfiguratorModule "\"configurator\""
par LoopNetwork.h[0].ipv4.configurator configureRoutingTable true
par LoopNetwork.h[0].ipv4.routingTable typename "\"inet.networklayer.ipv4.Ipv4RoutingTable\""
par LoopNetwork.h[0].ipv4.routingTable interfaceTableModule "\"LoopNetwork.h[0].interfaceTable\""
par LoopNetwork.h[0].ipv4.routingTable routerId "\"auto\""
par LoopNetwork.h[0].ipv4.routingTable netmaskRoutes "\"*\""
par LoopNetwork.h[0].ipv4.routingTable forwarding false
par LoopNetwork.h[0].ipv4.routingTable multicastForwarding false
par LoopNetwork.h[0].ipv4.routingTable useAdminDist false
par LoopNetwork.h[0].ipv4.routingTable routingFile "\"\""
par LoopNetwork.h[0].ipv4.natTable typename "\"inet.networklayer.ipv4.Ipv4NatTable\""
par LoopNetwork.h[0].ipv4.natTable networkProtocolModule "\"^.ip\""
par LoopNetwork.h[0].ipv4.natTable config "<config/> at content:1"
par LoopNetwork.h[0].ipv4.up typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[0].ipv4.up displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[0].ipv4.up forwardServiceRegistration true
par LoopNetwork.h[0].ipv4.up forwardProtocolRegistration true
par LoopNetwork.h[0].ipv4.igmp typename "\"inet.networklayer.ipv4.Igmpv2\""
par LoopNetwork.h[0].ipv4.igmp interfaceTableModule "\"LoopNetwork.h[0].interfaceTable\""
par LoopNetwork.h[0].ipv4.igmp routingTableModule "\"LoopNetwork.h[0].ipv4.routingTable\""
par LoopNetwork.h[0].ipv4.igmp crcMode "\"declared\""
attr enum declared,computed
par LoopNetwork.h[0].ipv4.igmp enabled true
par LoopNetwork.h[0].ipv4.igmp robustnessVariable 2
par LoopNetwork.h[0].ipv4.igmp queryInterval 125s
attr unit s
par LoopNetwork.h[0].ipv4.igmp queryResponseInterval 10s
attr unit s
par LoopNetwork.h[0].ipv4.igmp groupMembershipInterval 260s
attr unit s
par LoopNetwork.h[0].ipv4.igmp otherQuerierPresentInterval 255s
attr unit s
par LoopNetwork.h[0].ipv4.igmp startupQueryInterval 31.25s
attr unit s
par LoopNetwork.h[0].ipv4.igmp startupQueryCount 2
par LoopNetwork.h[0].ipv4.igmp lastMemberQueryInterval 1s
attr unit s
par LoopNetwork.h[0].ipv4.igmp lastMemberQueryCount 2
par LoopNetwork.h[0].ipv4.igmp unsolicitedReportInterval 10s
attr unit s
par LoopNetwork.h[0].ipv4.icmp typename "\"inet.networklayer.ipv4.Icmp\""
par LoopNetwork.h[0].ipv4.icmp interfaceTableModule "\"LoopNetwork.h[0].interfaceTable\""
par LoopNetwork.h[0].ipv4.icmp routingTableModule "\"LoopNetwork.h[0].ipv4.routingTable\""
par LoopNetwork.h[0].ipv4.icmp crcMode "\"declared\""
attr enum declared,computed
attr mutable ""
par LoopNetwork.h[0].ipv4.icmp quoteLength 8B
attr mutable ""
attr unit B
par LoopNetwork.h[0].ipv4.mp typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[0].ipv4.mp displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[0].ipv4.mp forwardServiceRegistration true
par LoopNetwork.h[0].ipv4.mp forwardProtocolRegistration true
par LoopNetwork.h[0].ipv4.ip typename "\"inet.networklayer.ipv4.Ipv4\""
par LoopNetwork.h[0].ipv4.ip interfaceTableModule "\"LoopNetwork.h[0].interfaceTable\""
par LoopNetwork.h[0].ipv4.ip routingTableModule "\"LoopNetwork.h[0].ipv4.routingTable\""
par LoopNetwork.h[0].ipv4.ip arpModule "\"LoopNetwork.h[0].ipv4.arp\""
par LoopNetwork.h[0].ipv4.ip icmpModule "\"LoopNetwork.h[0].ipv4.icmp\""
par LoopNetwork.h[0].ipv4.ip crcMode "\"declared\""
attr enum declared,computed
par LoopNetwork.h[0].ipv4.ip timeToLive 32
par LoopNetwork.h[0].ipv4.ip multicastTimeToLive 32
par LoopNetwork.h[0].ipv4.ip fragmentTimeout 60s
attr unit s
par LoopNetwork.h[0].ipv4.ip limitedBroadcast false
par LoopNetwork.h[0].ipv4.ip directBroadcastInterfaces "\"\""
scalar LoopNetwork.h[0].ipv4.ip packetDropAddressResolutionFailed:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsAddressResolutionFailed(packetDropped)
attr title "packet drop: address resolution failed, count"
scalar LoopNetwork.h[0].ipv4.ip packetDropAddressResolutionFailed:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsAddressResolutionFailed(packetDropped)
attr title "packet drop: address resolution failed, sum(packetBytes)"
scalar LoopNetwork.h[0].ipv4.ip packetDropHopLimitReached:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsHopLimitReached(packetDropped)
attr title "packet drop: hop limit reached, count"
scalar LoopNetwork.h[0].ipv4.ip packetDropHopLimitReached:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsHopLimitReached(packetDropped)
attr title "packet drop: hop limit reached, sum(packetBytes)"
scalar LoopNetwork.h[0].ipv4.ip packetDropForwardingDisabled:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsForwardingDisabled(packetDropped)
attr title "packet drop: forwarding disabled, count"
scalar LoopNetwork.h[0].ipv4.ip packetDropForwardingDisabled:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsForwardingDisabled(packetDropped)
attr title "packet drop: forwarding disabled, sum(packetBytes)"
scalar LoopNetwork.h[0].ipv4.ip packetDropNoInterfaceFound:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoInterfaceFound(packetDropped)
attr title "packet drop: no interface found, count"
scalar LoopNetwork.h[0].ipv4.ip packetDropNoInterfaceFound:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoInterfaceFound(packetDropped)
attr title "packet drop: no interface found, sum(packetBytes)"
scalar LoopNetwork.h[0].ipv4.ip packetDropNoRouteFound:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoRouteFound(packetDropped)
attr title "packet drop: no route found, count"
scalar LoopNetwork.h[0].ipv4.ip packetDropNoRouteFound:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoRouteFound(packetDropped)
attr title "packet drop: no route found, sum(packetBytes)"
scalar LoopNetwork.h[0].ipv4.ip packetDropUndefined:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsUndefined(packetDropped)
attr title "packet drop: undefined, count"
scalar LoopNetwork.h[0].ipv4.ip packetDropUndefined:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsUndefined(packetDropped)
attr title "packet drop: undefined, sum(packetBytes)"
par LoopNetwork.h[0].ipv4.arp typename "\"inet.networklayer.arp.ipv4.Arp\""
par LoopNetwork.h[0].ipv4.arp interfaceTableModule "\"LoopNetwork.h[0].interfaceTable\""
par LoopNetwork.h[0].ipv4.arp routingTableModule "\"LoopNetwork.h[0].ipv4.routingTable\""
par LoopNetwork.h[0].ipv4.arp retryTimeout 1s
attr unit s
par LoopNetwork.h[0].ipv4.arp retryCount 3
par LoopNetwork.h[0].ipv4.arp cacheTimeout 120s
attr unit s
par LoopNetwork.h[0].ipv4.arp proxyArpInterfaces "\"\""
scalar LoopNetwork.h[0].ipv4.arp arpReplySent:count 0
attr recordingmode count
attr source arpReplySent
attr title "ARP replies sent, count"
scalar LoopNetwork.h[0].ipv4.arp arpReplySent:sum(packetBytes) 0
attr recordingmode sum(packetBytes)
attr source arpReplySent
attr title "ARP replies sent, sum(packetBytes)"
scalar LoopNetwork.h[0].ipv4.arp arpRequestSent:count 0
attr recordingmode count
attr source arpRequestSent
attr title "ARP request sent, count"
scalar LoopNetwork.h[0].ipv4.arp arpRequestSent:sum(packetBytes) 0
attr recordingmode sum(packetBytes)
attr source arpRequestSent
attr title "ARP request sent, sum(packetBytes)"
scalar LoopNetwork.h[0].ipv4.arp arpResolutionFailed:count 0
attr recordingmode count
attr title "ARP failed resolutions, count"
scalar LoopNetwork.h[0].ipv4.arp arpResolutionCompleted:count 0
attr recordingmode count
attr title "ARP completed resolutions, count"
scalar LoopNetwork.h[0].ipv4.arp arpResolutionInitiated:count 0
attr recordingmode count
attr title "ARP initiated resolutions, count"
par LoopNetwork.h[0].ipv4.lp typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[0].ipv4.lp displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[0].ipv4.lp forwardServiceRegistration true
par LoopNetwork.h[0].ipv4.lp forwardProtocolRegistration true
par LoopNetwork.h[0].ipv4 typename "\"inet.networklayer.ipv4.Ipv4NetworkLayer\""
par LoopNetwork.h[0].ipv4 forwarding false
par LoopNetwork.h[0].ipv4 multicastForwarding false
par LoopNetwork.h[0].ipv4 interfaceTableModule "\"LoopNetwork.h[0].interfaceTable\""
par LoopNetwork.h[0].ipv4 displayStringTextFormat "\"%i\""
par LoopNetwork.h[0].nl typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[0].nl displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[0].nl forwardServiceRegistration true
par LoopNetwork.h[0].nl forwardProtocolRegistration true
par LoopNetwork.h[0].udp typename "\"inet.transportlayer.udp.Udp\""
par LoopNetwork.h[0].udp interfaceTableModule "\"LoopNetwork.h[0].interfaceTable\""
par LoopNetwork.h[0].udp icmpModule "\"^.ipv4.icmp\""
par LoopNetwork.h[0].udp icmpv6Module "\"^.ipv6.icmpv6\""
par LoopNetwork.h[0].udp crcMode "\"declared\""
attr enum disabled,declared,computed
par LoopNetwork.h[0].udp defaultMulticastLoop true
scalar LoopNetwork.h[0].udp packetReceived:count 0
attr interpolationmode none
attr recordingmode count
attr source packetReceived
attr title "packets received, count"
scalar LoopNetwork.h[0].udp packetReceived:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceived
attr title "packets received, sum(packetBytes)"
scalar LoopNetwork.h[0].udp packetSent:count 0
attr interpolationmode none
attr recordingmode count
attr source packetSent
attr title "packets sent, count"
scalar LoopNetwork.h[0].udp packetSent:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSent
attr title "packets sent, sum(packetBytes)"
scalar LoopNetwork.h[0].udp passedUpPk:count 0
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed up, count"
scalar LoopNetwork.h[0].udp droppedPkWrongPort:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoPortFound(packetDropped)
attr title "packets dropped (wrong port), count"
scalar LoopNetwork.h[0].udp droppedPkBadChecksum:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packets dropped (checksum error), count"
par LoopNetwork.h[0].tcp typename "\"inet.transportlayer.tcp.Tcp\""
par LoopNetwork.h[0].tcp crcMode "\"declared\""
attr enum declared,computed
par LoopNetwork.h[0].tcp advertisedWindow 7504
par LoopNetwork.h[0].tcp delayedAcksEnabled false
par LoopNetwork.h[0].tcp nagleEnabled true
par LoopNetwork.h[0].tcp limitedTransmitEnabled false
par LoopNetwork.h[0].tcp increasedIWEnabled false
par LoopNetwork.h[0].tcp sackSupport false
par LoopNetwork.h[0].tcp windowScalingSupport false
par LoopNetwork.h[0].tcp windowScalingFactor -1
par LoopNetwork.h[0].tcp timestampSupport false
par LoopNetwork.h[0].tcp mss 536
par LoopNetwork.h[0].tcp msl 120s
attr unit s
par LoopNetwork.h[0].tcp tcpAlgorithmClass "\"TcpReno\""
par LoopNetwork.h[0].tcp useDataNotification false
par LoopNetwork.h[0].tcp dupthresh 3
par LoopNetwork.h[0].tcp initialSsthresh 4294967295
par LoopNetwork.h[0].tcp stopOperationExtraTime 0s
attr unit s
par LoopNetwork.h[0].tcp stopOperationTimeout 2s
attr unit s
par LoopNetwork.h[0].tcp ecnWillingness false
par LoopNetwork.h[0].tcp dctcpGamma 0.0625
par LoopNetwork.h[0].tn typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[0].tn displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[0].tn forwardServiceRegistration true
par LoopNetwork.h[0].tn forwardProtocolRegistration true
par LoopNetwork.h[0].at typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[0].at displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[0].at forwardServiceRegistration true
par LoopNetwork.h[0].at forwardProtocolRegistration true
par LoopNetwork.h[0] typename "\"inet.node.inet.StandardHost\""
par LoopNetwork.h[0] hasStatus false
par LoopNetwork.h[0] osgModel "\"\""
par LoopNetwork.h[0] osgModelColor "\"\""
par LoopNetwork.h[0] canvasImage "\"\""
par LoopNetwork.h[0] canvasImageColor "\"\""
par LoopNetwork.h[0] recordPcap false
par LoopNetwork.h[0] numPcapRecorders 0
par LoopNetwork.h[0] numLoInterfaces 1
par LoopNetwork.h[0] numWlanInterfaces 0
par LoopNetwork.h[0] numEthInterfaces 0
par LoopNetwork.h[0] numPppInterfaces 0
par LoopNetwork.h[0] numTunInterfaces 0
par LoopNetwork.h[0] numVirtInterfaces 0
par LoopNetwork.h[0] fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.h[0] hasIpv4 true
par LoopNetwork.h[0] hasIpv6 false
par LoopNetwork.h[0] hasGn false
par LoopNetwork.h[0] forwarding false
par LoopNetwork.h[0] multicastForwarding false
par LoopNetwork.h[0] hasUdp true
par LoopNetwork.h[0] hasTcp true
par LoopNetwork.h[0] hasSctp false
par LoopNetwork.h[0] numApps 0
par LoopNetwork.h[1].ethg$i[0].channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[1].eth[0].phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[1].interfaceTable typename "\"inet.networklayer.common.InterfaceTable\""
par LoopNetwork.h[1].interfaceTable displayAddresses false
par LoopNetwork.h[1].cb typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[1].cb displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[1].cb forwardServiceRegistration true
par LoopNetwork.h[1].cb forwardProtocolRegistration true
par LoopNetwork.h[1].bl typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[1].bl displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[1].bl forwardServiceRegistration true
par LoopNetwork.h[1].bl forwardProtocolRegistration true
par LoopNetwork.h[1].ethernet typename "\"inet.linklayer.ethernet.basic.EthernetEncapsulation\""
par LoopNetwork.h[1].ethernet registerProtocol true
par LoopNetwork.h[1].ethernet interfaceTableModule "\"LoopNetwork.h[1].interfaceTable\""
par LoopNetwork.h[1].ethernet fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.h[1].ethernet stopOperationExtraTime -1s
attr unit s
par LoopNetwork.h[1].ethernet stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.h[1].ethernet decapPk:count 1
attr interpolationmode none
attr recordingmode count
attr source decapPk
attr title "packets decapsulated, count"
scalar LoopNetwork.h[1].ethernet decapPk:sum(packetBytes) 52
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source decapPk
attr title "packets decapsulated, sum(packetBytes)"
scalar LoopNetwork.h[1].ethernet encapPk:count 0
attr interpolationmode none
attr recordingmode count
attr source encapPk
attr title "packets encapsulated, count"
scalar LoopNetwork.h[1].ethernet encapPk:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source encapPk
attr title "packets encapsulated, sum(packetBytes)"
scalar LoopNetwork.h[1].ethernet pauseSent:count 0
attr recordingmode count
attr title "pause sent, count"
scalar LoopNetwork.h[1].ethernet pauseSent:sum 0
attr recordingmode sum
attr title "pause sent, sum"
par LoopNetwork.h[1].li typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[1].li displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[1].li forwardServiceRegistration true
par LoopNetwork.h[1].li forwardProtocolRegistration true
par LoopNetwork.h[1].lo[0].upperLayerIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[1].lo[0].lo.upperLayerOut.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[1].lo[0].lo typename "\"inet.linklayer.loopback.Loopback\""
par LoopNetwork.h[1].lo[0].lo interfaceTableModule "\"LoopNetwork.h[1].interfaceTable\""
par LoopNetwork.h[1].lo[0].lo mtu 4470B
attr unit B
scalar LoopNetwork.h[1].lo[0].lo rcvdPkFromHl:count 0
attr interpolationmode none
attr recordingmode count
attr source packetReceivedFromUpper
attr title "packets received from higher layer, count"
scalar LoopNetwork.h[1].lo[0].lo rcvdPkFromHl:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceivedFromUpper
attr title "packets received from higher layer, sum(packetBytes)"
scalar LoopNetwork.h[1].lo[0].lo passedUpPk:count 0
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed to higher layer, count"
scalar LoopNetwork.h[1].lo[0].lo passedUpPk:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, sum(packetBytes)"
par LoopNetwork.h[1].lo[0] typename "\"inet.linklayer.loopback.LoopbackInterface\""
par LoopNetwork.h[1].lo[0] displayStringTextFormat "\"%a (%i)\\n%m\""
par LoopNetwork.h[1].lo[0] recordPcap false
par LoopNetwork.h[1].lo[0] numPcapRecorders 0
par LoopNetwork.h[1].lo[0] interfaceTableModule "\"LoopNetwork.h[1].interfaceTable\""
scalar LoopNetwork.h[1].lo[0] packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, count"
scalar LoopNetwork.h[1].lo[0] packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, sum(packetBytes)"
scalar LoopNetwork.h[1].lo[0] packetDropNoCarrier:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, count"
scalar LoopNetwork.h[1].lo[0] packetDropNoCarrier:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, sum(packetBytes)"
par LoopNetwork.h[1].eth[0].mac.phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[1].eth[0].phys$i.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[1].eth[0].upperLayerIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[1].eth[0].mac.upperLayerOut.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[1].eth[0].queue typename "\"inet.linklayer.ethernet.common.EthernetQueue\""
par LoopNetwork.h[1].eth[0].queue displayStringTextFormat "\"contains %p pk (%l) pushed %u\\npulled %o removed %r dropped %d\""
par LoopNetwork.h[1].eth[0].queue packetCapacity 1000
par LoopNetwork.h[1].eth[0].queue dataCapacity -1b
attr unit b
par LoopNetwork.h[1].eth[0].queue dropperClass "\"inet::queueing::PacketAtCollectionEndDropper\""
par LoopNetwork.h[1].eth[0].queue comparatorClass "\"inet::EthernetFrameTypeComparator\""
par LoopNetwork.h[1].eth[0].queue bufferModule "\"\""
scalar LoopNetwork.h[1].eth[0].queue queueLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, last"
attr unit pk
scalar LoopNetwork.h[1].eth[0].queue queueLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, max"
attr unit pk
scalar LoopNetwork.h[1].eth[0].queue queueLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, timeavg"
attr unit pk
scalar LoopNetwork.h[1].eth[0].queue queueBitLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, last"
attr unit b
scalar LoopNetwork.h[1].eth[0].queue queueBitLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, max"
attr unit b
scalar LoopNetwork.h[1].eth[0].queue queueBitLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, timeavg"
attr unit b
statistic LoopNetwork.h[1].eth[0].queue queueingTime:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(packetPulled)
attr title "queueing times"
attr unit s
bin	-inf	0
bin	0	0
bin	1	0
scalar LoopNetwork.h[1].eth[0].queue outgoingPackets:count 0
attr recordingmode count
attr source packetPulled
attr title "outgoing packets, count"
attr unit pk
scalar LoopNetwork.h[1].eth[0].queue outgoingPacketLengths:sum 0
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPulled)
attr title "outgoing packet lengths, sum"
attr unit b
statistic LoopNetwork.h[1].eth[0].queue outgoingPacketLengths:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPulled)
attr title "outgoing packet lengths"
attr unit b
bin	-inf	0
bin	0	0
bin	1	0
statistic LoopNetwork.h[1].eth[0].queue flowQueueingTime:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(demuxFlow(packetPulled))
attr title "flow queueing times"
attr unit s
bin	-inf	0
bin	0	0
bin	1	0
scalar LoopNetwork.h[1].eth[0].queue incomingPackets:count 0
attr recordingmode count
attr source packetPushStarted
attr title "incoming packets, count"
attr unit pk
scalar LoopNetwork.h[1].eth[0].queue incomingPacketLengths:sum 0
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths, sum"
attr unit b
statistic LoopNetwork.h[1].eth[0].queue incomingPacketLengths:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths"
attr unit b
bin	-inf	0
bin	0	0
bin	1	0
scalar LoopNetwork.h[1].eth[0].queue droppedPacketsQueueOverflow:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsQueueOverflow(packetDropped)
attr title "dropped packets: queue overflow, count"
attr unit pk
scalar LoopNetwork.h[1].eth[0].queue droppedPacketLengthsQueueOverflow:sum 0
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetDropReasonIsQueueOverflow(packetDropped))
attr title "dropped packet lengths: queue overflow, sum"
attr unit b
par LoopNetwork.h[1].eth[0].mac typename "\"inet.linklayer.ethernet.basic.EthernetMac\""
par LoopNetwork.h[1].eth[0].mac interfaceTableModule "\"LoopNetwork.h[1].interfaceTable\""
par LoopNetwork.h[1].eth[0].mac displayStringTextFormat "\"rate: %b\\nsent: %s, rcvd: %r\\nqueue: %q, drop: %d\""
par LoopNetwork.h[1].eth[0].mac sendRawBytes false
par LoopNetwork.h[1].eth[0].mac promiscuous false
par LoopNetwork.h[1].eth[0].mac duplexMode true
par LoopNetwork.h[1].eth[0].mac mtu 1500B
attr unit B
par LoopNetwork.h[1].eth[0].mac fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.h[1].eth[0].mac stopOperationExtraTime -1s
attr unit s
par LoopNetwork.h[1].eth[0].mac stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.h[1].eth[0].mac "simulated time" 5313.5759468249
scalar LoopNetwork.h[1].eth[0].mac full-duplex 1
scalar LoopNetwork.h[1].eth[0].mac "frames/sec sent" 0
scalar LoopNetwork.h[1].eth[0].mac "frames/sec rcvd" 0.00018819717832349
scalar LoopNetwork.h[1].eth[0].mac "bits/sec sent" 0
scalar LoopNetwork.h[1].eth[0].mac "bits/sec rcvd" 0.10539041986115
scalar LoopNetwork.h[1].eth[0].mac "rx channel idle (%)" 99.999999882565
scalar LoopNetwork.h[1].eth[0].mac "rx channel utilization (%)" 1.1743503927386e-07
scalar LoopNetwork.h[1].eth[0].mac txPk:count 0
attr interpolationmode none
attr recordingmode count
attr source packetSentToLower
attr title "packets transmitted, count"
scalar LoopNetwork.h[1].eth[0].mac txPk:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToLower
attr title "packets transmitted, sum(packetBytes)"
scalar LoopNetwork.h[1].eth[0].mac packetReceivedFromUpper:count 0
attr interpolationmode none
attr recordingmode count
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, count"
scalar LoopNetwork.h[1].eth[0].mac packetReceivedFromUpper:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, sum(packetBytes)"
scalar LoopNetwork.h[1].eth[0].mac passedUpPk:count 1
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed to higher layer, count"
scalar LoopNetwork.h[1].eth[0].mac passedUpPk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, sum(packetBytes)"
scalar LoopNetwork.h[1].eth[0].mac packetDropIncorrectlyReceived:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, count"
scalar LoopNetwork.h[1].eth[0].mac packetDropIncorrectlyReceived:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, sum(packetBytes)"
scalar LoopNetwork.h[1].eth[0].mac packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, count"
scalar LoopNetwork.h[1].eth[0].mac packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, sum(packetBytes)"
scalar LoopNetwork.h[1].eth[0].mac packetDropNotAddressedToUs:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, count"
scalar LoopNetwork.h[1].eth[0].mac packetDropNotAddressedToUs:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, sum(packetBytes)"
scalar LoopNetwork.h[1].eth[0].mac rxPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units received, count"
scalar LoopNetwork.h[1].eth[0].mac rxPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units received, sum"
scalar LoopNetwork.h[1].eth[0].mac txPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units sent, count"
scalar LoopNetwork.h[1].eth[0].mac txPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units sent, sum"
scalar LoopNetwork.h[1].eth[0].mac rxPkOk:count 1
attr interpolationmode none
attr recordingmode count
attr source rxPkOk
attr title "packets received OK, count"
scalar LoopNetwork.h[1].eth[0].mac rxPkOk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source rxPkOk
attr title "packets received OK, sum(packetBytes)"
par LoopNetwork.h[1].eth[0] typename "\"inet.linklayer.ethernet.EthernetInterface\""
par LoopNetwork.h[1].eth[0] displayStringTextFormat "\"%a (%i)\\n%m\""
par LoopNetwork.h[1].eth[0] recordPcap false
par LoopNetwork.h[1].eth[0] numPcapRecorders 0
par LoopNetwork.h[1].eth[0] interfaceTableModule "\"LoopNetwork.h[1].interfaceTable\""
par LoopNetwork.h[1].eth[0] protocol "\"ethernetmac\""
par LoopNetwork.h[1].eth[0] address "\"0A-AA-00-00-00-0B\""
attr mutable ""
par LoopNetwork.h[1].eth[0] duplexMode true
par LoopNetwork.h[1].eth[0] csmacdSupport false
par LoopNetwork.h[1].eth[0] bitrate 0bps
attr unit bps
par LoopNetwork.h[1].eth[0] fcsMode "\"declared\""
attr enum declared,computed
scalar LoopNetwork.h[1].eth[0] packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, count"
scalar LoopNetwork.h[1].eth[0] packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, sum(packetBytes)"
scalar LoopNetwork.h[1].eth[0] packetDropNoCarrier:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, count"
scalar LoopNetwork.h[1].eth[0] packetDropNoCarrier:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, sum(packetBytes)"
par LoopNetwork.h[1].ipv4.transportIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[1].ipv4.up.out[0].channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[1].ipv4.lp.out[2].channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[1].ipv4.ifIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[1].ipv4.configurator typename "\"inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator\""
par LoopNetwork.h[1].ipv4.configurator interfaceTableModule "\"LoopNetwork.h[1].interfaceTable\""
par LoopNetwork.h[1].ipv4.configurator routingTableModule "\"LoopNetwork.h[1].ipv4.routingTable\""
par LoopNetwork.h[1].ipv4.configurator networkConfiguratorModule "\"configurator\""
par LoopNetwork.h[1].ipv4.configurator configureRoutingTable true
par LoopNetwork.h[1].ipv4.routingTable typename "\"inet.networklayer.ipv4.Ipv4RoutingTable\""
par LoopNetwork.h[1].ipv4.routingTable interfaceTableModule "\"LoopNetwork.h[1].interfaceTable\""
par LoopNetwork.h[1].ipv4.routingTable routerId "\"auto\""
par LoopNetwork.h[1].ipv4.routingTable netmaskRoutes "\"*\""
par LoopNetwork.h[1].ipv4.routingTable forwarding false
par LoopNetwork.h[1].ipv4.routingTable multicastForwarding false
par LoopNetwork.h[1].ipv4.routingTable useAdminDist false
par LoopNetwork.h[1].ipv4.routingTable routingFile "\"\""
par LoopNetwork.h[1].ipv4.natTable typename "\"inet.networklayer.ipv4.Ipv4NatTable\""
par LoopNetwork.h[1].ipv4.natTable networkProtocolModule "\"^.ip\""
par LoopNetwork.h[1].ipv4.natTable config "<config/> at content:1"
par LoopNetwork.h[1].ipv4.up typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[1].ipv4.up displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[1].ipv4.up forwardServiceRegistration true
par LoopNetwork.h[1].ipv4.up forwardProtocolRegistration true
par LoopNetwork.h[1].ipv4.igmp typename "\"inet.networklayer.ipv4.Igmpv2\""
par LoopNetwork.h[1].ipv4.igmp interfaceTableModule "\"LoopNetwork.h[1].interfaceTable\""
par LoopNetwork.h[1].ipv4.igmp routingTableModule "\"LoopNetwork.h[1].ipv4.routingTable\""
par LoopNetwork.h[1].ipv4.igmp crcMode "\"declared\""
attr enum declared,computed
par LoopNetwork.h[1].ipv4.igmp enabled true
par LoopNetwork.h[1].ipv4.igmp robustnessVariable 2
par LoopNetwork.h[1].ipv4.igmp queryInterval 125s
attr unit s
par LoopNetwork.h[1].ipv4.igmp queryResponseInterval 10s
attr unit s
par LoopNetwork.h[1].ipv4.igmp groupMembershipInterval 260s
attr unit s
par LoopNetwork.h[1].ipv4.igmp otherQuerierPresentInterval 255s
attr unit s
par LoopNetwork.h[1].ipv4.igmp startupQueryInterval 31.25s
attr unit s
par LoopNetwork.h[1].ipv4.igmp startupQueryCount 2
par LoopNetwork.h[1].ipv4.igmp lastMemberQueryInterval 1s
attr unit s
par LoopNetwork.h[1].ipv4.igmp lastMemberQueryCount 2
par LoopNetwork.h[1].ipv4.igmp unsolicitedReportInterval 10s
attr unit s
par LoopNetwork.h[1].ipv4.icmp typename "\"inet.networklayer.ipv4.Icmp\""
par LoopNetwork.h[1].ipv4.icmp interfaceTableModule "\"LoopNetwork.h[1].interfaceTable\""
par LoopNetwork.h[1].ipv4.icmp routingTableModule "\"LoopNetwork.h[1].ipv4.routingTable\""
par LoopNetwork.h[1].ipv4.icmp crcMode "\"declared\""
attr enum declared,computed
attr mutable ""
par LoopNetwork.h[1].ipv4.icmp quoteLength 8B
attr mutable ""
attr unit B
par LoopNetwork.h[1].ipv4.mp typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[1].ipv4.mp displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[1].ipv4.mp forwardServiceRegistration true
par LoopNetwork.h[1].ipv4.mp forwardProtocolRegistration true
par LoopNetwork.h[1].ipv4.ip typename "\"inet.networklayer.ipv4.Ipv4\""
par LoopNetwork.h[1].ipv4.ip interfaceTableModule "\"LoopNetwork.h[1].interfaceTable\""
par LoopNetwork.h[1].ipv4.ip routingTableModule "\"LoopNetwork.h[1].ipv4.routingTable\""
par LoopNetwork.h[1].ipv4.ip arpModule "\"LoopNetwork.h[1].ipv4.arp\""
par LoopNetwork.h[1].ipv4.ip icmpModule "\"LoopNetwork.h[1].ipv4.icmp\""
par LoopNetwork.h[1].ipv4.ip crcMode "\"declared\""
attr enum declared,computed
par LoopNetwork.h[1].ipv4.ip timeToLive 32
par LoopNetwork.h[1].ipv4.ip multicastTimeToLive 32
par LoopNetwork.h[1].ipv4.ip fragmentTimeout 60s
attr unit s
par LoopNetwork.h[1].ipv4.ip limitedBroadcast false
par LoopNetwork.h[1].ipv4.ip directBroadcastInterfaces "\"\""
scalar LoopNetwork.h[1].ipv4.ip packetDropAddressResolutionFailed:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsAddressResolutionFailed(packetDropped)
attr title "packet drop: address resolution failed, count"
scalar LoopNetwork.h[1].ipv4.ip packetDropAddressResolutionFailed:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsAddressResolutionFailed(packetDropped)
attr title "packet drop: address resolution failed, sum(packetBytes)"
scalar LoopNetwork.h[1].ipv4.ip packetDropHopLimitReached:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsHopLimitReached(packetDropped)
attr title "packet drop: hop limit reached, count"
scalar LoopNetwork.h[1].ipv4.ip packetDropHopLimitReached:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsHopLimitReached(packetDropped)
attr title "packet drop: hop limit reached, sum(packetBytes)"
scalar LoopNetwork.h[1].ipv4.ip packetDropForwardingDisabled:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsForwardingDisabled(packetDropped)
attr title "packet drop: forwarding disabled, count"
scalar LoopNetwork.h[1].ipv4.ip packetDropForwardingDisabled:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsForwardingDisabled(packetDropped)
attr title "packet drop: forwarding disabled, sum(packetBytes)"
scalar LoopNetwork.h[1].ipv4.ip packetDropNoInterfaceFound:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoInterfaceFound(packetDropped)
attr title "packet drop: no interface found, count"
scalar LoopNetwork.h[1].ipv4.ip packetDropNoInterfaceFound:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoInterfaceFound(packetDropped)
attr title "packet drop: no interface found, sum(packetBytes)"
scalar LoopNetwork.h[1].ipv4.ip packetDropNoRouteFound:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoRouteFound(packetDropped)
attr title "packet drop: no route found, count"
scalar LoopNetwork.h[1].ipv4.ip packetDropNoRouteFound:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoRouteFound(packetDropped)
attr title "packet drop: no route found, sum(packetBytes)"
scalar LoopNetwork.h[1].ipv4.ip packetDropUndefined:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsUndefined(packetDropped)
attr title "packet drop: undefined, count"
scalar LoopNetwork.h[1].ipv4.ip packetDropUndefined:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsUndefined(packetDropped)
attr title "packet drop: undefined, sum(packetBytes)"
par LoopNetwork.h[1].ipv4.arp typename "\"inet.networklayer.arp.ipv4.Arp\""
par LoopNetwork.h[1].ipv4.arp interfaceTableModule "\"LoopNetwork.h[1].interfaceTable\""
par LoopNetwork.h[1].ipv4.arp routingTableModule "\"LoopNetwork.h[1].ipv4.routingTable\""
par LoopNetwork.h[1].ipv4.arp retryTimeout 1s
attr unit s
par LoopNetwork.h[1].ipv4.arp retryCount 3
par LoopNetwork.h[1].ipv4.arp cacheTimeout 120s
attr unit s
par LoopNetwork.h[1].ipv4.arp proxyArpInterfaces "\"\""
scalar LoopNetwork.h[1].ipv4.arp arpReplySent:count 0
attr recordingmode count
attr source arpReplySent
attr title "ARP replies sent, count"
scalar LoopNetwork.h[1].ipv4.arp arpReplySent:sum(packetBytes) 0
attr recordingmode sum(packetBytes)
attr source arpReplySent
attr title "ARP replies sent, sum(packetBytes)"
scalar LoopNetwork.h[1].ipv4.arp arpRequestSent:count 0
attr recordingmode count
attr source arpRequestSent
attr title "ARP request sent, count"
scalar LoopNetwork.h[1].ipv4.arp arpRequestSent:sum(packetBytes) 0
attr recordingmode sum(packetBytes)
attr source arpRequestSent
attr title "ARP request sent, sum(packetBytes)"
scalar LoopNetwork.h[1].ipv4.arp arpResolutionFailed:count 0
attr recordingmode count
attr title "ARP failed resolutions, count"
scalar LoopNetwork.h[1].ipv4.arp arpResolutionCompleted:count 0
attr recordingmode count
attr title "ARP completed resolutions, count"
scalar LoopNetwork.h[1].ipv4.arp arpResolutionInitiated:count 0
attr recordingmode count
attr title "ARP initiated resolutions, count"
par LoopNetwork.h[1].ipv4.lp typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[1].ipv4.lp displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[1].ipv4.lp forwardServiceRegistration true
par LoopNetwork.h[1].ipv4.lp forwardProtocolRegistration true
par LoopNetwork.h[1].ipv4 typename "\"inet.networklayer.ipv4.Ipv4NetworkLayer\""
par LoopNetwork.h[1].ipv4 forwarding false
par LoopNetwork.h[1].ipv4 multicastForwarding false
par LoopNetwork.h[1].ipv4 interfaceTableModule "\"LoopNetwork.h[1].interfaceTable\""
par LoopNetwork.h[1].ipv4 displayStringTextFormat "\"%i\""
par LoopNetwork.h[1].nl typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[1].nl displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[1].nl forwardServiceRegistration true
par LoopNetwork.h[1].nl forwardProtocolRegistration true
par LoopNetwork.h[1].udp typename "\"inet.transportlayer.udp.Udp\""
par LoopNetwork.h[1].udp interfaceTableModule "\"LoopNetwork.h[1].interfaceTable\""
par LoopNetwork.h[1].udp icmpModule "\"^.ipv4.icmp\""
par LoopNetwork.h[1].udp icmpv6Module "\"^.ipv6.icmpv6\""
par LoopNetwork.h[1].udp crcMode "\"declared\""
attr enum disabled,declared,computed
par LoopNetwork.h[1].udp defaultMulticastLoop true
scalar LoopNetwork.h[1].udp packetReceived:count 0
attr interpolationmode none
attr recordingmode count
attr source packetReceived
attr title "packets received, count"
scalar LoopNetwork.h[1].udp packetReceived:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceived
attr title "packets received, sum(packetBytes)"
scalar LoopNetwork.h[1].udp packetSent:count 0
attr interpolationmode none
attr recordingmode count
attr source packetSent
attr title "packets sent, count"
scalar LoopNetwork.h[1].udp packetSent:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSent
attr title "packets sent, sum(packetBytes)"
scalar LoopNetwork.h[1].udp passedUpPk:count 0
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed up, count"
scalar LoopNetwork.h[1].udp droppedPkWrongPort:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoPortFound(packetDropped)
attr title "packets dropped (wrong port), count"
scalar LoopNetwork.h[1].udp droppedPkBadChecksum:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packets dropped (checksum error), count"
par LoopNetwork.h[1].tcp typename "\"inet.transportlayer.tcp.Tcp\""
par LoopNetwork.h[1].tcp crcMode "\"declared\""
attr enum declared,computed
par LoopNetwork.h[1].tcp advertisedWindow 7504
par LoopNetwork.h[1].tcp delayedAcksEnabled false
par LoopNetwork.h[1].tcp nagleEnabled true
par LoopNetwork.h[1].tcp limitedTransmitEnabled false
par LoopNetwork.h[1].tcp increasedIWEnabled false
par LoopNetwork.h[1].tcp sackSupport false
par LoopNetwork.h[1].tcp windowScalingSupport false
par LoopNetwork.h[1].tcp windowScalingFactor -1
par LoopNetwork.h[1].tcp timestampSupport false
par LoopNetwork.h[1].tcp mss 536
par LoopNetwork.h[1].tcp msl 120s
attr unit s
par LoopNetwork.h[1].tcp tcpAlgorithmClass "\"TcpReno\""
par LoopNetwork.h[1].tcp useDataNotification false
par LoopNetwork.h[1].tcp dupthresh 3
par LoopNetwork.h[1].tcp initialSsthresh 4294967295
par LoopNetwork.h[1].tcp stopOperationExtraTime 0s
attr unit s
par LoopNetwork.h[1].tcp stopOperationTimeout 2s
attr unit s
par LoopNetwork.h[1].tcp ecnWillingness false
par LoopNetwork.h[1].tcp dctcpGamma 0.0625
par LoopNetwork.h[1].tn typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[1].tn displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[1].tn forwardServiceRegistration true
par LoopNetwork.h[1].tn forwardProtocolRegistration true
par LoopNetwork.h[1].at typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[1].at displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[1].at forwardServiceRegistration true
par LoopNetwork.h[1].at forwardProtocolRegistration true
par LoopNetwork.h[1] typename "\"inet.node.inet.StandardHost\""
par LoopNetwork.h[1] hasStatus false
par LoopNetwork.h[1] osgModel "\"\""
par LoopNetwork.h[1] osgModelColor "\"\""
par LoopNetwork.h[1] canvasImage "\"\""
par LoopNetwork.h[1] canvasImageColor "\"\""
par LoopNetwork.h[1] recordPcap false
par LoopNetwork.h[1] numPcapRecorders 0
par LoopNetwork.h[1] numLoInterfaces 1
par LoopNetwork.h[1] numWlanInterfaces 0
par LoopNetwork.h[1] numEthInterfaces 0
par LoopNetwork.h[1] numPppInterfaces 0
par LoopNetwork.h[1] numTunInterfaces 0
par LoopNetwork.h[1] numVirtInterfaces 0
par LoopNetwork.h[1] fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.h[1] hasIpv4 true
par LoopNetwork.h[1] hasIpv6 false
par LoopNetwork.h[1] hasGn false
par LoopNetwork.h[1] forwarding false
par LoopNetwork.h[1] multicastForwarding false
par LoopNetwork.h[1] hasUdp true
par LoopNetwork.h[1] hasTcp true
par LoopNetwork.h[1] hasSctp false
par LoopNetwork.h[1] numApps 0
par LoopNetwork.h[2].ethg$i[0].channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[2].eth[0].phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[2].interfaceTable typename "\"inet.networklayer.common.InterfaceTable\""
par LoopNetwork.h[2].interfaceTable displayAddresses false
par LoopNetwork.h[2].cb typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[2].cb displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[2].cb forwardServiceRegistration true
par LoopNetwork.h[2].cb forwardProtocolRegistration true
par LoopNetwork.h[2].bl typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[2].bl displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[2].bl forwardServiceRegistration true
par LoopNetwork.h[2].bl forwardProtocolRegistration true
par LoopNetwork.h[2].ethernet typename "\"inet.linklayer.ethernet.basic.EthernetEncapsulation\""
par LoopNetwork.h[2].ethernet registerProtocol true
par LoopNetwork.h[2].ethernet interfaceTableModule "\"LoopNetwork.h[2].interfaceTable\""
par LoopNetwork.h[2].ethernet fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.h[2].ethernet stopOperationExtraTime -1s
attr unit s
par LoopNetwork.h[2].ethernet stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.h[2].ethernet decapPk:count 1
attr interpolationmode none
attr recordingmode count
attr source decapPk
attr title "packets decapsulated, count"
scalar LoopNetwork.h[2].ethernet decapPk:sum(packetBytes) 52
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source decapPk
attr title "packets decapsulated, sum(packetBytes)"
scalar LoopNetwork.h[2].ethernet encapPk:count 0
attr interpolationmode none
attr recordingmode count
attr source encapPk
attr title "packets encapsulated, count"
scalar LoopNetwork.h[2].ethernet encapPk:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source encapPk
attr title "packets encapsulated, sum(packetBytes)"
scalar LoopNetwork.h[2].ethernet pauseSent:count 0
attr recordingmode count
attr title "pause sent, count"
scalar LoopNetwork.h[2].ethernet pauseSent:sum 0
attr recordingmode sum
attr title "pause sent, sum"
par LoopNetwork.h[2].li typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[2].li displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[2].li forwardServiceRegistration true
par LoopNetwork.h[2].li forwardProtocolRegistration true
par LoopNetwork.h[2].lo[0].upperLayerIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[2].lo[0].lo.upperLayerOut.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[2].lo[0].lo typename "\"inet.linklayer.loopback.Loopback\""
par LoopNetwork.h[2].lo[0].lo interfaceTableModule "\"LoopNetwork.h[2].interfaceTable\""
par LoopNetwork.h[2].lo[0].lo mtu 4470B
attr unit B
scalar LoopNetwork.h[2].lo[0].lo rcvdPkFromHl:count 0
attr interpolationmode none
attr recordingmode count
attr source packetReceivedFromUpper
attr title "packets received from higher layer, count"
scalar LoopNetwork.h[2].lo[0].lo rcvdPkFromHl:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceivedFromUpper
attr title "packets received from higher layer, sum(packetBytes)"
scalar LoopNetwork.h[2].lo[0].lo passedUpPk:count 0
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed to higher layer, count"
scalar LoopNetwork.h[2].lo[0].lo passedUpPk:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, sum(packetBytes)"
par LoopNetwork.h[2].lo[0] typename "\"inet.linklayer.loopback.LoopbackInterface\""
par LoopNetwork.h[2].lo[0] displayStringTextFormat "\"%a (%i)\\n%m\""
par LoopNetwork.h[2].lo[0] recordPcap false
par LoopNetwork.h[2].lo[0] numPcapRecorders 0
par LoopNetwork.h[2].lo[0] interfaceTableModule "\"LoopNetwork.h[2].interfaceTable\""
scalar LoopNetwork.h[2].lo[0] packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, count"
scalar LoopNetwork.h[2].lo[0] packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, sum(packetBytes)"
scalar LoopNetwork.h[2].lo[0] packetDropNoCarrier:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, count"
scalar LoopNetwork.h[2].lo[0] packetDropNoCarrier:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, sum(packetBytes)"
par LoopNetwork.h[2].eth[0].mac.phys$o.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[2].eth[0].phys$i.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[2].eth[0].upperLayerIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[2].eth[0].mac.upperLayerOut.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[2].eth[0].queue typename "\"inet.linklayer.ethernet.common.EthernetQueue\""
par LoopNetwork.h[2].eth[0].queue displayStringTextFormat "\"contains %p pk (%l) pushed %u\\npulled %o removed %r dropped %d\""
par LoopNetwork.h[2].eth[0].queue packetCapacity 1000
par LoopNetwork.h[2].eth[0].queue dataCapacity -1b
attr unit b
par LoopNetwork.h[2].eth[0].queue dropperClass "\"inet::queueing::PacketAtCollectionEndDropper\""
par LoopNetwork.h[2].eth[0].queue comparatorClass "\"inet::EthernetFrameTypeComparator\""
par LoopNetwork.h[2].eth[0].queue bufferModule "\"\""
scalar LoopNetwork.h[2].eth[0].queue queueLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, last"
attr unit pk
scalar LoopNetwork.h[2].eth[0].queue queueLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, max"
attr unit pk
scalar LoopNetwork.h[2].eth[0].queue queueLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length, timeavg"
attr unit pk
scalar LoopNetwork.h[2].eth[0].queue queueBitLength:last 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode last
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, last"
attr unit b
scalar LoopNetwork.h[2].eth[0].queue queueBitLength:max 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode max
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, max"
attr unit b
scalar LoopNetwork.h[2].eth[0].queue queueBitLength:timeavg 0
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode timeavg
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length, timeavg"
attr unit b
statistic LoopNetwork.h[2].eth[0].queue queueingTime:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(packetPulled)
attr title "queueing times"
attr unit s
bin	-inf	0
bin	0	0
bin	1	0
scalar LoopNetwork.h[2].eth[0].queue outgoingPackets:count 0
attr recordingmode count
attr source packetPulled
attr title "outgoing packets, count"
attr unit pk
scalar LoopNetwork.h[2].eth[0].queue outgoingPacketLengths:sum 0
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPulled)
attr title "outgoing packet lengths, sum"
attr unit b
statistic LoopNetwork.h[2].eth[0].queue outgoingPacketLengths:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPulled)
attr title "outgoing packet lengths"
attr unit b
bin	-inf	0
bin	0	0
bin	1	0
statistic LoopNetwork.h[2].eth[0].queue flowQueueingTime:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source queueingTime(demuxFlow(packetPulled))
attr title "flow queueing times"
attr unit s
bin	-inf	0
bin	0	0
bin	1	0
scalar LoopNetwork.h[2].eth[0].queue incomingPackets:count 0
attr recordingmode count
attr source packetPushStarted
attr title "incoming packets, count"
attr unit pk
scalar LoopNetwork.h[2].eth[0].queue incomingPacketLengths:sum 0
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths, sum"
attr unit b
statistic LoopNetwork.h[2].eth[0].queue incomingPacketLengths:histogram
field count 0
field mean nan
field stddev nan
field min nan
field max nan
field sum 0
field sqrsum 0
attr interpolationmode none
attr recordingmode histogram
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths"
attr unit b
bin	-inf	0
bin	0	0
bin	1	0
scalar LoopNetwork.h[2].eth[0].queue droppedPacketsQueueOverflow:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsQueueOverflow(packetDropped)
attr title "dropped packets: queue overflow, count"
attr unit pk
scalar LoopNetwork.h[2].eth[0].queue droppedPacketLengthsQueueOverflow:sum 0
attr interpolationmode none
attr recordingmode sum
attr source packetLength(packetDropReasonIsQueueOverflow(packetDropped))
attr title "dropped packet lengths: queue overflow, sum"
attr unit b
par LoopNetwork.h[2].eth[0].mac typename "\"inet.linklayer.ethernet.basic.EthernetMac\""
par LoopNetwork.h[2].eth[0].mac interfaceTableModule "\"LoopNetwork.h[2].interfaceTable\""
par LoopNetwork.h[2].eth[0].mac displayStringTextFormat "\"rate: %b\\nsent: %s, rcvd: %r\\nqueue: %q, drop: %d\""
par LoopNetwork.h[2].eth[0].mac sendRawBytes false
par LoopNetwork.h[2].eth[0].mac promiscuous false
par LoopNetwork.h[2].eth[0].mac duplexMode true
par LoopNetwork.h[2].eth[0].mac mtu 1500B
attr unit B
par LoopNetwork.h[2].eth[0].mac fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.h[2].eth[0].mac stopOperationExtraTime -1s
attr unit s
par LoopNetwork.h[2].eth[0].mac stopOperationTimeout 2s
attr unit s
scalar LoopNetwork.h[2].eth[0].mac "simulated time" 5313.5759468249
scalar LoopNetwork.h[2].eth[0].mac full-duplex 1
scalar LoopNetwork.h[2].eth[0].mac "frames/sec sent" 0
scalar LoopNetwork.h[2].eth[0].mac "frames/sec rcvd" 0.00018819717832349
scalar LoopNetwork.h[2].eth[0].mac "bits/sec sent" 0
scalar LoopNetwork.h[2].eth[0].mac "bits/sec rcvd" 0.10539041986115
scalar LoopNetwork.h[2].eth[0].mac "rx channel idle (%)" 99.999999882565
scalar LoopNetwork.h[2].eth[0].mac "rx channel utilization (%)" 1.1743503927386e-07
scalar LoopNetwork.h[2].eth[0].mac txPk:count 0
attr interpolationmode none
attr recordingmode count
attr source packetSentToLower
attr title "packets transmitted, count"
scalar LoopNetwork.h[2].eth[0].mac txPk:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToLower
attr title "packets transmitted, sum(packetBytes)"
scalar LoopNetwork.h[2].eth[0].mac packetReceivedFromUpper:count 0
attr interpolationmode none
attr recordingmode count
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, count"
scalar LoopNetwork.h[2].eth[0].mac packetReceivedFromUpper:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, sum(packetBytes)"
scalar LoopNetwork.h[2].eth[0].mac passedUpPk:count 1
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed to higher layer, count"
scalar LoopNetwork.h[2].eth[0].mac passedUpPk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, sum(packetBytes)"
scalar LoopNetwork.h[2].eth[0].mac packetDropIncorrectlyReceived:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, count"
scalar LoopNetwork.h[2].eth[0].mac packetDropIncorrectlyReceived:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packet drop: incorrectly received, sum(packetBytes)"
scalar LoopNetwork.h[2].eth[0].mac packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, count"
scalar LoopNetwork.h[2].eth[0].mac packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drop: interface down, sum(packetBytes)"
scalar LoopNetwork.h[2].eth[0].mac packetDropNotAddressedToUs:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, count"
scalar LoopNetwork.h[2].eth[0].mac packetDropNotAddressedToUs:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNotAddressedToUs(packetDropped)
attr title "packet drop: not addressed to us, sum(packetBytes)"
scalar LoopNetwork.h[2].eth[0].mac rxPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units received, count"
scalar LoopNetwork.h[2].eth[0].mac rxPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units received, sum"
scalar LoopNetwork.h[2].eth[0].mac txPausePkUnits:count 0
attr interpolationmode none
attr recordingmode count
attr title "pause units sent, count"
scalar LoopNetwork.h[2].eth[0].mac txPausePkUnits:sum 0
attr interpolationmode none
attr recordingmode sum
attr title "pause units sent, sum"
scalar LoopNetwork.h[2].eth[0].mac rxPkOk:count 1
attr interpolationmode none
attr recordingmode count
attr source rxPkOk
attr title "packets received OK, count"
scalar LoopNetwork.h[2].eth[0].mac rxPkOk:sum(packetBytes) 70
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source rxPkOk
attr title "packets received OK, sum(packetBytes)"
par LoopNetwork.h[2].eth[0] typename "\"inet.linklayer.ethernet.EthernetInterface\""
par LoopNetwork.h[2].eth[0] displayStringTextFormat "\"%a (%i)\\n%m\""
par LoopNetwork.h[2].eth[0] recordPcap false
par LoopNetwork.h[2].eth[0] numPcapRecorders 0
par LoopNetwork.h[2].eth[0] interfaceTableModule "\"LoopNetwork.h[2].interfaceTable\""
par LoopNetwork.h[2].eth[0] protocol "\"ethernetmac\""
par LoopNetwork.h[2].eth[0] address "\"0A-AA-00-00-00-0C\""
attr mutable ""
par LoopNetwork.h[2].eth[0] duplexMode true
par LoopNetwork.h[2].eth[0] csmacdSupport false
par LoopNetwork.h[2].eth[0] bitrate 0bps
attr unit bps
par LoopNetwork.h[2].eth[0] fcsMode "\"declared\""
attr enum declared,computed
scalar LoopNetwork.h[2].eth[0] packetDropInterfaceDown:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, count"
scalar LoopNetwork.h[2].eth[0] packetDropInterfaceDown:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsInterfaceDown(packetDropped)
attr title "packet drops: interface down, sum(packetBytes)"
scalar LoopNetwork.h[2].eth[0] packetDropNoCarrier:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, count"
scalar LoopNetwork.h[2].eth[0] packetDropNoCarrier:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoCarrier(packetDropped)
attr title "packet drops: no carrier, sum(packetBytes)"
par LoopNetwork.h[2].ipv4.transportIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[2].ipv4.up.out[0].channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[2].ipv4.lp.out[2].channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[2].ipv4.ifIn.channel typename "\"ned.IdealChannel\""
par LoopNetwork.h[2].ipv4.configurator typename "\"inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator\""
par LoopNetwork.h[2].ipv4.configurator interfaceTableModule "\"LoopNetwork.h[2].interfaceTable\""
par LoopNetwork.h[2].ipv4.configurator routingTableModule "\"LoopNetwork.h[2].ipv4.routingTable\""
par LoopNetwork.h[2].ipv4.configurator networkConfiguratorModule "\"configurator\""
par LoopNetwork.h[2].ipv4.configurator configureRoutingTable true
par LoopNetwork.h[2].ipv4.routingTable typename "\"inet.networklayer.ipv4.Ipv4RoutingTable\""
par LoopNetwork.h[2].ipv4.routingTable interfaceTableModule "\"LoopNetwork.h[2].interfaceTable\""
par LoopNetwork.h[2].ipv4.routingTable routerId "\"auto\""
par LoopNetwork.h[2].ipv4.routingTable netmaskRoutes "\"*\""
par LoopNetwork.h[2].ipv4.routingTable forwarding false
par LoopNetwork.h[2].ipv4.routingTable multicastForwarding false
par LoopNetwork.h[2].ipv4.routingTable useAdminDist false
par LoopNetwork.h[2].ipv4.routingTable routingFile "\"\""
par LoopNetwork.h[2].ipv4.natTable typename "\"inet.networklayer.ipv4.Ipv4NatTable\""
par LoopNetwork.h[2].ipv4.natTable networkProtocolModule "\"^.ip\""
par LoopNetwork.h[2].ipv4.natTable config "<config/> at content:1"
par LoopNetwork.h[2].ipv4.up typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[2].ipv4.up displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[2].ipv4.up forwardServiceRegistration true
par LoopNetwork.h[2].ipv4.up forwardProtocolRegistration true
par LoopNetwork.h[2].ipv4.igmp typename "\"inet.networklayer.ipv4.Igmpv2\""
par LoopNetwork.h[2].ipv4.igmp interfaceTableModule "\"LoopNetwork.h[2].interfaceTable\""
par LoopNetwork.h[2].ipv4.igmp routingTableModule "\"LoopNetwork.h[2].ipv4.routingTable\""
par LoopNetwork.h[2].ipv4.igmp crcMode "\"declared\""
attr enum declared,computed
par LoopNetwork.h[2].ipv4.igmp enabled true
par LoopNetwork.h[2].ipv4.igmp robustnessVariable 2
par LoopNetwork.h[2].ipv4.igmp queryInterval 125s
attr unit s
par LoopNetwork.h[2].ipv4.igmp queryResponseInterval 10s
attr unit s
par LoopNetwork.h[2].ipv4.igmp groupMembershipInterval 260s
attr unit s
par LoopNetwork.h[2].ipv4.igmp otherQuerierPresentInterval 255s
attr unit s
par LoopNetwork.h[2].ipv4.igmp startupQueryInterval 31.25s
attr unit s
par LoopNetwork.h[2].ipv4.igmp startupQueryCount 2
par LoopNetwork.h[2].ipv4.igmp lastMemberQueryInterval 1s
attr unit s
par LoopNetwork.h[2].ipv4.igmp lastMemberQueryCount 2
par LoopNetwork.h[2].ipv4.igmp unsolicitedReportInterval 10s
attr unit s
par LoopNetwork.h[2].ipv4.icmp typename "\"inet.networklayer.ipv4.Icmp\""
par LoopNetwork.h[2].ipv4.icmp interfaceTableModule "\"LoopNetwork.h[2].interfaceTable\""
par LoopNetwork.h[2].ipv4.icmp routingTableModule "\"LoopNetwork.h[2].ipv4.routingTable\""
par LoopNetwork.h[2].ipv4.icmp crcMode "\"declared\""
attr enum declared,computed
attr mutable ""
par LoopNetwork.h[2].ipv4.icmp quoteLength 8B
attr mutable ""
attr unit B
par LoopNetwork.h[2].ipv4.mp typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[2].ipv4.mp displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[2].ipv4.mp forwardServiceRegistration true
par LoopNetwork.h[2].ipv4.mp forwardProtocolRegistration true
par LoopNetwork.h[2].ipv4.ip typename "\"inet.networklayer.ipv4.Ipv4\""
par LoopNetwork.h[2].ipv4.ip interfaceTableModule "\"LoopNetwork.h[2].interfaceTable\""
par LoopNetwork.h[2].ipv4.ip routingTableModule "\"LoopNetwork.h[2].ipv4.routingTable\""
par LoopNetwork.h[2].ipv4.ip arpModule "\"LoopNetwork.h[2].ipv4.arp\""
par LoopNetwork.h[2].ipv4.ip icmpModule "\"LoopNetwork.h[2].ipv4.icmp\""
par LoopNetwork.h[2].ipv4.ip crcMode "\"declared\""
attr enum declared,computed
par LoopNetwork.h[2].ipv4.ip timeToLive 32
par LoopNetwork.h[2].ipv4.ip multicastTimeToLive 32
par LoopNetwork.h[2].ipv4.ip fragmentTimeout 60s
attr unit s
par LoopNetwork.h[2].ipv4.ip limitedBroadcast false
par LoopNetwork.h[2].ipv4.ip directBroadcastInterfaces "\"\""
scalar LoopNetwork.h[2].ipv4.ip packetDropAddressResolutionFailed:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsAddressResolutionFailed(packetDropped)
attr title "packet drop: address resolution failed, count"
scalar LoopNetwork.h[2].ipv4.ip packetDropAddressResolutionFailed:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsAddressResolutionFailed(packetDropped)
attr title "packet drop: address resolution failed, sum(packetBytes)"
scalar LoopNetwork.h[2].ipv4.ip packetDropHopLimitReached:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsHopLimitReached(packetDropped)
attr title "packet drop: hop limit reached, count"
scalar LoopNetwork.h[2].ipv4.ip packetDropHopLimitReached:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsHopLimitReached(packetDropped)
attr title "packet drop: hop limit reached, sum(packetBytes)"
scalar LoopNetwork.h[2].ipv4.ip packetDropForwardingDisabled:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsForwardingDisabled(packetDropped)
attr title "packet drop: forwarding disabled, count"
scalar LoopNetwork.h[2].ipv4.ip packetDropForwardingDisabled:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsForwardingDisabled(packetDropped)
attr title "packet drop: forwarding disabled, sum(packetBytes)"
scalar LoopNetwork.h[2].ipv4.ip packetDropNoInterfaceFound:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoInterfaceFound(packetDropped)
attr title "packet drop: no interface found, count"
scalar LoopNetwork.h[2].ipv4.ip packetDropNoInterfaceFound:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoInterfaceFound(packetDropped)
attr title "packet drop: no interface found, sum(packetBytes)"
scalar LoopNetwork.h[2].ipv4.ip packetDropNoRouteFound:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoRouteFound(packetDropped)
attr title "packet drop: no route found, count"
scalar LoopNetwork.h[2].ipv4.ip packetDropNoRouteFound:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsNoRouteFound(packetDropped)
attr title "packet drop: no route found, sum(packetBytes)"
scalar LoopNetwork.h[2].ipv4.ip packetDropUndefined:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsUndefined(packetDropped)
attr title "packet drop: undefined, count"
scalar LoopNetwork.h[2].ipv4.ip packetDropUndefined:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetDropReasonIsUndefined(packetDropped)
attr title "packet drop: undefined, sum(packetBytes)"
par LoopNetwork.h[2].ipv4.arp typename "\"inet.networklayer.arp.ipv4.Arp\""
par LoopNetwork.h[2].ipv4.arp interfaceTableModule "\"LoopNetwork.h[2].interfaceTable\""
par LoopNetwork.h[2].ipv4.arp routingTableModule "\"LoopNetwork.h[2].ipv4.routingTable\""
par LoopNetwork.h[2].ipv4.arp retryTimeout 1s
attr unit s
par LoopNetwork.h[2].ipv4.arp retryCount 3
par LoopNetwork.h[2].ipv4.arp cacheTimeout 120s
attr unit s
par LoopNetwork.h[2].ipv4.arp proxyArpInterfaces "\"\""
scalar LoopNetwork.h[2].ipv4.arp arpReplySent:count 0
attr recordingmode count
attr source arpReplySent
attr title "ARP replies sent, count"
scalar LoopNetwork.h[2].ipv4.arp arpReplySent:sum(packetBytes) 0
attr recordingmode sum(packetBytes)
attr source arpReplySent
attr title "ARP replies sent, sum(packetBytes)"
scalar LoopNetwork.h[2].ipv4.arp arpRequestSent:count 0
attr recordingmode count
attr source arpRequestSent
attr title "ARP request sent, count"
scalar LoopNetwork.h[2].ipv4.arp arpRequestSent:sum(packetBytes) 0
attr recordingmode sum(packetBytes)
attr source arpRequestSent
attr title "ARP request sent, sum(packetBytes)"
scalar LoopNetwork.h[2].ipv4.arp arpResolutionFailed:count 0
attr recordingmode count
attr title "ARP failed resolutions, count"
scalar LoopNetwork.h[2].ipv4.arp arpResolutionCompleted:count 0
attr recordingmode count
attr title "ARP completed resolutions, count"
scalar LoopNetwork.h[2].ipv4.arp arpResolutionInitiated:count 0
attr recordingmode count
attr title "ARP initiated resolutions, count"
par LoopNetwork.h[2].ipv4.lp typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[2].ipv4.lp displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[2].ipv4.lp forwardServiceRegistration true
par LoopNetwork.h[2].ipv4.lp forwardProtocolRegistration true
par LoopNetwork.h[2].ipv4 typename "\"inet.networklayer.ipv4.Ipv4NetworkLayer\""
par LoopNetwork.h[2].ipv4 forwarding false
par LoopNetwork.h[2].ipv4 multicastForwarding false
par LoopNetwork.h[2].ipv4 interfaceTableModule "\"LoopNetwork.h[2].interfaceTable\""
par LoopNetwork.h[2].ipv4 displayStringTextFormat "\"%i\""
par LoopNetwork.h[2].nl typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[2].nl displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[2].nl forwardServiceRegistration true
par LoopNetwork.h[2].nl forwardProtocolRegistration true
par LoopNetwork.h[2].udp typename "\"inet.transportlayer.udp.Udp\""
par LoopNetwork.h[2].udp interfaceTableModule "\"LoopNetwork.h[2].interfaceTable\""
par LoopNetwork.h[2].udp icmpModule "\"^.ipv4.icmp\""
par LoopNetwork.h[2].udp icmpv6Module "\"^.ipv6.icmpv6\""
par LoopNetwork.h[2].udp crcMode "\"declared\""
attr enum disabled,declared,computed
par LoopNetwork.h[2].udp defaultMulticastLoop true
scalar LoopNetwork.h[2].udp packetReceived:count 0
attr interpolationmode none
attr recordingmode count
attr source packetReceived
attr title "packets received, count"
scalar LoopNetwork.h[2].udp packetReceived:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetReceived
attr title "packets received, sum(packetBytes)"
scalar LoopNetwork.h[2].udp packetSent:count 0
attr interpolationmode none
attr recordingmode count
attr source packetSent
attr title "packets sent, count"
scalar LoopNetwork.h[2].udp packetSent:sum(packetBytes) 0
attr interpolationmode none
attr recordingmode sum(packetBytes)
attr source packetSent
attr title "packets sent, sum(packetBytes)"
scalar LoopNetwork.h[2].udp passedUpPk:count 0
attr interpolationmode none
attr recordingmode count
attr source packetSentToUpper
attr title "packets passed up, count"
scalar LoopNetwork.h[2].udp droppedPkWrongPort:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsNoPortFound(packetDropped)
attr title "packets dropped (wrong port), count"
scalar LoopNetwork.h[2].udp droppedPkBadChecksum:count 0
attr interpolationmode none
attr recordingmode count
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packets dropped (checksum error), count"
par LoopNetwork.h[2].tcp typename "\"inet.transportlayer.tcp.Tcp\""
par LoopNetwork.h[2].tcp crcMode "\"declared\""
attr enum declared,computed
par LoopNetwork.h[2].tcp advertisedWindow 7504
par LoopNetwork.h[2].tcp delayedAcksEnabled false
par LoopNetwork.h[2].tcp nagleEnabled true
par LoopNetwork.h[2].tcp limitedTransmitEnabled false
par LoopNetwork.h[2].tcp increasedIWEnabled false
par LoopNetwork.h[2].tcp sackSupport false
par LoopNetwork.h[2].tcp windowScalingSupport false
par LoopNetwork.h[2].tcp windowScalingFactor -1
par LoopNetwork.h[2].tcp timestampSupport false
par LoopNetwork.h[2].tcp mss 536
par LoopNetwork.h[2].tcp msl 120s
attr unit s
par LoopNetwork.h[2].tcp tcpAlgorithmClass "\"TcpReno\""
par LoopNetwork.h[2].tcp useDataNotification false
par LoopNetwork.h[2].tcp dupthresh 3
par LoopNetwork.h[2].tcp initialSsthresh 4294967295
par LoopNetwork.h[2].tcp stopOperationExtraTime 0s
attr unit s
par LoopNetwork.h[2].tcp stopOperationTimeout 2s
attr unit s
par LoopNetwork.h[2].tcp ecnWillingness false
par LoopNetwork.h[2].tcp dctcpGamma 0.0625
par LoopNetwork.h[2].tn typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[2].tn displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[2].tn forwardServiceRegistration true
par LoopNetwork.h[2].tn forwardProtocolRegistration true
par LoopNetwork.h[2].at typename "\"inet.common.MessageDispatcher\""
par LoopNetwork.h[2].at displayStringTextFormat "\"processed %p pk (%l)\""
par LoopNetwork.h[2].at forwardServiceRegistration true
par LoopNetwork.h[2].at forwardProtocolRegistration true
par LoopNetwork.h[2] typename "\"inet.node.inet.StandardHost\""
par LoopNetwork.h[2] hasStatus false
par LoopNetwork.h[2] osgModel "\"\""
par LoopNetwork.h[2] osgModelColor "\"\""
par LoopNetwork.h[2] canvasImage "\"\""
par LoopNetwork.h[2] canvasImageColor "\"\""
par LoopNetwork.h[2] recordPcap false
par LoopNetwork.h[2] numPcapRecorders 0
par LoopNetwork.h[2] numLoInterfaces 1
par LoopNetwork.h[2] numWlanInterfaces 0
par LoopNetwork.h[2] numEthInterfaces 0
par LoopNetwork.h[2] numPppInterfaces 0
par LoopNetwork.h[2] numTunInterfaces 0
par LoopNetwork.h[2] numVirtInterfaces 0
par LoopNetwork.h[2] fcsMode "\"declared\""
attr enum declared,computed
par LoopNetwork.h[2] hasIpv4 true
par LoopNetwork.h[2] hasIpv6 false
par LoopNetwork.h[2] hasGn false
par LoopNetwork.h[2] forwarding false
par LoopNetwork.h[2] multicastForwarding false
par LoopNetwork.h[2] hasUdp true
par LoopNetwork.h[2] hasTcp true
par LoopNetwork.h[2] hasSctp false
par LoopNetwork.h[2] numApps 0
par LoopNetwork typename "\"LoopNetwork\""

